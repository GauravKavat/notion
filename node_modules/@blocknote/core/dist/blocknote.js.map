{"version":3,"file":"blocknote.js","sources":["../src/i18n/locales/ar.ts","../src/i18n/locales/de.ts","../src/i18n/locales/en.ts","../src/i18n/locales/es.ts","../src/i18n/locales/fr.ts","../src/i18n/locales/is.ts","../src/i18n/locales/ja.ts","../src/i18n/locales/ko.ts","../src/i18n/locales/nl.ts","../src/i18n/locales/pl.ts","../src/i18n/locales/pt.ts","../src/i18n/locales/ru.ts","../src/i18n/locales/vi.ts","../src/i18n/locales/zh.ts","../src/util/esmDependencies.ts","../src/extensions/UniqueID/UniqueID.ts","../src/api/getBlockInfoFromPos.ts","../src/schema/inlineContent/types.ts","../src/util/typescript.ts","../src/api/nodeConversions/nodeConversions.ts","../src/api/exporters/html/util/sharedHTMLConversion.ts","../src/api/exporters/html/util/simplifyBlocksRehypePlugin.ts","../src/api/exporters/html/externalHTMLExporter.ts","../src/api/exporters/html/internalHTMLSerializer.ts","../src/api/getCurrentBlockContentType.ts","../src/util/browser.ts","../src/blocks/defaultBlockHelpers.ts","../src/blocks/defaultProps.ts","../src/util/string.ts","../src/schema/blocks/internal.ts","../src/schema/blocks/createSpec.ts","../src/schema/inlineContent/internal.ts","../src/schema/inlineContent/createSpec.ts","../src/schema/styles/internal.ts","../src/schema/styles/createSpec.ts","../src/blocks/FileBlockContent/fileBlockHelpers.ts","../src/blocks/AudioBlockContent/audioBlockHelpers.ts","../src/blocks/AudioBlockContent/AudioBlockContent.ts","../src/blocks/FileBlockContent/FileBlockContent.ts","../src/blocks/FileBlockContent/uploadToTmpFilesDotOrg_DEV_ONLY.ts","../src/blocks/ImageBlockContent/imageBlockHelpers.ts","../src/blocks/ImageBlockContent/ImageBlockContent.ts","../src/blocks/VideoBlockContent/videoBlockHelpers.ts","../src/blocks/VideoBlockContent/VideoBlockContent.ts","../src/extensions/BackgroundColor/BackgroundColorMark.ts","../src/extensions/TextColor/TextColorMark.ts","../src/blocks/HeadingBlockContent/HeadingBlockContent.ts","../src/blocks/ListItemBlockContent/ListItemKeyboardShortcuts.ts","../src/blocks/ListItemBlockContent/BulletListItemBlockContent/BulletListItemBlockContent.ts","../src/blocks/ListItemBlockContent/NumberedListItemBlockContent/NumberedListIndexingPlugin.ts","../src/blocks/ListItemBlockContent/NumberedListItemBlockContent/NumberedListItemBlockContent.ts","../src/blocks/ListItemBlockContent/CheckListItemBlockContent/CheckListItemBlockContent.ts","../src/blocks/ParagraphBlockContent/ParagraphBlockContent.ts","../src/blocks/TableBlockContent/TableExtension.ts","../src/blocks/TableBlockContent/TableBlockContent.ts","../src/blocks/defaultBlocks.ts","../src/blocks/defaultBlockTypeGuards.ts","../src/api/nodeUtil.ts","../src/api/blockManipulation/blockManipulation.ts","../src/api/exporters/markdown/removeUnderlinesRehypePlugin.ts","../src/api/exporters/markdown/util/addSpacesToCheckboxesRehypePlugin.ts","../src/api/exporters/markdown/markdownExporter.ts","../src/api/parsers/html/util/nestedLists.ts","../src/api/parsers/html/parseHTML.ts","../src/api/parsers/markdown/parseMarkdown.ts","../src/util/EventEmitter.ts","../src/extensions/FilePanel/FilePanelPlugin.ts","../src/extensions/FormattingToolbar/FormattingToolbarPlugin.ts","../src/extensions/LinkToolbar/LinkToolbarPlugin.ts","../src/extensions/SideMenu/MultipleNodeSelection.ts","../src/extensions/SideMenu/SideMenuPlugin.ts","../src/extensions/SuggestionMenu/SuggestionPlugin.ts","../src/extensions/TableHandles/TableHandlesPlugin.ts","../src/api/clipboard/toClipboard/copyExtension.ts","../src/api/clipboard/fromClipboard/acceptedMIMETypes.ts","../src/api/clipboard/fromClipboard/handleFileInsertion.ts","../src/api/clipboard/fromClipboard/fileDropExtension.ts","../src/api/clipboard/fromClipboard/pasteExtension.ts","../src/extensions/BackgroundColor/BackgroundColorExtension.ts","../src/extensions/TextAlignment/TextAlignmentExtension.ts","../src/extensions/TextColor/TextColorExtension.ts","../src/extensions/TrailingNode/TrailingNodeExtension.ts","../src/extensions/NonEditableBlocks/NonEditableBlockPlugin.ts","../src/pm-nodes/BlockContainer.ts","../src/pm-nodes/BlockGroup.ts","../src/pm-nodes/Doc.ts","../src/editor/BlockNoteExtensions.ts","../src/editor/transformPasted.ts","../src/editor/BlockNoteSchema.ts","../src/editor/BlockNoteTipTapEditor.ts","../src/extensions/Placeholder/PlaceholderPlugin.ts","../src/extensions/PreviousBlockType/PreviousBlockTypePlugin.ts","../src/editor/BlockNoteEditor.ts","../src/extensions/SuggestionMenu/getDefaultEmojiPickerItems.ts","../src/extensions/SuggestionMenu/getDefaultSlashMenuItems.ts","../src/api/testUtil/partialBlockTestUtil.ts"],"sourcesContent":["import type { Dictionary } from \"../dictionary\";\n\nexport const ar: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"عنوان 1\",\n      subtext: \"يستخدم لعناوين المستوى الأعلى\",\n      aliases: [\"ع\", \"عنوان1\", \"ع1\"],\n      group: \"العناوين\",\n    },\n    heading_2: {\n      title: \"عنوان 2\",\n      subtext: \"يستخدم للأقسام الرئيسية\",\n      aliases: [\"ع2\", \"عنوان2\", \"عنوان فرعي\"],\n      group: \"العناوين\",\n    },\n    heading_3: {\n      title: \"عنوان 3\",\n      subtext: \"يستخدم للأقسام الفرعية والعناوين المجموعة\",\n      aliases: [\"ع3\", \"عنوان3\", \"عنوان فرعي\"],\n      group: \"العناوين\",\n    },\n    numbered_list: {\n      title: \"قائمة مرقمة\",\n      subtext: \"تستخدم لعرض قائمة مرقمة\",\n      aliases: [\"ق\", \"عناصر قائمة\", \"قائمة\", \"قائمة مرقمة\"],\n      group: \"الكتل الأساسية\",\n    },\n    bullet_list: {\n      title: \"قائمة نقطية\",\n      subtext: \"تستخدم لعرض قائمة غير مرتبة\",\n      aliases: [\"ق\", \"عناصر قائمة\", \"قائمة\", \"قائمة نقطية\"],\n      group: \"الكتل الأساسية\",\n    },\n    check_list: {\n      title: \"قائمة تحقق\",\n      subtext: \"تستخدم لعرض قائمة بمربعات التحقق\",\n      aliases: [\n        \"قوائم غير مرتبة\",\n        \"عناصر قائمة\",\n        \"قائمة\",\n        \"قائمة تحقق\",\n        \"قائمة التحقق\",\n        \"قائمة مشطوبة\",\n        \"مربع التحقق\",\n      ],\n      group: \"الكتل الأساسية\",\n    },\n    paragraph: {\n      title: \"فقرة\",\n      subtext: \"تستخدم لنص الوثيقة الأساسي\",\n      aliases: [\"ف\", \"فقرة\"],\n      group: \"الكتل الأساسية\",\n    },\n    table: {\n      title: \"جدول\",\n      subtext: \"يستخدم للجداول\",\n      aliases: [\"جدول\"],\n      group: \"متقدم\",\n    },\n    image: {\n      title: \"صورة\",\n      subtext: \"إدراج صورة\",\n      aliases: [\"صورة\", \"رفع صورة\", \"تحميل\", \"صورة\", \"صورة\", \"وسائط\", \"رابط\"],\n      group: \"وسائط\",\n    },\n    video: {\n      title: \"فيديو\",\n      subtext: \"إدراج فيديو\",\n      aliases: [\n        \"فيديو\",\n        \"رفع فيديو\",\n        \"تحميل\",\n        \"فيديو\",\n        \"فيلم\",\n        \"وسائط\",\n        \"رابط\",\n      ],\n      group: \"وسائط\",\n    },\n    audio: {\n      title: \"صوت\",\n      subtext: \"إدراج صوت\",\n      aliases: [\"صوت\", \"رفع صوت\", \"تحميل\", \"صوت\", \"صوت\", \"وسائط\", \"رابط\"],\n      group: \"وسائط\",\n    },\n    file: {\n      title: \"ملف\",\n      subtext: \"إدراج ملف\",\n      aliases: [\"ملف\", \"تحميل\", \"تضمين\", \"وسائط\", \"رابط\"],\n      group: \"وسائط\",\n    },\n    emoji: {\n      title: \"الرموز التعبيرية\",\n      subtext: \"تُستخدم لإدراج رمز تعبيري\",\n      aliases: [\"رمز تعبيري\", \"إيموجي\", \"إيموت\", \"عاطفة\", \"وجه\"],\n      group: \"آخرون\",\n    },\n  },\n  placeholders: {\n    default: \"أدخل نصًا أو اكتب '/' للأوامر\",\n    heading: \"عنوان\",\n    bulletListItem: \"قائمة\",\n    numberedListItem: \"قائمة\",\n    checkListItem: \"قائمة\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"إضافة صورة\",\n    },\n    video: {\n      add_button_text: \"إضافة فيديو\",\n    },\n    audio: {\n      add_button_text: \"إضافة صوت\",\n    },\n    file: {\n      add_button_text: \"إضافة ملف\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"إضافة محتوي\",\n    drag_handle_label: \"فتح قائمة المحتويات\",\n  },\n  drag_handle: {\n    delete_menuitem: \"حذف\",\n    colors_menuitem: \"ألوان\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"حذف عمود\",\n    delete_row_menuitem: \"حذف صف\",\n    add_left_menuitem: \"إضافة عمود إلى اليسار\",\n    add_right_menuitem: \"إضافة عمود إلى اليمين\",\n    add_above_menuitem: \"إضافة صف أعلى\",\n    add_below_menuitem: \"إضافة صف أسفل\",\n  },\n  suggestion_menu: {\n    no_items_title: \"لم يتم العثور على عناصر\",\n    loading: \"جارٍ التحميل…\",\n  },\n  color_picker: {\n    text_title: \"نص\",\n    background_title: \"خلفية\",\n    colors: {\n      default: \"افتراضي\",\n      gray: \"رمادي\",\n      brown: \"بني\",\n      red: \"أحمر\",\n      orange: \"برتقالي\",\n      yellow: \"أصفر\",\n      green: \"أخضر\",\n      blue: \"أزرق\",\n      purple: \"أرجواني\",\n      pink: \"وردي\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"عريض\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"مائل\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"تحته خط\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"مشطوب\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"كود\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"ألوان\",\n    },\n    link: {\n      tooltip: \"إنشاء رابط\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"تحرير التسمية التوضيحية\",\n      input_placeholder: \"تحرير التسمية التوضيحية\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"استبدال الصورة\",\n        video: \"استبدال الفيديو\",\n        audio: \"استبدال الصوت\",\n        file: \"استبدال الملف\",\n      } as Record<string, string>,\n    },\n    file_rename: {\n      tooltip: {\n        image: \"إعادة تسمية الصورة\",\n        video: \"إعادة تسمية الفيديو\",\n        audio: \"إعادة تسمية الصوت\",\n        file: \"إعادة تسمية الملف\",\n      } as Record<string, string>,\n      input_placeholder: {\n        image: \"إعادة تسمية الصورة\",\n        video: \"إعادة تسمية الفيديو\",\n        audio: \"إعادة تسمية الصوت\",\n        file: \"إعادة تسمية الملف\",\n      } as Record<string, string>,\n    },\n    file_download: {\n      tooltip: {\n        image: \"تنزيل الصورة\",\n        video: \"تنزيل الفيديو\",\n        audio: \"تنزيل الصوت\",\n        file: \"تنزيل الملف\",\n      } as Record<string, string>,\n    },\n    file_delete: {\n      tooltip: {\n        image: \"حذف الصورة\",\n        video: \"حذف الفيديو\",\n        audio: \"حذف الصوت\",\n        file: \"حذف الملف\",\n      } as Record<string, string>,\n    },\n    file_preview_toggle: {\n      tooltip: \"تبديل المعاينة\",\n    },\n    nest: {\n      tooltip: \"محتويات متداخلة\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"إلغاء التداخل\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"محاذاة النص إلى اليسار\",\n    },\n    align_center: {\n      tooltip: \"محاذاة النص في المنتصف\",\n    },\n    align_right: {\n      tooltip: \"محاذاة النص إلى اليمين\",\n    },\n    align_justify: {\n      tooltip: \"ضبط النص\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"تحميل\",\n      file_placeholder: {\n        image: \"تحميل صورة\",\n        video: \"تحميل فيديو\",\n        audio: \"تحميل صوت\",\n        file: \"تحميل ملف\",\n      } as Record<string, string>,\n      upload_error: \"خطأ: فشل التحميل\",\n    },\n    embed: {\n      title: \"تضمين\",\n      embed_button: {\n        image: \"تضمين صورة\",\n        video: \"تضمين فيديو\",\n        audio: \"تضمين صوت\",\n        file: \"تضمين ملف\",\n      } as Record<string, string>,\n      url_placeholder: \"أدخل الرابط\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"إزالة الرابط\",\n    },\n    edit: {\n      text: \"تحرير الرابط\",\n      tooltip: \"تحرير\",\n    },\n    open: {\n      tooltip: \"فتح في تبويب جديد\",\n    },\n    form: {\n      title_placeholder: \"تحرير العنوان\",\n      url_placeholder: \"تحرير الرابط\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n","export const de = {\n    slash_menu: {\n      heading: {\n        title: \"Überschrift 1\",\n        subtext: \"Hauptebene Überschrift\",\n        aliases: [\"h\", \"überschrift1\", \"h1\"],\n        group: \"Überschriften\",\n      },\n      heading_2: {\n        title: \"Überschrift 2\",\n        subtext: \"Wichtige Abschnittsüberschrift\",\n        aliases: [\"h2\", \"überschrift2\", \"unterüberschrift\"],\n        group: \"Überschriften\",\n      },\n      heading_3: {\n        title: \"Überschrift 3\",\n        subtext: \"Unterabschnitts- und Gruppenüberschrift\",\n        aliases: [\"h3\", \"überschrift3\", \"unterüberschrift\"],\n        group: \"Überschriften\",\n      },\n      numbered_list: {\n        title: \"Nummerierte Liste\",\n        subtext: \"Liste mit nummerierten Elementen\",\n        aliases: [\"ol\", \"li\", \"liste\", \"nummerierteliste\", \"nummerierte liste\"],\n        group: \"Grundlegende Blöcke\",\n      },\n      bullet_list: {\n        title: \"Aufzählungsliste\",\n        subtext: \"Liste mit unnummerierten Elementen\",\n        aliases: [\"ul\", \"li\", \"liste\", \"aufzählungsliste\", \"aufzählung liste\"],\n        group: \"Grundlegende Blöcke\",\n      },\n      check_list: {\n        title: \"Checkliste\",\n        subtext: \"Liste mit Kontrollkästchen\",\n        aliases: [\n          \"ul\",\n          \"li\",\n          \"liste\",\n          \"checkliste\",\n          \"check liste\",\n          \"geprüfte liste\",\n          \"kontrollkästchen\",\n        ],\n        group: \"Grundlegende Blöcke\",\n      },\n      paragraph: {\n        title: \"Absatz\",\n        subtext: \"Der Hauptteil Ihres Dokuments\",\n        aliases: [\"p\", \"absatz\"],\n        group: \"Grundlegende Blöcke\",\n      },\n      table: {\n        title: \"Tabelle\",\n        subtext: \"Tabelle mit editierbaren Zellen\",\n        aliases: [\"tabelle\"],\n        group: \"Erweitert\",\n      },\n      image: {\n        title: \"Bild\",\n        subtext: \"Größenveränderbares Bild mit Beschriftung\",\n        aliases: [\n          \"bild\",\n          \"bildhochladen\",\n          \"hochladen\",\n          \"img\",\n          \"bild\",\n          \"medien\",\n          \"url\",\n        ],\n        group: \"Medien\",\n      },\n      video: {\n        title: \"Video\",\n        subtext: \"Größenveränderbares Video mit Beschriftung\",\n        aliases: [\n          \"video\",\n          \"videoupload\",\n          \"hochladen\",\n          \"mp4\",\n          \"film\",\n          \"medien\",\n          \"url\",\n        ],\n        group: \"Medien\",\n      },\n      audio: {\n        title: \"Audio\",\n        subtext: \"Eingebettetes Audio mit Beschriftung\",\n        aliases: [\n          \"audio\",\n          \"audioupload\",\n          \"hochladen\",\n          \"mp3\",\n          \"ton\",\n          \"medien\",\n          \"url\",\n        ],\n        group: \"Medien\",\n      },\n      file: {\n        title: \"Datei\",\n        subtext: \"Eingebettete Datei\",\n        aliases: [\"datei\", \"hochladen\", \"einbetten\", \"medien\", \"url\"],\n        group: \"Medien\",\n      },\n      emoji: {\n        title: \"Emoji\",\n        subtext: \"Nach Emoji suchen und einfügen\",\n        aliases: [\"emoji\", \"emote\", \"emotion\", \"gesicht\"],\n        group: \"Andere\",\n      },\n    },\n    placeholders: {\n      default: \"Text eingeben oder '/' für Befehle tippen\",\n      heading: \"Überschrift\",\n      bulletListItem: \"Liste\",\n      numberedListItem: \"Liste\",\n      checkListItem: \"Liste\",\n    },\n    file_blocks: {\n      image: {\n        add_button_text: \"Bild hinzufügen\",\n      },\n      video: {\n        add_button_text: \"Video hinzufügen\",\n      },\n      audio: {\n        add_button_text: \"Audio hinzufügen\",\n      },\n      file: {\n        add_button_text: \"Datei hinzufügen\",\n      },\n    },\n    side_menu: {\n      add_block_label: \"Block hinzufügen\",\n      drag_handle_label: \"Blockmenü öffnen\",\n    },\n    drag_handle: {\n      delete_menuitem: \"Löschen\",\n      colors_menuitem: \"Farben\",\n    },\n    table_handle: {\n      delete_column_menuitem: \"Spalte löschen\",\n      delete_row_menuitem: \"Zeile löschen\",\n      add_left_menuitem: \"Spalte links hinzufügen\",\n      add_right_menuitem: \"Spalte rechts hinzufügen\",\n      add_above_menuitem: \"Zeile oberhalb hinzufügen\",\n      add_below_menuitem: \"Zeile unterhalb hinzufügen\",\n    },\n    suggestion_menu: {\n      no_items_title: \"Keine Elemente gefunden\",\n      loading: \"Laden…\",\n    },\n    color_picker: {\n      text_title: \"Text\",\n      background_title: \"Hintergrund\",\n      colors: {\n        default: \"Standard\",\n        gray: \"Grau\",\n        brown: \"Braun\",\n        red: \"Rot\",\n        orange: \"Orange\",\n        yellow: \"Gelb\",\n        green: \"Grün\",\n        blue: \"Blau\",\n        purple: \"Lila\",\n        pink: \"Rosa\",\n      },\n    },\n    formatting_toolbar: {\n      bold: {\n        tooltip: \"Fett\",\n        secondary_tooltip: \"Mod+B\",\n      },\n      italic: {\n        tooltip: \"Kursiv\",\n        secondary_tooltip: \"Mod+I\",\n      },\n      underline: {\n        tooltip: \"Unterstrichen\",\n        secondary_tooltip: \"Mod+U\",\n      },\n      strike: {\n        tooltip: \"Durchgestrichen\",\n        secondary_tooltip: \"Mod+Shift+S\",\n      },\n      code: {\n        tooltip: \"Code\",\n        secondary_tooltip: \"\",\n      },\n      colors: {\n        tooltip: \"Farben\",\n      },\n      link: {\n        tooltip: \"Link erstellen\",\n        secondary_tooltip: \"Mod+K\",\n      },\n      file_caption: {\n        tooltip: \"Beschriftung bearbeiten\",\n        input_placeholder: \"Beschriftung bearbeiten\",\n      },\n      file_replace: {\n        tooltip: {\n          image: \"Bild ersetzen\",\n          video: \"Video ersetzen\",\n          audio: \"Audio ersetzen\",\n          file: \"Datei ersetzen\",\n        },\n      },\n      file_rename: {\n        tooltip: {\n          image: \"Bild umbenennen\",\n          video: \"Video umbenennen\",\n          audio: \"Audio umbenennen\",\n          file: \"Datei umbenennen\",\n        },\n        input_placeholder: {\n          image: \"Bild umbenennen\",\n          video: \"Video umbenennen\",\n          audio: \"Audio umbenennen\",\n          file: \"Datei umbenennen\",\n        },\n      },\n      file_download: {\n        tooltip: {\n          image: \"Bild herunterladen\",\n          video: \"Video herunterladen\",\n          audio: \"Audio herunterladen\",\n          file: \"Datei herunterladen\",\n        },\n      },\n      file_delete: {\n        tooltip: {\n          image: \"Bild löschen\",\n          video: \"Video löschen\",\n          audio: \"Audio löschen\",\n          file: \"Datei löschen\",\n        },\n      },\n      file_preview_toggle: {\n        tooltip: \"Vorschau umschalten\",\n      },\n      nest: {\n        tooltip: \"Block verschachteln\",\n        secondary_tooltip: \"Tab\",\n      },\n      unnest: {\n        tooltip: \"Block entnesten\",\n        secondary_tooltip: \"Shift+Tab\",\n      },\n      align_left: {\n        tooltip: \"Text linksbündig\",\n      },\n      align_center: {\n        tooltip: \"Text zentrieren\",\n      },\n      align_right: {\n        tooltip: \"Text rechtsbündig\",\n      },\n      align_justify: {\n        tooltip: \"Text Blocksatz\",\n      },\n    },\n    file_panel: {\n      upload: {\n        title: \"Hochladen\",\n        file_placeholder: {\n          image: \"Bild hochladen\",\n          video: \"Video hochladen\",\n          audio: \"Audio hochladen\",\n          file: \"Datei hochladen\",\n        },\n        upload_error: \"Fehler: Hochladen fehlgeschlagen\",\n      },\n      embed: {\n        title: \"Einbetten\",\n        embed_button: {\n          image: \"Bild einbetten\",\n          video: \"Video einbetten\",\n          audio: \"Audio einbetten\",\n          file: \"Datei einbetten\",\n        },\n        url_placeholder: \"URL eingeben\",\n      },\n    },\n    link_toolbar: {\n      delete: {\n        tooltip: \"Link entfernen\",\n      },\n      edit: {\n        text: \"Link bearbeiten\",\n        tooltip: \"Bearbeiten\",\n      },\n      open: {\n        tooltip: \"In neuem Tab öffnen\",\n      },\n      form: {\n        title_placeholder: \"Titel bearbeiten\",\n        url_placeholder: \"URL bearbeiten\",\n      },\n    },\n    generic: {\n      ctrl_shortcut: \"Strg\",\n    },\n  };\n  ","export const en = {\n  slash_menu: {\n    heading: {\n      title: \"Heading 1\",\n      subtext: \"Top-level heading\",\n      aliases: [\"h\", \"heading1\", \"h1\"],\n      group: \"Headings\",\n    },\n    heading_2: {\n      title: \"Heading 2\",\n      subtext: \"Key section heading\",\n      aliases: [\"h2\", \"heading2\", \"subheading\"],\n      group: \"Headings\",\n    },\n    heading_3: {\n      title: \"Heading 3\",\n      subtext: \"Subsection and group heading\",\n      aliases: [\"h3\", \"heading3\", \"subheading\"],\n      group: \"Headings\",\n    },\n    numbered_list: {\n      title: \"Numbered List\",\n      subtext: \"List with ordered items\",\n      aliases: [\"ol\", \"li\", \"list\", \"numberedlist\", \"numbered list\"],\n      group: \"Basic blocks\",\n    },\n    bullet_list: {\n      title: \"Bullet List\",\n      subtext: \"List with unordered items\",\n      aliases: [\"ul\", \"li\", \"list\", \"bulletlist\", \"bullet list\"],\n      group: \"Basic blocks\",\n    },\n    check_list: {\n      title: \"Check List\",\n      subtext: \"List with checkboxes\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"list\",\n        \"checklist\",\n        \"check list\",\n        \"checked list\",\n        \"checkbox\",\n      ],\n      group: \"Basic blocks\",\n    },\n    paragraph: {\n      title: \"Paragraph\",\n      subtext: \"The body of your document\",\n      aliases: [\"p\", \"paragraph\"],\n      group: \"Basic blocks\",\n    },\n    table: {\n      title: \"Table\",\n      subtext: \"Table with editable cells\",\n      aliases: [\"table\"],\n      group: \"Advanced\",\n    },\n    image: {\n      title: \"Image\",\n      subtext: \"Resizable image with caption\",\n      aliases: [\n        \"image\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"picture\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    video: {\n      title: \"Video\",\n      subtext: \"Resizable video with caption\",\n      aliases: [\n        \"video\",\n        \"videoUpload\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    audio: {\n      title: \"Audio\",\n      subtext: \"Embedded audio with caption\",\n      aliases: [\n        \"audio\",\n        \"audioUpload\",\n        \"upload\",\n        \"mp3\",\n        \"sound\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    file: {\n      title: \"File\",\n      subtext: \"Embedded file\",\n      aliases: [\"file\", \"upload\", \"embed\", \"media\", \"url\"],\n      group: \"Media\",\n    },\n    emoji: {\n      title: \"Emoji\",\n      subtext: \"Search for and insert an emoji\",\n      aliases: [\"emoji\", \"emote\", \"emotion\", \"face\"],\n      group: \"Others\",\n    },\n  },\n  placeholders: {\n    default: \"Enter text or type '/' for commands\",\n    heading: \"Heading\",\n    bulletListItem: \"List\",\n    numberedListItem: \"List\",\n    checkListItem: \"List\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Add image\",\n    },\n    video: {\n      add_button_text: \"Add video\",\n    },\n    audio: {\n      add_button_text: \"Add audio\",\n    },\n    file: {\n      add_button_text: \"Add file\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Add block\",\n    drag_handle_label: \"Open block menu\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Delete\",\n    colors_menuitem: \"Colors\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Delete column\",\n    delete_row_menuitem: \"Delete row\",\n    add_left_menuitem: \"Add column left\",\n    add_right_menuitem: \"Add column right\",\n    add_above_menuitem: \"Add row above\",\n    add_below_menuitem: \"Add row below\",\n  },\n  suggestion_menu: {\n    no_items_title: \"No items found\",\n    loading: \"Loading…\",\n  },\n  color_picker: {\n    text_title: \"Text\",\n    background_title: \"Background\",\n    colors: {\n      default: \"Default\",\n      gray: \"Gray\",\n      brown: \"Brown\",\n      red: \"Red\",\n      orange: \"Orange\",\n      yellow: \"Yellow\",\n      green: \"Green\",\n      blue: \"Blue\",\n      purple: \"Purple\",\n      pink: \"Pink\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Bold\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Italic\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Underline\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Strike\",\n      secondary_tooltip: \"Mod+Shift+S\",\n    },\n    code: {\n      tooltip: \"Code\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Colors\",\n    },\n    link: {\n      tooltip: \"Create link\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Edit caption\",\n      input_placeholder: \"Edit caption\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Replace image\",\n        video: \"Replace video\",\n        audio: \"Replace audio\",\n        file: \"Replace file\",\n      } as Record<string, string>,\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Rename image\",\n        video: \"Rename video\",\n        audio: \"Rename audio\",\n        file: \"Rename file\",\n      } as Record<string, string>,\n      input_placeholder: {\n        image: \"Rename image\",\n        video: \"Rename video\",\n        audio: \"Rename audio\",\n        file: \"Rename file\",\n      } as Record<string, string>,\n    },\n    file_download: {\n      tooltip: {\n        image: \"Download image\",\n        video: \"Download video\",\n        audio: \"Download audio\",\n        file: \"Download file\",\n      } as Record<string, string>,\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Delete image\",\n        video: \"Delete video\",\n        audio: \"Delete audio\",\n        file: \"Delete file\",\n      } as Record<string, string>,\n    },\n    file_preview_toggle: {\n      tooltip: \"Toggle preview\",\n    },\n    nest: {\n      tooltip: \"Nest block\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Unnest block\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Align text left\",\n    },\n    align_center: {\n      tooltip: \"Align text center\",\n    },\n    align_right: {\n      tooltip: \"Align text right\",\n    },\n    align_justify: {\n      tooltip: \"Justify text\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Upload\",\n      file_placeholder: {\n        image: \"Upload image\",\n        video: \"Upload video\",\n        audio: \"Upload audio\",\n        file: \"Upload file\",\n      } as Record<string, string>,\n      upload_error: \"Error: Upload failed\",\n    },\n    embed: {\n      title: \"Embed\",\n      embed_button: {\n        image: \"Embed image\",\n        video: \"Embed video\",\n        audio: \"Embed audio\",\n        file: \"Embed file\",\n      } as Record<string, string>,\n      url_placeholder: \"Enter URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Remove link\",\n    },\n    edit: {\n      text: \"Edit link\",\n      tooltip: \"Edit\",\n    },\n    open: {\n      tooltip: \"Open in new tab\",\n    },\n    form: {\n      title_placeholder: \"Edit title\",\n      url_placeholder: \"Edit URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n","export const es = {\n    slash_menu: {\n      heading: {\n        title: 'Encabezado 1',\n        subtext: 'Encabezado de primer nivel',\n        aliases: ['h', 'encabezado1', 'h1'],\n        group: 'Encabezados',\n      },\n      heading_2: {\n        title: 'Encabezado 2',\n        subtext: 'Encabezado de sección principal',\n        aliases: ['h2', 'encabezado2', 'subencabezado'],\n        group: 'Encabezados',\n      },\n      heading_3: {\n        title: 'Encabezado 3',\n        subtext: 'Encabezado de subsección y grupo',\n        aliases: ['h3', 'encabezado3', 'subencabezado'],\n        group: 'Encabezados',\n      },\n      numbered_list: {\n        title: 'Lista Numerada',\n        subtext: 'Lista con elementos ordenados',\n        aliases: ['ol', 'li', 'lista', 'lista numerada'],\n        group: 'Bloques básicos',\n      },\n      bullet_list: {\n        title: 'Lista con Viñetas',\n        subtext: 'Lista con elementos no ordenados',\n        aliases: ['ul', 'li', 'lista', 'lista con viñetas'],\n        group: 'Bloques básicos',\n      },\n      check_list: {\n        title: 'Lista de Verificación',\n        subtext: 'Lista con casillas de verificación',\n        aliases: ['ul', 'li', 'lista', 'lista de verificación', 'lista de chequeo', 'checkbox'],\n        group: 'Bloques básicos',\n      },\n      paragraph: {\n        title: 'Párrafo',\n        subtext: 'El cuerpo de tu documento',\n        aliases: ['p', 'párrafo'],\n        group: 'Bloques básicos',\n      },\n      table: {\n        title: 'Tabla',\n        subtext: 'Tabla con celdas editables',\n        aliases: ['tabla'],\n        group: 'Avanzado',\n      },\n      image: {\n        title: 'Imagen',\n        subtext: 'Imagen redimensionable con leyenda',\n        aliases: ['imagen', 'subir imagen', 'cargar', 'img', 'foto', 'media', 'url'],\n        group: 'Medios',\n      },\n      video: {\n        title: 'Vídeo',\n        subtext: 'Vídeo redimensionable con leyenda',\n        aliases: ['video', 'subir vídeo', 'cargar', 'mp4', 'película', 'media', 'url'],\n        group: 'Medios',\n      },\n      audio: {\n        title: 'Audio',\n        subtext: 'Audio incrustado con leyenda',\n        aliases: ['audio', 'subir audio', 'cargar', 'mp3', 'sonido', 'media', 'url'],\n        group: 'Medios',\n      },\n      file: {\n        title: 'Archivo',\n        subtext: 'Archivo incrustado',\n        aliases: ['archivo', 'cargar', 'incrustar', 'media', 'url'],\n        group: 'Medios',\n      },\n      emoji: {\n        title: 'Emoji',\n        subtext: 'Busca e inserta un emoji',\n        aliases: ['emoji', 'emoticono', 'emoción', 'cara'],\n        group: 'Otros',\n      },\n    },\n    placeholders: {\n      default: \"Escribe o teclea '/' para comandos\",\n      heading: 'Encabezado',\n      bulletListItem: 'Lista',\n      numberedListItem: 'Lista',\n      checkListItem: 'Lista',\n    },\n    file_blocks: {\n      image: {\n        add_button_text: 'Agregar imagen',\n      },\n      video: {\n        add_button_text: 'Agregar vídeo',\n      },\n      audio: {\n        add_button_text: 'Agregar audio',\n      },\n      file: {\n        add_button_text: 'Agregar archivo',\n      },\n    },\n    side_menu: {\n      add_block_label: 'Agregar bloque',\n      drag_handle_label: 'Abrir menú de bloque',\n    },\n    drag_handle: {\n      delete_menuitem: 'Eliminar',\n      colors_menuitem: 'Colores',\n    },\n    table_handle: {\n      delete_column_menuitem: 'Eliminar columna',\n      delete_row_menuitem: 'Eliminar fila',\n      add_left_menuitem: 'Agregar columna a la izquierda',\n      add_right_menuitem: 'Agregar columna a la derecha',\n      add_above_menuitem: 'Agregar fila arriba',\n      add_below_menuitem: 'Agregar fila abajo',\n    },\n    suggestion_menu: {\n      no_items_title: 'No se encontraron elementos',\n      loading: 'Cargando…',\n    },\n    color_picker: {\n      text_title: 'Texto',\n      background_title: 'Fondo',\n      colors: {\n        default: 'Por defecto',\n        gray: 'Gris',\n        brown: 'Marrón',\n        red: 'Rojo',\n        orange: 'Naranja',\n        yellow: 'Amarillo',\n        green: 'Verde',\n        blue: 'Azul',\n        purple: 'Morado',\n        pink: 'Rosa',\n      },\n    },\n    formatting_toolbar: {\n      bold: {\n        tooltip: 'Negrita',\n        secondary_tooltip: 'Mod+B',\n      },\n      italic: {\n        tooltip: 'Cursiva',\n        secondary_tooltip: 'Mod+I',\n      },\n      underline: {\n        tooltip: 'Subrayado',\n        secondary_tooltip: 'Mod+U',\n      },\n      strike: {\n        tooltip: 'Tachado',\n        secondary_tooltip: 'Mod+Shift+S',\n      },\n      code: {\n        tooltip: 'Código',\n        secondary_tooltip: '',\n      },\n      colors: {\n        tooltip: 'Colores',\n      },\n      link: {\n        tooltip: 'Crear enlace',\n        secondary_tooltip: 'Mod+K',\n      },\n      file_caption: {\n        tooltip: 'Editar leyenda',\n        input_placeholder: 'Editar leyenda',\n      },\n      file_replace: {\n        tooltip: {\n          image: 'Reemplazar imagen',\n          video: 'Reemplazar vídeo',\n          audio: 'Reemplazar audio',\n          file: 'Reemplazar archivo',\n        } as Record<string, string>,\n      },\n      file_rename: {\n        tooltip: {\n          image: 'Renombrar imagen',\n          video: 'Renombrar vídeo',\n          audio: 'Renombrar audio',\n          file: 'Renombrar archivo',\n        } as Record<string, string>,\n        input_placeholder: {\n          image: 'Renombrar imagen',\n          video: 'Renombrar vídeo',\n          audio: 'Renombrar audio',\n          file: 'Renombrar archivo',\n        } as Record<string, string>,\n      },\n      file_download: {\n        tooltip: {\n          image: 'Descargar imagen',\n          video: 'Descargar vídeo',\n          audio: 'Descargar audio',\n          file: 'Descargar archivo',\n        } as Record<string, string>,\n      },\n      file_delete: {\n        tooltip: {\n          image: 'Eliminar imagen',\n          video: 'Eliminar vídeo',\n          audio: 'Eliminar audio',\n          file: 'Eliminar archivo',\n        } as Record<string, string>,\n      },\n      file_preview_toggle: {\n        tooltip: 'Alternar vista previa',\n      },\n      nest: {\n        tooltip: 'Anidar bloque',\n        secondary_tooltip: 'Tab',\n      },\n      unnest: {\n        tooltip: 'Desanidar bloque',\n        secondary_tooltip: 'Shift+Tab',\n      },\n      align_left: {\n        tooltip: 'Alinear texto a la izquierda',\n      },\n      align_center: {\n        tooltip: 'Alinear texto al centro',\n      },\n      align_right: {\n        tooltip: 'Alinear texto a la derecha',\n      },\n      align_justify: {\n        tooltip: 'Justificar texto',\n      },\n    },\n    file_panel: {\n      upload: {\n        title: 'Subir',\n        file_placeholder: {\n          image: 'Subir imagen',\n          video: 'Subir vídeo',\n          audio: 'Subir audio',\n          file: 'Subir archivo',\n        } as Record<string, string>,\n        upload_error: 'Error: Fallo en la subida',\n      },\n      embed: {\n        title: 'Incrustar',\n        embed_button: {\n          image: 'Incrustar imagen',\n          video: 'Incrustar vídeo',\n          audio: 'Incrustar audio',\n          file: 'Incrustar archivo',\n        } as Record<string, string>,\n        url_placeholder: 'Introduce la URL',\n      },\n    },\n    link_toolbar: {\n      delete: {\n        tooltip: 'Eliminar enlace',\n      },\n      edit: {\n        text: 'Editar enlace',\n        tooltip: 'Editar',\n      },\n      open: {\n        tooltip: 'Abrir en nueva pestaña',\n      },\n      form: {\n        title_placeholder: 'Editar título',\n        url_placeholder: 'Editar URL',\n      },\n    },\n    generic: {\n      ctrl_shortcut: 'Ctrl',\n    },\n  };\n  ","import { Dictionary } from \"../dictionary\";\n\nexport const fr: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Titre 1\",\n      subtext: \"Utilisé pour un titre de premier niveau\",\n      aliases: [\"h\", \"titre1\", \"h1\"],\n      group: \"Titres\",\n    },\n    heading_2: {\n      title: \"Titre 2\",\n      subtext: \"Utilisé pour les sections clés\",\n      aliases: [\"h2\", \"titre2\", \"sous-titre\"],\n      group: \"Titres\",\n    },\n    heading_3: {\n      title: \"Titre 3\",\n      subtext: \"Utilisé pour les sous-sections et les titres de groupe\",\n      aliases: [\"h3\", \"titre3\", \"sous-titre\"],\n      group: \"Titres\",\n    },\n    numbered_list: {\n      title: \"Liste Numérotée\",\n      subtext: \"Utilisé pour afficher une liste numérotée\",\n      aliases: [\"ol\", \"li\", \"liste\", \"listenumérotée\", \"liste numérotée\"],\n      group: \"Blocs de base\",\n    },\n    bullet_list: {\n      title: \"Liste à Puces\",\n      subtext: \"Utilisé pour afficher une liste non ordonnée\",\n      aliases: [\"ul\", \"li\", \"liste\", \"listeàpuces\", \"liste à puces\"],\n      group: \"Blocs de base\",\n    },\n    check_list: {\n      title: \"Liste de vérification\",\n      subtext: \"Utilisé pour afficher une liste avec des cases à cocher\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"liste\",\n        \"liste de vérification\",\n        \"liste cochée\",\n        \"case à cocher\",\n      ],\n      group: \"Blocs de base\",\n    },\n    paragraph: {\n      title: \"Paragraphe\",\n      subtext: \"Utilisé pour le corps de votre document\",\n      aliases: [\"p\", \"paragraphe\"],\n      group: \"Blocs de base\",\n    },\n    table: {\n      title: \"Tableau\",\n      subtext: \"Utilisé pour les tableaux\",\n      aliases: [\"tableau\"],\n      group: \"Avancé\",\n    },\n    image: {\n      title: \"Image\",\n      subtext: \"Insérer une image\",\n      aliases: [\n        \"image\",\n        \"uploadImage\",\n        \"télécharger\",\n        \"img\",\n        \"photo\",\n        \"média\",\n        \"url\",\n      ],\n      group: \"Médias\",\n    },\n    video: {\n      title: \"Vidéo\",\n      subtext: \"Insérer une vidéo\",\n      aliases: [\n        \"vidéo\",\n        \"téléchargerVidéo\",\n        \"téléverser\",\n        \"mp4\",\n        \"film\",\n        \"média\",\n        \"url\",\n      ],\n      group: \"Média\",\n    },\n    audio: {\n      title: \"Audio\",\n      subtext: \"Insérer un audio\",\n      aliases: [\n        \"audio\",\n        \"téléchargerAudio\",\n        \"téléverser\",\n        \"mp3\",\n        \"son\",\n        \"média\",\n        \"url\",\n      ],\n      group: \"Média\",\n    },\n    file: {\n      title: \"Fichier\",\n      subtext: \"Insérer un fichier\",\n      aliases: [\"fichier\", \"téléverser\", \"intégrer\", \"média\", \"url\"],\n      group: \"Média\",\n    },\n    emoji: {\n      title: \"Emoji\",\n      subtext: \"Utilisé pour insérer un emoji\",\n      aliases: [\"emoji\", \"émoticône\", \"émotion\", \"visage\"],\n      group: \"Autres\",\n    },\n  },\n  placeholders: {\n    default: \"Entrez du texte ou tapez '/' pour les commandes\",\n    heading: \"Titre\",\n    bulletListItem: \"Liste\",\n    numberedListItem: \"Liste\",\n    checkListItem: \"Liste\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Ajouter une image\",\n    },\n    video: {\n      add_button_text: \"Ajouter une vidéo\",\n    },\n    audio: {\n      add_button_text: \"Ajouter un audio\",\n    },\n    file: {\n      add_button_text: \"Ajouter un fichier\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Ajouter un bloc\",\n    drag_handle_label: \"Ouvrir le menu du bloc\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Supprimer\",\n    colors_menuitem: \"Couleurs\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Supprimer la colonne\",\n    delete_row_menuitem: \"Supprimer la ligne\",\n    add_left_menuitem: \"Ajouter une colonne à gauche\",\n    add_right_menuitem: \"Ajouter une colonne à droite\",\n    add_above_menuitem: \"Ajouter une ligne au-dessus\",\n    add_below_menuitem: \"Ajouter une ligne en dessous\",\n  },\n  suggestion_menu: {\n    no_items_title: \"Aucun élément trouvé\",\n    loading: \"Chargement…\",\n  },\n  color_picker: {\n    text_title: \"Texte\",\n    background_title: \"Fond\",\n    colors: {\n      default: \"Défaut\",\n      gray: \"Gris\",\n      brown: \"Marron\",\n      red: \"Rouge\",\n      orange: \"Orange\",\n      yellow: \"Jaune\",\n      green: \"Vert\",\n      blue: \"Bleu\",\n      purple: \"Violet\",\n      pink: \"Rose\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Gras\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Italique\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Souligner\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Barré\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Code\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Couleurs\",\n    },\n    link: {\n      tooltip: \"Créer un lien\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Modifier la légende\",\n      input_placeholder: \"Modifier la légende\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Remplacer l'image\",\n        video: \"Remplacer la vidéo\",\n        audio: \"Remplacer l'audio\",\n        file: \"Remplacer le fichier\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Renommer l'image\",\n        video: \"Renommer la vidéo\",\n        audio: \"Renommer l'audio\",\n        file: \"Renommer le fichier\",\n      },\n      input_placeholder: {\n        image: \"Renommer l'image\",\n        video: \"Renommer la vidéo\",\n        audio: \"Renommer l'audio\",\n        file: \"Renommer le fichier\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Télécharger l'image\",\n        video: \"Télécharger la vidéo\",\n        audio: \"Télécharger l'audio\",\n        file: \"Télécharger le fichier\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Supprimer l'image\",\n        video: \"Supprimer la vidéo\",\n        audio: \"Supprimer l'audio\",\n        file: \"Supprimer le fichier\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Basculer l'aperçu\",\n    },\n    nest: {\n      tooltip: \"Emboîter le bloc\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Démboîter le bloc\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Aligner le texte à gauche\",\n    },\n    align_center: {\n      tooltip: \"Aligner le texte au centre\",\n    },\n    align_right: {\n      tooltip: \"Aligner le texte à droite\",\n    },\n    align_justify: {\n      tooltip: \"Justifier le texte\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Télécharger\",\n      file_placeholder: {\n        image: \"Télécharger une image\",\n        video: \"Télécharger une vidéo\",\n        audio: \"Télécharger un fichier audio\",\n        file: \"Télécharger un fichier\",\n      },\n      upload_error: \"Erreur : Échec du téléchargement\",\n    },\n    embed: {\n      title: \"Intégrer\",\n      embed_button: {\n        image: \"Intégrer une image\",\n        video: \"Intégrer une vidéo\",\n        audio: \"Intégrer un fichier audio\",\n        file: \"Intégrer un fichier\",\n      },\n      url_placeholder: \"Entrez l'URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Supprimer le lien\",\n    },\n    edit: {\n      text: \"Modifier le lien\",\n      tooltip: \"Modifier\",\n    },\n    open: {\n      tooltip: \"Ouvrir dans un nouvel onglet\",\n    },\n    form: {\n      title_placeholder: \"Modifier le titre\",\n      url_placeholder: \"Modifier l'URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n","import type { Dictionary } from \"../dictionary\";\n\nexport const is: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Fyrirsögn 1\",\n      subtext: \"Notað fyrir efstu fyrirsögn\",\n      aliases: [\"h\", \"fyrirsogn1\", \"h1\"],\n      group: \"Fyrirsagnir\",\n    },\n    heading_2: {\n      title: \"Fyrirsögn 2\",\n      subtext: \"Notað fyrir lykilhluta\",\n      aliases: [\"h2\", \"fyrirsogn2\", \"undirfyrirsogn\"],\n      group: \"Fyrirsagnir\",\n    },\n    heading_3: {\n      title: \"Fyrirsögn 3\",\n      subtext: \"Notað fyrir undirhluta og hópfyrirsagnir\",\n      aliases: [\"h3\", \"fyrirsogn3\", \"undirfyrirsogn\"],\n      group: \"Fyrirsagnir\",\n    },\n    numbered_list: {\n      title: \"Númeruð listi\",\n      subtext: \"Notað til að birta númeraðan lista\",\n      aliases: [\"ol\", \"li\", \"listi\", \"numeradurlisti\"],\n      group: \"Grunnblokkar\",\n    },\n    bullet_list: {\n      title: \"Punktalisti\",\n      subtext: \"Notað til að birta óraðaðan lista\",\n      aliases: [\"ul\", \"li\", \"listi\", \"punktalisti\"],\n      group: \"Grunnblokkar\",\n    },\n    check_list: {\n      title: \"Athugunarlisti\",\n      subtext: \"Notað til að sýna lista með gátreitum\",\n      aliases: [\"ul\", \"li\", \"listi\", \"athugunarlisti\", \"merktur listi\"],\n      group: \"Grunnblokkar\",\n    },\n    paragraph: {\n      title: \"Málsgrein\",\n      subtext: \"Notað fyrir meginmál skjalsins\",\n      aliases: [\"p\", \"malsgrein\"],\n      group: \"Grunnblokkar\",\n    },\n    table: {\n      title: \"Tafla\",\n      subtext: \"Notað fyrir töflur\",\n      aliases: [\"tafla\"],\n      group: \"Ítarlegt\",\n    },\n    image: {\n      title: \"Mynd\",\n      subtext: \"Settu inn mynd\",\n      aliases: [\n        \"mynd\",\n        \"myndaupphlaed\",\n        \"upphlaed\",\n        \"img\",\n        \"mynd\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Miðlar\",\n    },\n    video: {\n      title: \"Myndband\",\n      subtext: \"Setja inn myndband\",\n      aliases: [\n        \"myndband\",\n        \"videoUpphala\",\n        \"hlaða upp\",\n        \"mp4\",\n        \"kvikmynd\",\n        \"miðill\",\n        \"url\",\n      ],\n      group: \"Miðill\",\n    },\n    audio: {\n      title: \"Hljóð\",\n      subtext: \"Setja inn hljóð\",\n      aliases: [\n        \"hljóð\",\n        \"audioUpphala\",\n        \"hlaða upp\",\n        \"mp3\",\n        \"hljóð\",\n        \"miðill\",\n        \"url\",\n      ],\n      group: \"Miðlar\",\n    },\n    file: {\n      title: \"Skrá\",\n      subtext: \"Setja inn skrá\",\n      aliases: [\"skrá\", \"hlaða upp\", \"fella inn\", \"miðill\", \"url\"],\n      group: \"Miðlar\",\n    },\n    emoji: {\n      title: \"Emoji\",\n      subtext: \"Notað til að setja inn smámynd\",\n      aliases: [\"emoji\", \"andlitsávísun\", \"tilfinningar\", \"andlit\"],\n      group: \"Annað\",\n    },\n  },\n  placeholders: {\n    default: \"Sláðu inn texta eða skrifaðu '/' fyrir skipanir\",\n    heading: \"Fyrirsögn\",\n    bulletListItem: \"Listi\",\n    numberedListItem: \"Listi\",\n    checkListItem: \"Listi\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Bæta við mynd\",\n    },\n    video: {\n      add_button_text: \"Bæta við myndbandi\",\n    },\n    audio: {\n      add_button_text: \"Bæta við hljóði\",\n    },\n    file: {\n      add_button_text: \"Bæta við skrá\",\n    },\n  },\n  side_menu: {\n    add_block_label: \"Bæta við blokki\",\n    drag_handle_label: \"Opna blokkarvalmynd\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Eyða\",\n    colors_menuitem: \"Litir\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Eyða dálki\",\n    delete_row_menuitem: \"Eyða röð\",\n    add_left_menuitem: \"Bæta dálki við til vinstri\",\n    add_right_menuitem: \"Bæta dálki við til hægri\",\n    add_above_menuitem: \"Bæta röð við fyrir ofan\",\n    add_below_menuitem: \"Bæta röð við fyrir neðan\",\n  },\n  suggestion_menu: {\n    no_items_title: \"Engir hlutir fundust\",\n    loading: \"Hleður…\",\n  },\n  color_picker: {\n    text_title: \"Texti\",\n    background_title: \"Bakgrunnur\",\n    colors: {\n      default: \"Sjálfgefið\",\n      gray: \"Grár\",\n      brown: \"Brúnn\",\n      red: \"Rauður\",\n      orange: \"Appelsínugulur\",\n      yellow: \"Gulur\",\n      green: \"Grænn\",\n      blue: \"Blár\",\n      purple: \"Fjólublár\",\n      pink: \"Bleikur\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Feitletrað\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Skáletrað\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Undirstrikað\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Yfirstrikað\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Kóði\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Litir\",\n    },\n    link: {\n      tooltip: \"Búa til tengil\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Breyta myndatexta\",\n      input_placeholder: \"Breyta myndatexta\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Skipta um mynd\",\n        video: \"Skipta um myndband\",\n        audio: \"Skipta um hljóð\",\n        file: \"Skipta um skrá\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Endurnefna mynd\",\n        video: \"Endurnefna myndband\",\n        audio: \"Endurnefna hljóð\",\n        file: \"Endurnefna skrá\",\n      },\n      input_placeholder: {\n        image: \"Endurnefna mynd\",\n        video: \"Endurnefna myndband\",\n        audio: \"Endurnefna hljóð\",\n        file: \"Endurnefna skrá\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Sækja mynd\",\n        video: \"Sækja myndband\",\n        audio: \"Sækja hljóð\",\n        file: \"Sækja skrá\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Eyða mynd\",\n        video: \"Eyða myndbandi\",\n        audio: \"Eyða hljóði\",\n        file: \"Eyða skrá\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Skipta um forskoðun\",\n    },\n    nest: {\n      tooltip: \"Fella blokk saman\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Afþýða blokk\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Vinstrijafna texta\",\n    },\n    align_center: {\n      tooltip: \"Miðjustilla texta\",\n    },\n    align_right: {\n      tooltip: \"Hægrijafna texta\",\n    },\n    align_justify: {\n      tooltip: \"Jafna texta\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Hlaða upp\",\n      file_placeholder: {\n        image: \"Hlaða upp mynd\",\n        video: \"Hlaða upp myndband\",\n        audio: \"Hlaða upp hljóð\",\n        file: \"Hlaða upp skrá\",\n      },\n      upload_error: \"Villa: Upphleðsla mistókst\",\n    },\n    embed: {\n      title: \"Innsetja\",\n      embed_button: {\n        image: \"Innsetja mynd\",\n        video: \"Innsetja myndband\",\n        audio: \"Innsetja hljóð\",\n        file: \"Innsetja skrá\",\n      },\n      url_placeholder: \"Sláðu inn URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Fjarlægja tengil\",\n    },\n    edit: {\n      text: \"Breyta tengli\",\n      tooltip: \"Breyta\",\n    },\n    open: {\n      tooltip: \"Opna í nýjum flipa\",\n    },\n    form: {\n      title_placeholder: \"Breyta titli\",\n      url_placeholder: \"Breyta URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n","import { Dictionary } from \"../dictionary\";\n\nexport const ja: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"見出し１\",\n      subtext: \"トップレベルの見出しに使用\",\n      aliases: [\"h\", \"見出し１\", \"h1\", \"大見出し\"],\n      group: \"見出し\",\n    },\n    heading_2: {\n      title: \"見出し２\",\n      subtext: \"重要なセクションに使用\",\n      aliases: [\"h2\", \"見出し2\", \"subheading\", \"中見出し\"],\n      group: \"見出し\",\n    },\n    heading_3: {\n      title: \"見出し３\",\n      subtext: \"セクションやグループの見出しに使用\",\n      aliases: [\"h3\", \"見出し3\", \"subheading\", \"小見出し\"],\n      group: \"見出し\",\n    },\n    numbered_list: {\n      title: \"番号付リスト\",\n      subtext: \"番号付リストを表示するために使用\",\n      aliases: [\n        \"ol\",\n        \"li\",\n        \"numberedlist\",\n        \"numbered list\",\n        \"リスト\",\n        \"番号付リスト\",\n        \"番号 リスト\",\n      ],\n      group: \"基本ブロック\",\n    },\n    bullet_list: {\n      title: \"箇条書き\",\n      subtext: \"箇条書きを表示するために使用\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"bulletlist\",\n        \"bullet list\",\n        \"リスト\",\n        \"箇条書きリスト\",\n      ],\n      group: \"基本ブロック\",\n    },\n    check_list: {\n      title: \"チェックリスト\",\n      subtext: \"チェックボックス付きリストを表示するために使用されます\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"list\",\n        \"checklist\",\n        \"checked list\",\n        \"リスト\",\n        \"チェックリスト\",\n        \"チェックされたリスト\",\n      ],\n      group: \"基本ブロック\",\n    },\n    paragraph: {\n      title: \"標準テキスト\",\n      subtext: \"本文に使用\",\n      aliases: [\"p\", \"paragraph\", \"標準テキスト\"],\n      group: \"基本ブロック\",\n    },\n    table: {\n      title: \"表\",\n      subtext: \"表に使用\",\n      aliases: [\"table\", \"表\", \"テーブル\"],\n      group: \"高度なブロック\",\n    },\n    image: {\n      title: \"画像\",\n      subtext: \"画像を挿入\",\n      aliases: [\n        \"image\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"picture\",\n        \"media\",\n        \"url\",\n        \"画像\",\n      ],\n      group: \"メディア\",\n    },\n    video: {\n      title: \"ビデオ\",\n      subtext: \"ビデオを挿入\",\n      aliases: [\n        \"video\",\n        \"videoUpload\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"url\",\n        \"ビデオ\",\n      ],\n      group: \"メディア\",\n    },\n    audio: {\n      title: \"オーディオ\",\n      subtext: \"オーディオを挿入\",\n      aliases: [\n        \"audio\",\n        \"audioUpload\",\n        \"upload\",\n        \"mp3\",\n        \"sound\",\n        \"media\",\n        \"url\",\n        \"オーディオ\",\n      ],\n      group: \"メディア\",\n    },\n    file: {\n      title: \"ファイル\",\n      subtext: \"ファイルを挿入\",\n      aliases: [\"file\", \"upload\", \"embed\", \"media\", \"url\", \"ファイル\"],\n      group: \"メディア\",\n    },\n    emoji: {\n      title: \"絵文字\",\n      subtext: \"絵文字を挿入するために使用します\",\n      aliases: [\"絵文字\", \"顔文字\", \"感情表現\", \"顔\"],\n      group: \"その他\",\n    },\n  },\n  placeholders: {\n    default: \"テキストを入力するか'/' を入力してコマンド選択\",\n    heading: \"見出し\",\n    bulletListItem: \"リストを追加\",\n    numberedListItem: \"リストを追加\",\n    checkListItem: \"リストを追加\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"画像を追加\",\n    },\n    video: {\n      add_button_text: \"ビデオを追加\",\n    },\n    audio: {\n      add_button_text: \"オーディオを追加\",\n    },\n    file: {\n      add_button_text: \"ファイルを追加\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"ブロックを追加\",\n    drag_handle_label: \"ブロックメニュー\",\n  },\n  drag_handle: {\n    delete_menuitem: \"削除\",\n    colors_menuitem: \"色を変更\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"列を削除\",\n    delete_row_menuitem: \"行を削除\",\n    add_left_menuitem: \"左に列を追加\",\n    add_right_menuitem: \"右に列を追加\",\n    add_above_menuitem: \"上に行を追加\",\n    add_below_menuitem: \"下に行を追加\",\n  },\n  suggestion_menu: {\n    no_items_title: \"アイテムが見つかりません\",\n    loading: \"読込中…\",\n  },\n  color_picker: {\n    text_title: \"文字色\",\n    background_title: \"背景色\",\n    colors: {\n      default: \"デフォルト\",\n      gray: \"グレー\",\n      brown: \"茶色\",\n      red: \"赤\",\n      orange: \"オレンジ\",\n      yellow: \"黄色\",\n      green: \"緑\",\n      blue: \"青\",\n      purple: \"紫\",\n      pink: \"ピンク\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"太字\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"斜体\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"下線\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"打ち消し\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"コード\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"色\",\n    },\n    link: {\n      tooltip: \"リンク\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"キャプションを編集\",\n      input_placeholder: \"キャプションを編集\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"画像を置換\",\n        video: \"ビデオを置換\",\n        audio: \"オーディオを置換\",\n        file: \"ファイルを置換\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"画像の名前を変更\",\n        video: \"ビデオの名前を変更\",\n        audio: \"オーディオの名前を変更\",\n        file: \"ファイルの名前を変更\",\n      },\n      input_placeholder: {\n        image: \"画像の名前を変更\",\n        video: \"ビデオの名前を変更\",\n        audio: \"オーディオの名前を変更\",\n        file: \"ファイルの名前を変更\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"画像をダウンロード\",\n        video: \"ビデオをダウンロード\",\n        audio: \"オーディオをダウンロード\",\n        file: \"ファイルをダウンロード\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"画像を削除\",\n        video: \"ビデオを削除\",\n        audio: \"オーディオを削除\",\n        file: \"ファイルを削除\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"プレビューの切り替え\",\n    },\n    nest: {\n      tooltip: \"インデント増\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"インデント減\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"左揃え\",\n    },\n    align_center: {\n      tooltip: \"中央揃え\",\n    },\n    align_right: {\n      tooltip: \"右揃え\",\n    },\n    align_justify: {\n      tooltip: \"両端揃え\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"アップロード\",\n      file_placeholder: {\n        image: \"画像をアップロード\",\n        video: \"ビデオをアップロード\",\n        audio: \"オーディオをアップロード\",\n        file: \"ファイルをアップロード\",\n      },\n      upload_error: \"エラー: アップロードが失敗しました\",\n    },\n    embed: {\n      title: \"埋め込み\",\n      embed_button: {\n        image: \"画像を埋め込む\",\n        video: \"ビデオを埋め込む\",\n        audio: \"オーディオを埋め込む\",\n        file: \"ファイルを埋め込む\",\n      },\n      url_placeholder: \"URLを入力\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"リンクを解除\",\n    },\n    edit: {\n      text: \"リンクを編集\",\n      tooltip: \"編集\",\n    },\n    open: {\n      tooltip: \"新しいタブでリンクを開く\",\n    },\n    form: {\n      title_placeholder: \"タイトルを編集\",\n      url_placeholder: \"URLを編集\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n","import { Dictionary } from \"../dictionary\";\n\nexport const ko: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"제목1\",\n      subtext: \"섹션 제목(대)\",\n      aliases: [\"h\", \"제목1\", \"h1\", \"대제목\"],\n      group: \"제목\",\n    },\n    heading_2: {\n      title: \"제목2\",\n      subtext: \"섹션 제목(중)\",\n      aliases: [\"h2\", \"제목2\", \"중제목\"],\n      group: \"제목\",\n    },\n    heading_3: {\n      title: \"제목3\",\n      subtext: \"섹션 제목(소)\",\n      aliases: [\"h3\", \"제목3\", \"subheading\"],\n      group: \"제목\",\n    },\n    numbered_list: {\n      title: \"번호 매기기 목록\",\n      subtext: \"번호가 매겨진 목록을 추가합니다.\",\n      aliases: [\"ol\", \"li\", \"목록\", \"번호 매기기 목록\", \"번호 목록\"],\n      group: \"기본 블록\",\n    },\n    bullet_list: {\n      title: \"글머리 기호 목록\",\n      subtext: \"간단한 글머리 기호를 추가합니다.\",\n      aliases: [\"ul\", \"li\", \"목록\", \"글머리 기호 목록\", \"글머리 목록\"],\n      group: \"기본 블록\",\n    },\n    check_list: {\n      title: \"체크리스트\",\n      subtext: \"체크박스가 있는 목록을 표시하는 데 사용\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"목록\",\n        \"체크리스트\",\n        \"체크 리스트\",\n        \"체크된 목록\",\n        \"체크박스\",\n      ],\n      group: \"기본 블록\",\n    },\n    paragraph: {\n      title: \"본문\",\n      subtext: \"일반 텍스트\",\n      aliases: [\"p\", \"paragraph\", \"본문\"],\n      group: \"기본 블록\",\n    },\n    table: {\n      title: \"표\",\n      subtext: \"간단한 표를 추가합니다.\",\n      aliases: [\"표\"],\n      group: \"고급\",\n    },\n    image: {\n      title: \"이미지\",\n      subtext: \"이미지 파일을 업로드합니다.\",\n      aliases: [\n        \"image\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"picture\",\n        \"media\",\n        \"이미지\",\n        \"url\",\n      ],\n      group: \"미디어\",\n    },\n    video: {\n      title: \"비디오\",\n      subtext: \"비디오 삽입\",\n      aliases: [\n        \"video\",\n        \"videoUpload\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"동영상\",\n        \"url\",\n      ],\n      group: \"미디어\",\n    },\n    audio: {\n      title: \"오디오\",\n      subtext: \"오디오 삽입\",\n      aliases: [\n        \"audio\",\n        \"audioUpload\",\n        \"upload\",\n        \"mp3\",\n        \"sound\",\n        \"media\",\n        \"오디오\",\n        \"url\",\n      ],\n      group: \"미디어\",\n    },\n    file: {\n      title: \"파일\",\n      subtext: \"파일 삽입\",\n      aliases: [\"file\", \"upload\", \"embed\", \"media\", \"파일\", \"url\"],\n      group: \"미디어\",\n    },\n    emoji: {\n      title: \"이모지\",\n      subtext: \"이모지 삽입용으로 사용됩니다\",\n      aliases: [\n        \"이모지\",\n        \"emoji\",\n        \"감정 표현\",\n        \"emotion expression\",\n        \"표정\",\n        \"face expression\",\n        \"얼굴\",\n        \"face\",\n      ],\n      group: \"기타\",\n    },\n  },\n  placeholders: {\n    default: \"텍스트를 입력하거나 /를 입력하여 명령을 입력하세요.\",\n    heading: \"제목\",\n    bulletListItem: \"목록\",\n    numberedListItem: \"목록\",\n    checkListItem: \"목록\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"이미지 추가\",\n    },\n    video: {\n      add_button_text: \"비디오 추가\",\n    },\n    audio: {\n      add_button_text: \"오디오 추가\",\n    },\n    file: {\n      add_button_text: \"파일 추가\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"블록 추가\",\n    drag_handle_label: \"블록 메뉴 열기\",\n  },\n  drag_handle: {\n    delete_menuitem: \"삭제\",\n    colors_menuitem: \"색깔\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"열 1개 삭제\",\n    delete_row_menuitem: \"행 삭제\",\n    add_left_menuitem: \"왼쪽에 열 1개 추가\",\n    add_right_menuitem: \"오른쪽에 열 1개 추가\",\n    add_above_menuitem: \"위에 행 1개 추가\",\n    add_below_menuitem: \"아래에 행 1개 추가\",\n  },\n  suggestion_menu: {\n    no_items_title: \"항목을 찾을 수 없음\",\n    loading: \"로딩 중…\",\n  },\n  color_picker: {\n    text_title: \"텍스트\",\n    background_title: \"배경\",\n    colors: {\n      default: \"기본\",\n      gray: \"회색\",\n      brown: \"갈색\",\n      red: \"빨간색\",\n      orange: \"주황색\",\n      yellow: \"노란색\",\n      green: \"녹색\",\n      blue: \"파란색\",\n      purple: \"보라색\",\n      pink: \"분홍색\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"진하게\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"기울임\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"밑줄\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"취소선\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"코드\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"색깔\",\n    },\n    link: {\n      tooltip: \"링크 만들기\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"이미지 캡션 수정\",\n      input_placeholder: \"이미지 캡션 수정\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"이미지 교체\",\n        video: \"비디오 교체\",\n        audio: \"오디오 교체\",\n        file: \"파일 교체\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"이미지 이름 변경\",\n        video: \"비디오 이름 변경\",\n        audio: \"오디오 이름 변경\",\n        file: \"파일 이름 변경\",\n      },\n      input_placeholder: {\n        image: \"이미지 이름 변경\",\n        video: \"비디오 이름 변경\",\n        audio: \"오디오 이름 변경\",\n        file: \"파일 이름 변경\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"이미지 다운로드\",\n        video: \"비디오 다운로드\",\n        audio: \"오디오 다운로드\",\n        file: \"파일 다운로드\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"이미지 삭제\",\n        video: \"비디오 삭제\",\n        audio: \"오디오 삭제\",\n        file: \"파일 삭제\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"미리보기 전환\",\n    },\n    nest: {\n      tooltip: \"중첩 블록\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"비중첩 블록\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"텍스트 왼쪽 맞춤\",\n    },\n    align_center: {\n      tooltip: \"텍스트 가운데 맞춤\",\n    },\n    align_right: {\n      tooltip: \"텍스트 오른쪽 맞춤\",\n    },\n    align_justify: {\n      tooltip: \"텍스트 양쪽 맞춤\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"업로드\",\n      file_placeholder: {\n        image: \"이미지 업로드\",\n        video: \"비디오 업로드\",\n        audio: \"오디오 업로드\",\n        file: \"파일 업로드\",\n      },\n      upload_error: \"오류: 업로드 실패\",\n    },\n    embed: {\n      title: \"임베드\",\n      embed_button: {\n        image: \"이미지 삽입\",\n        video: \"비디오 삽입\",\n        audio: \"오디오 삽입\",\n        file: \"파일 삽입\",\n      },\n      url_placeholder: \"URL을 입력하세요.\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"링크 삭제\",\n    },\n    edit: {\n      text: \"링크 수정\",\n      tooltip: \"수정\",\n    },\n    open: {\n      tooltip: \"새 탭으로 열기\",\n    },\n    form: {\n      title_placeholder: \"제목 수정\",\n      url_placeholder: \"URL 수정\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n","import type { Dictionary } from \"../dictionary\";\n\nexport const nl: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Kop 1\",\n      subtext: \"Gebruikt voor een hoofdkop\",\n      aliases: [\"h\", \"kop1\", \"h1\"],\n      group: \"Koppen\",\n    },\n    heading_2: {\n      title: \"Kop 2\",\n      subtext: \"Gebruikt voor belangrijke secties\",\n      aliases: [\"h2\", \"kop2\", \"subkop\"],\n      group: \"Koppen\",\n    },\n    heading_3: {\n      title: \"Kop 3\",\n      subtext: \"Gebruikt voor subsecties en groepskoppen\",\n      aliases: [\"h3\", \"kop3\", \"subkop\"],\n      group: \"Koppen\",\n    },\n    numbered_list: {\n      title: \"Genummerde Lijst\",\n      subtext: \"Gebruikt om een genummerde lijst weer te geven\",\n      aliases: [\"ol\", \"li\", \"lijst\", \"genummerdelijst\", \"genummerde lijst\"],\n      group: \"Basisblokken\",\n    },\n    bullet_list: {\n      title: \"Puntenlijst\",\n      subtext: \"Gebruikt om een ongeordende lijst weer te geven\",\n      aliases: [\"ul\", \"li\", \"lijst\", \"puntenlijst\", \"punten lijst\"],\n      group: \"Basisblokken\",\n    },\n    check_list: {\n      title: \"Controlelijst\",\n      subtext: \"Gebruikt om een lijst met selectievakjes weer te geven\",\n      aliases: [\"ul\", \"li\", \"lijst\", \"aangevinkte lijst\", \"selectievakje\"],\n      group: \"Basisblokken\",\n    },\n    paragraph: {\n      title: \"Paragraaf\",\n      subtext: \"Gebruikt voor de hoofdtekst van uw document\",\n      aliases: [\"p\", \"paragraaf\"],\n      group: \"Basisblokken\",\n    },\n    table: {\n      title: \"Tabel\",\n      subtext: \"Gebruikt voor tabellen\",\n      aliases: [\"tabel\"],\n      group: \"Geavanceerd\",\n    },\n    image: {\n      title: \"Afbeelding\",\n      subtext: \"Voeg een afbeelding in\",\n      aliases: [\n        \"afbeelding\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"foto\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    video: {\n      title: \"Video\",\n      subtext: \"Voeg een video in\",\n      aliases: [\n        \"video\",\n        \"videoUploaden\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"url\",\n        \"drive\",\n        \"dropbox\",\n      ],\n      group: \"Media\",\n    },\n    audio: {\n      title: \"Audio\",\n      subtext: \"Voeg audio in\",\n      aliases: [\n        \"audio\",\n        \"audioUploaden\",\n        \"upload\",\n        \"mp3\",\n        \"geluid\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    file: {\n      title: \"Bestand\",\n      subtext: \"Voeg een bestand in\",\n      aliases: [\"bestand\", \"upload\", \"insluiten\", \"media\", \"url\"],\n      group: \"Media\",\n    },\n    emoji: {\n      title: \"Emoji\",\n      subtext: \"Gebruikt voor het invoegen van een emoji\",\n      aliases: [\n        \"emoji\",\n        \"emotie-uitdrukking\",\n        \"gezichtsuitdrukking\",\n        \"gezicht\",\n      ],\n      group: \"Overig\",\n    },\n  },\n  placeholders: {\n    default: \"Voer tekst in of type '/' voor commando's\",\n    heading: \"Kop\",\n    bulletListItem: \"Lijst\",\n    numberedListItem: \"Lijst\",\n    checkListItem: \"Lijst\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Afbeelding toevoegen\",\n    },\n    video: {\n      add_button_text: \"Video toevoegen\",\n    },\n    audio: {\n      add_button_text: \"Audio toevoegen\",\n    },\n    file: {\n      add_button_text: \"Bestand toevoegen\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Nieuw blok\",\n    drag_handle_label: \"Open blok menu\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Verwijder\",\n    colors_menuitem: \"Kleuren\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Verwijder kolom\",\n    delete_row_menuitem: \"Verwijder rij\",\n    add_left_menuitem: \"Voeg kolom links toe\",\n    add_right_menuitem: \"Voeg kolom rechts toe\",\n    add_above_menuitem: \"Voeg rij boven toe\",\n    add_below_menuitem: \"Voeg rij onder toe\",\n  },\n  suggestion_menu: {\n    no_items_title: \"Geen items gevonden\",\n    loading: \"Laden…\",\n  },\n  color_picker: {\n    text_title: \"Tekst\",\n    background_title: \"Achtergrond\",\n    colors: {\n      default: \"Standaard\",\n      gray: \"Grijs\",\n      brown: \"Bruin\",\n      red: \"Rood\",\n      orange: \"Oranje\",\n      yellow: \"Geel\",\n      green: \"Groen\",\n      blue: \"Blauw\",\n      purple: \"Paars\",\n      pink: \"Roze\",\n    },\n  },\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Vet\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Cursief\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Onderstrepen\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Doorstrepen\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Code\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Kleuren\",\n    },\n    link: {\n      tooltip: \"Maak link\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Bewerk onderschrift\",\n      input_placeholder: \"Bewerk onderschrift\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Afbeelding vervangen\",\n        video: \"Video vervangen\",\n        audio: \"Audio vervangen\",\n        file: \"Bestand vervangen\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Afbeelding hernoemen\",\n        video: \"Video hernoemen\",\n        audio: \"Audio hernoemen\",\n        file: \"Bestand hernoemen\",\n      },\n      input_placeholder: {\n        image: \"Afbeelding hernoemen\",\n        video: \"Video hernoemen\",\n        audio: \"Audio hernoemen\",\n        file: \"Bestand hernoemen\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Afbeelding downloaden\",\n        video: \"Video downloaden\",\n        audio: \"Audio downloaden\",\n        file: \"Bestand downloaden\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Afbeelding verwijderen\",\n        video: \"Video verwijderen\",\n        audio: \"Audio verwijderen\",\n        file: \"Bestand verwijderen\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Voorbeeldschakelaar\",\n    },\n    nest: {\n      tooltip: \"Nest blok\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Ontnest blok\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Tekst links uitlijnen\",\n    },\n    align_center: {\n      tooltip: \"Tekst centreren\",\n    },\n    align_right: {\n      tooltip: \"Tekst rechts uitlijnen\",\n    },\n    align_justify: {\n      tooltip: \"Tekst uitvullen\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Upload\",\n      file_placeholder: {\n        image: \"Afbeelding uploaden\",\n        video: \"Video uploaden\",\n        audio: \"Audio uploaden\",\n        file: \"Bestand uploaden\",\n      },\n      upload_error: \"Fout: Upload mislukt\",\n    },\n    embed: {\n      title: \"Insluiten\",\n      embed_button: {\n        image: \"Afbeelding insluiten\",\n        video: \"Video insluiten\",\n        audio: \"Audio insluiten\",\n        file: \"Bestand insluiten\",\n      },\n      url_placeholder: \"Voer URL in\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Verwijder link\",\n    },\n    edit: {\n      text: \"Bewerk link\",\n      tooltip: \"Bewerk\",\n    },\n    open: {\n      tooltip: \"Open in nieuw tabblad\",\n    },\n    form: {\n      title_placeholder: \"Bewerk titel\",\n      url_placeholder: \"Bewerk URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n","import type { Dictionary } from \"../dictionary\";\n\nexport const pl: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Nagłówek 1\",\n      subtext: \"Używany dla nagłówka najwyższego poziomu\",\n      aliases: [\"h\", \"naglowek1\", \"h1\"],\n      group: \"Nagłówki\",\n    },\n    heading_2: {\n      title: \"Nagłówek 2\",\n      subtext: \"Używany dla kluczowych sekcji\",\n      aliases: [\"h2\", \"naglowek2\", \"podnaglowek\"],\n      group: \"Nagłówki\",\n    },\n    heading_3: {\n      title: \"Nagłówek 3\",\n      subtext: \"Używany dla podsekcji i grup nagłówków\",\n      aliases: [\"h3\", \"naglowek3\", \"podnaglowek\"],\n      group: \"Nagłówki\",\n    },\n    numbered_list: {\n      title: \"Lista numerowana\",\n      subtext: \"Używana do wyświetlania listy numerowanej\",\n      aliases: [\"ol\", \"li\", \"lista\", \"numerowana lista\"],\n      group: \"Podstawowe bloki\",\n    },\n    bullet_list: {\n      title: \"Lista punktowana\",\n      subtext: \"Używana do wyświetlania listy bez numeracji\",\n      aliases: [\"ul\", \"li\", \"lista\", \"punktowana lista\"],\n      group: \"Podstawowe bloki\",\n    },\n    check_list: {\n      title: \"Lista z polami wyboru\",\n      subtext: \"Używana do wyświetlania listy z polami wyboru\",\n      aliases: [\"ul\", \"li\", \"lista\", \"lista z polami wyboru\", \"pole wyboru\"],\n      group: \"Podstawowe bloki\",\n    },\n    paragraph: {\n      title: \"Akapit\",\n      subtext: \"Używany dla treści dokumentu\",\n      aliases: [\"p\", \"akapit\"],\n      group: \"Podstawowe bloki\",\n    },\n    table: {\n      title: \"Tabela\",\n      subtext: \"Używana do tworzenia tabel\",\n      aliases: [\"tabela\"],\n      group: \"Zaawansowane\",\n    },\n    image: {\n      title: \"Zdjęcie\",\n      subtext: \"Wstaw zdjęcie\",\n      aliases: [\n        \"obraz\",\n        \"wrzućZdjęcie\",\n        \"wrzuć\",\n        \"img\",\n        \"zdjęcie\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    video: {\n      title: \"Wideo\",\n      subtext: \"Wstaw wideo\",\n      aliases: [\"wideo\", \"wrzućWideo\", \"wrzuć\", \"mp4\", \"film\", \"media\", \"url\"],\n      group: \"Media\",\n    },\n    audio: {\n      title: \"Audio\",\n      subtext: \"Wstaw audio\",\n      aliases: [\n        \"audio\",\n        \"wrzućAudio\",\n        \"wrzuć\",\n        \"mp3\",\n        \"dźwięk\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    file: {\n      title: \"Plik\",\n      subtext: \"Wstaw plik\",\n      aliases: [\"plik\", \"wrzuć\", \"wstaw\", \"media\", \"url\"],\n      group: \"Media\",\n    },\n    emoji: {\n      title: \"Emoji\",\n      subtext: \"Używane do wstawiania emoji\",\n      aliases: [\"emoji\", \"emotka\", \"wyrażenie emocji\", \"twarz\"],\n      group: \"Inne\",\n    },\n  },\n  placeholders: {\n    default: \"Wprowadź tekst lub wpisz '/' aby użyć poleceń\",\n    heading: \"Nagłówek\",\n    bulletListItem: \"Lista\",\n    numberedListItem: \"Lista\",\n    checkListItem: \"Lista\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Dodaj zdjęcie\",\n    },\n    video: {\n      add_button_text: \"Dodaj wideo\",\n    },\n    audio: {\n      add_button_text: \"Dodaj audio\",\n    },\n    file: {\n      add_button_text: \"Dodaj plik\",\n    },\n  },\n  side_menu: {\n    add_block_label: \"Dodaj blok\",\n    drag_handle_label: \"Otwórz menu bloków\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Usuń\",\n    colors_menuitem: \"Kolory\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Usuń kolumnę\",\n    delete_row_menuitem: \"Usuń wiersz\",\n    add_left_menuitem: \"Dodaj kolumnę po lewej\",\n    add_right_menuitem: \"Dodaj kolumnę po prawej\",\n    add_above_menuitem: \"Dodaj wiersz powyżej\",\n    add_below_menuitem: \"Dodaj wiersz poniżej\",\n  },\n  suggestion_menu: {\n    no_items_title: \"Nie znaleziono elementów\",\n    loading: \"Ładowanie…\",\n  },\n  color_picker: {\n    text_title: \"Tekst\",\n    background_title: \"Tło\",\n    colors: {\n      default: \"Domyślny\",\n      gray: \"Szary\",\n      brown: \"Brązowy\",\n      red: \"Czerwony\",\n      orange: \"Pomarańczowy\",\n      yellow: \"Żółty\",\n      green: \"Zielony\",\n      blue: \"Niebieski\",\n      purple: \"Fioletowy\",\n      pink: \"Różowy\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Pogrubienie\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Kursywa\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Podkreślenie\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Przekreślenie\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Kod\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Kolory\",\n    },\n    link: {\n      tooltip: \"Utwórz link\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Zmień podpis\",\n      input_placeholder: \"Zmień podpis\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Zmień obraz\",\n        video: \"Zmień wideo\",\n        audio: \"Zmień audio\",\n        file: \"Zmień plik\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Zmień nazwę zdjęcia\",\n        video: \"Zmień nazwę wideo\",\n        audio: \"Zmień nazwę audio\",\n        file: \"Zmień nazwę pliku\",\n      },\n      input_placeholder: {\n        image: \"Zmień nazwę zdjęcia\",\n        video: \"Zmień nazwę wideo\",\n        audio: \"Zmień nazwę audio\",\n        file: \"Zmień nazwę pliku\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Pobierz zdjęcie\",\n        video: \"Pobierz wideo\",\n        audio: \"Pobierz audio\",\n        file: \"Pobierz plik\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Usuń zdjęcie\",\n        video: \"Usuń wideo\",\n        audio: \"Usuń audio\",\n        file: \"Usuń plik\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Przełącz podgląd\",\n    },\n    nest: {\n      tooltip: \"Zagnieźdź blok\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Odgagnieźdź blok\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Wyrównaj tekst do lewej\",\n    },\n    align_center: {\n      tooltip: \"Wyśrodkuj tekst\",\n    },\n    align_right: {\n      tooltip: \"Wyrównaj tekst do prawej\",\n    },\n    align_justify: {\n      tooltip: \"Wyjustuj tekst\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Wrzuć\",\n      file_placeholder: {\n        image: \"Wrzuć zdjęcie\",\n        video: \"Wrzuć wideo\",\n        audio: \"Wrzuć audio\",\n        file: \"Wrzuć plik\",\n      },\n      upload_error: \"Błąd: Przesyłanie nie powiodło się\",\n    },\n    embed: {\n      title: \"Wstaw\",\n      embed_button: {\n        image: \"Wstaw zdjęice\",\n        video: \"Wstaw wideo\",\n        audio: \"Wstaw audio\",\n        file: \"Wstaw plik\",\n      },\n      url_placeholder: \"Wprowadź URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Usuń link\",\n    },\n    edit: {\n      text: \"Edytuj link\",\n      tooltip: \"Edytuj\",\n    },\n    open: {\n      tooltip: \"Otwórz w nowej karcie\",\n    },\n    form: {\n      title_placeholder: \"Edytuj tytuł\",\n      url_placeholder: \"Edytuj URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n","import type { Dictionary } from \"../dictionary\";\n\nexport const pt: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Título\",\n      subtext: \"Usado para um título de nível superior\",\n      aliases: [\"h\", \"titulo1\", \"h1\"],\n      group: \"Títulos\",\n    },\n    heading_2: {\n      title: \"Título 2\",\n      subtext: \"Usado para seções principais\",\n      aliases: [\"h2\", \"titulo2\", \"subtitulo\"],\n      group: \"Títulos\",\n    },\n    heading_3: {\n      title: \"Título 3\",\n      subtext: \"Usado para subseções e títulos de grupo\",\n      aliases: [\"h3\", \"titulo3\", \"subtitulo\"],\n      group: \"Títulos\",\n    },\n    numbered_list: {\n      title: \"Lista Numerada\",\n      subtext: \"Usado para exibir uma lista numerada\",\n      aliases: [\"ol\", \"li\", \"lista\", \"listanumerada\", \"lista numerada\"],\n      group: \"Blocos Básicos\",\n    },\n    bullet_list: {\n      title: \"Lista com Marcadores\",\n      subtext: \"Usado para exibir uma lista não ordenada\",\n      aliases: [\"ul\", \"li\", \"lista\", \"listamarcadores\", \"lista com marcadores\"],\n      group: \"Blocos Básicos\",\n    },\n    check_list: {\n      title: \"Lista de verificação\",\n      subtext: \"Usado para exibir uma lista com caixas de seleção\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"lista\",\n        \"lista de verificação\",\n        \"lista marcada\",\n        \"caixa de seleção\",\n      ],\n      group: \"Blocos Básicos\",\n    },\n    paragraph: {\n      title: \"Parágrafo\",\n      subtext: \"Usado para o corpo do seu documento\",\n      aliases: [\"p\", \"paragrafo\"],\n      group: \"Blocos Básicos\",\n    },\n    table: {\n      title: \"Tabela\",\n      subtext: \"Usado para tabelas\",\n      aliases: [\"tabela\"],\n      group: \"Avançado\",\n    },\n    image: {\n      title: \"Imagem\",\n      subtext: \"Inserir uma imagem\",\n      aliases: [\n        \"imagem\",\n        \"uploadImagem\",\n        \"upload\",\n        \"img\",\n        \"foto\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Mídia\",\n    },\n    video: {\n      title: \"Vídeo\",\n      subtext: \"Inserir um vídeo\",\n      aliases: [\n        \"vídeo\",\n        \"uploadVídeo\",\n        \"upload\",\n        \"mp4\",\n        \"filme\",\n        \"mídia\",\n        \"url\",\n      ],\n      group: \"Mídia\",\n    },\n    audio: {\n      title: \"Áudio\",\n      subtext: \"Inserir um áudio\",\n      aliases: [\"áudio\", \"uploadÁudio\", \"upload\", \"mp3\", \"som\", \"mídia\", \"url\"],\n      group: \"Mídia\",\n    },\n    file: {\n      title: \"Arquivo\",\n      subtext: \"Inserir um arquivo\",\n      aliases: [\"arquivo\", \"upload\", \"incorporar\", \"mídia\", \"url\"],\n      group: \"Mídia\",\n    },\n    emoji: {\n      title: \"Emoji\",\n      subtext: \"Usado para inserir um emoji\",\n      aliases: [\"emoji\", \"emoticon\", \"expressão emocional\", \"rosto\"],\n      group: \"Outros\",\n    },\n  },\n  placeholders: {\n    default: \"Digite texto ou use '/' para comandos\",\n    heading: \"Título\",\n    bulletListItem: \"Lista\",\n    numberedListItem: \"Lista\",\n    checkListItem: \"Lista\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Adicionar imagem\",\n    },\n    video: {\n      add_button_text: \"Adicionar vídeo\",\n    },\n    audio: {\n      add_button_text: \"Adicionar áudio\",\n    },\n    file: {\n      add_button_text: \"Adicionar arquivo\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Adicionar bloco\",\n    drag_handle_label: \"Abrir menu do bloco\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Excluir\",\n    colors_menuitem: \"Cores\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Excluir coluna\",\n    delete_row_menuitem: \"Excluir linha\",\n    add_left_menuitem: \"Adicionar coluna à esquerda\",\n    add_right_menuitem: \"Adicionar coluna à direita\",\n    add_above_menuitem: \"Adicionar linha acima\",\n    add_below_menuitem: \"Adicionar linha abaixo\",\n  },\n  suggestion_menu: {\n    no_items_title: \"Nenhum item encontrado\",\n    loading: \"Carregando…\",\n  },\n  color_picker: {\n    text_title: \"Texto\",\n    background_title: \"Fundo\",\n    colors: {\n      default: \"Padrão\",\n      gray: \"Cinza\",\n      brown: \"Marrom\",\n      red: \"Vermelho\",\n      orange: \"Laranja\",\n      yellow: \"Amarelo\",\n      green: \"Verde\",\n      blue: \"Azul\",\n      purple: \"Roxo\",\n      pink: \"Rosa\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Negrito\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Itálico\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Sublinhado\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Riscado\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Código\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Cores\",\n    },\n    link: {\n      tooltip: \"Criar link\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Editar legenda\",\n      input_placeholder: \"Editar legenda\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Substituir imagem\",\n        video: \"Substituir vídeo\",\n        audio: \"Substituir áudio\",\n        file: \"Substituir arquivo\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Renomear imagem\",\n        video: \"Renomear vídeo\",\n        audio: \"Renomear áudio\",\n        file: \"Renomear arquivo\",\n      },\n      input_placeholder: {\n        image: \"Renomear imagem\",\n        video: \"Renomear vídeo\",\n        audio: \"Renomear áudio\",\n        file: \"Renomear arquivo\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Baixar imagem\",\n        video: \"Baixar vídeo\",\n        audio: \"Baixar áudio\",\n        file: \"Baixar arquivo\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Excluir imagem\",\n        video: \"Excluir vídeo\",\n        audio: \"Excluir áudio\",\n        file: \"Excluir arquivo\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Alternar visualização\",\n    },\n    nest: {\n      tooltip: \"Aninhar bloco\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Desaninhar bloco\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Alinhar à esquerda\",\n    },\n    align_center: {\n      tooltip: \"Alinhar ao centro\",\n    },\n    align_right: {\n      tooltip: \"Alinhar à direita\",\n    },\n    align_justify: {\n      tooltip: \"Justificar texto\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Upload\",\n      file_placeholder: {\n        image: \"Upload de imagem\",\n        video: \"Upload de vídeo\",\n        audio: \"Upload de áudio\",\n        file: \"Upload de arquivo\",\n      },\n      upload_error: \"Erro: Falha no upload\",\n    },\n    embed: {\n      title: \"Incorporar\",\n      embed_button: {\n        image: \"Incorporar imagem\",\n        video: \"Incorporar vídeo\",\n        audio: \"Incorporar áudio\",\n        file: \"Incorporar arquivo\",\n      },\n      url_placeholder: \"Insira a URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Remover link\",\n    },\n    edit: {\n      text: \"Editar link\",\n      tooltip: \"Editar\",\n    },\n    open: {\n      tooltip: \"Abrir em nova aba\",\n    },\n    form: {\n      title_placeholder: \"Editar título\",\n      url_placeholder: \"Editar URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n","import { Dictionary } from \"../dictionary\";\n\nexport const ru: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Заголовок 1 уровня\",\n      subtext: \"Используется для заголовка верхнего уровня\",\n      aliases: [\"h\", \"heading1\", \"h1\", \"заголовок1\"],\n      group: \"Заголовки\",\n    },\n    heading_2: {\n      title: \"Заголовок 2 уровня\",\n      subtext: \"Используется для ключевых разделов\",\n      aliases: [\"h2\", \"heading2\", \"subheading\", \"заголовок2\", \"подзаголовок\"],\n      group: \"Заголовки\",\n    },\n    heading_3: {\n      title: \"Заголовок 3 уровня\",\n      subtext: \"Используется для подразделов и групп\",\n      aliases: [\"h3\", \"heading3\", \"subheading\", \"заголовок3\", \"подзаголовок\"],\n      group: \"Заголовки\",\n    },\n    numbered_list: {\n      title: \"Нумерованный список\",\n      subtext: \"Используется для отображения нумерованного списка\",\n      aliases: [\n        \"ol\",\n        \"li\",\n        \"list\",\n        \"numberedlist\",\n        \"numbered list\",\n        \"список\",\n        \"нумерованный список\",\n      ],\n      group: \"Базовые блоки\",\n    },\n    bullet_list: {\n      title: \"Маркированный список\",\n      subtext: \"Для отображения неупорядоченного списка.\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"list\",\n        \"bulletlist\",\n        \"bullet list\",\n        \"список\",\n        \"маркированный список\",\n      ],\n      group: \"Базовые блоки\",\n    },\n    check_list: {\n      title: \"Контрольный список\",\n      subtext: \"Для отображения списка с флажками\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"list\",\n        \"checklist\",\n        \"check list\",\n        \"checked list\",\n        \"checkbox\",\n        \"список\",\n      ],\n      group: \"Базовые блоки\",\n    },\n    paragraph: {\n      title: \"Параграф\",\n      subtext: \"Основной текст\",\n      aliases: [\"p\", \"paragraph\", \"параграф\"],\n      group: \"Базовые блоки\",\n    },\n    table: {\n      title: \"Таблица\",\n      subtext: \"Используется для таблиц\",\n      aliases: [\"table\", \"таблица\"],\n      group: \"Продвинутый\",\n    },\n    image: {\n      title: \"Картинка\",\n      subtext: \"Вставить изображение\",\n      aliases: [\n        \"image\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"picture\",\n        \"media\",\n        \"url\",\n        \"загрузка\",\n        \"картинка\",\n        \"рисунок\",\n      ],\n      group: \"Медиа\",\n    },\n    video: {\n      title: \"Видео\",\n      subtext: \"Вставить видео\",\n      aliases: [\n        \"video\",\n        \"videoUpload\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"url\",\n        \"загрузка\",\n        \"видео\",\n      ],\n      group: \"Медиа\",\n    },\n    audio: {\n      title: \"Аудио\",\n      subtext: \"Вставить аудио\",\n      aliases: [\n        \"audio\",\n        \"audioUpload\",\n        \"upload\",\n        \"mp3\",\n        \"sound\",\n        \"media\",\n        \"url\",\n        \"загрузка\",\n        \"аудио\",\n        \"звук\",\n        \"музыка\",\n      ],\n      group: \"Медиа\",\n    },\n    file: {\n      title: \"Файл\",\n      subtext: \"Вставить файл\",\n      aliases: [\"file\", \"upload\", \"embed\", \"media\", \"url\", \"загрузка\", \"файл\"],\n      group: \"Медиа\",\n    },\n    emoji: {\n      title: \"Эмодзи\",\n      subtext: \"Используется для вставки эмодзи\",\n      aliases: [\"эмодзи\", \"смайлик\", \"выражение эмоций\", \"лицо\"],\n      group: \"Прочее\",\n    },\n  },\n  placeholders: {\n    default: \"Ведите текст или введите «/» для команд\",\n    heading: \"Заголовок\",\n    bulletListItem: \"Список\",\n    numberedListItem: \"Список\",\n    checkListItem: \"Список\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Добавить изображение\",\n    },\n    video: {\n      add_button_text: \"Добавить видео\",\n    },\n    audio: {\n      add_button_text: \"Добавить аудио\",\n    },\n    file: {\n      add_button_text: \"Добавить файл\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Добавить блок\",\n    drag_handle_label: \"Открыть меню блока\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Удалить\",\n    colors_menuitem: \"Цвета\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Удалить столбец\",\n    delete_row_menuitem: \"Удалить строку\",\n    add_left_menuitem: \"Добавить столбец слева\",\n    add_right_menuitem: \"Добавить столбец справа\",\n    add_above_menuitem: \"Добавить строку выше\",\n    add_below_menuitem: \"Добавить строку ниже\",\n  },\n  suggestion_menu: {\n    no_items_title: \"ничего не найдено\",\n    loading: \"Загрузка…\",\n  },\n  color_picker: {\n    text_title: \"Текст\",\n    background_title: \"Задний фон\",\n    colors: {\n      default: \"По умолчинию\",\n      gray: \"Серый\",\n      brown: \"Коричневый\",\n      red: \"Красный\",\n      orange: \"Оранжевый\",\n      yellow: \"Жёлтый\",\n      green: \"Зелёный\",\n      blue: \"Голубой\",\n      purple: \"Фиолетовый\",\n      pink: \"Розовый\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Жирный\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Курсив\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Подчёркнутый\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Зачёркнутый\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Код\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Цвета\",\n    },\n    link: {\n      tooltip: \"Создать ссылку\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Изменить подпись\",\n      input_placeholder: \"Изменить подпись\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Заменить изображение\",\n        video: \"Заменить видео\",\n        audio: \"Заменить аудио\",\n        file: \"Заменить файл\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Переименовать изображение\",\n        video: \"Переименовать видео\",\n        audio: \"Переименовать аудио\",\n        file: \"Переименовать файл\",\n      },\n      input_placeholder: {\n        image: \"Переименовать изображение\",\n        video: \"Переименовать видео\",\n        audio: \"Переименовать аудио\",\n        file: \"Переименовать файл\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Скачать картинку\",\n        video: \"Скачать видео\",\n        audio: \"Скачать аудио\",\n        file: \"Скачать файл\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Удалить картинку\",\n        video: \"Удалить видео\",\n        audio: \"Удалить аудио\",\n        file: \"Скачать файл\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Переключить предварительный просмотр\",\n    },\n    nest: {\n      tooltip: \"Сдвинуть вправо\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Сдвинуть влево\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Текст по левому краю\",\n    },\n    align_center: {\n      tooltip: \"Текст по середине\",\n    },\n    align_right: {\n      tooltip: \"Текст по правому краю\",\n    },\n    align_justify: {\n      tooltip: \"По середине текст\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Загрузить\",\n      file_placeholder: {\n        image: \"Загрузить картинки\",\n        video: \"Загрузить видео\",\n        audio: \"Загрузить аудио\",\n        file: \"Загрузить файл\",\n      },\n      upload_error: \"Ошибка: не удалось загрузить\",\n    },\n    embed: {\n      title: \"Вставить\",\n      embed_button: {\n        image: \"Вставить картинку\",\n        video: \"Вставить видео\",\n        audio: \"Вставить аудио\",\n        file: \"Вставить файл\",\n      },\n      url_placeholder: \"Введите URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Удалить ссылку\",\n    },\n    edit: {\n      text: \"Изменить ссылку\",\n      tooltip: \"Редактировать\",\n    },\n    open: {\n      tooltip: \"Открыть в новой вкладке\",\n    },\n    form: {\n      title_placeholder: \"Изменить заголовок\",\n      url_placeholder: \"Изменить URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n","import type { Dictionary } from \"../dictionary\";\n\nexport const vi: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Tiêu đề H1\",\n      subtext: \"Sử dụng cho tiêu đề cấp cao nhất\",\n      aliases: [\"h\", \"tieude1\", \"dd1\"],\n      group: \"Tiêu đề\",\n    },\n    heading_2: {\n      title: \"Tiêu đề H2\",\n      subtext: \"Sử dụng cho các phần chính\",\n      aliases: [\"h2\", \"tieude2\", \"tieudephu\"],\n      group: \"Tiêu đề\",\n    },\n    heading_3: {\n      title: \"Tiêu đề H3\",\n      subtext: \"Sử dụng cho phụ đề và tiêu đề nhóm\",\n      aliases: [\"h3\", \"tieude3\", \"tieudephu\"],\n      group: \"Tiêu đề\",\n    },\n    numbered_list: {\n      title: \"Danh sách đánh số\",\n      subtext: \"Sử dụng để hiển thị danh sách có đánh số\",\n      aliases: [\"ol\", \"li\", \"ds\", \"danhsachdso\", \"danh sach danh so\"],\n      group: \"Khối cơ bản\",\n    },\n    bullet_list: {\n      title: \"Danh sách\",\n      subtext: \"Sử dụng để hiển thị danh sách không đánh số\",\n      aliases: [\"ul\", \"li\", \"ds\", \"danhsach\", \"danh sach\"],\n      group: \"Khối cơ bản\",\n    },\n    check_list: {\n      title: \"Danh sách kiểm tra\",\n      subtext: \"Dùng để hiển thị danh sách có hộp kiểm\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"danh sach\",\n        \"danh sach kiem tra\",\n        \"danh sach da kiem tra\",\n        \"hop kiem\",\n      ],\n      group: \"Khối cơ bản\",\n    },\n    paragraph: {\n      title: \"Đoạn văn\",\n      subtext: \"Sử dụng cho nội dung chính của tài liệu\",\n      aliases: [\"p\", \"doanvan\"],\n      group: \"Khối cơ bản\",\n    },\n    table: {\n      title: \"Bảng\",\n      subtext: \"Sử dụng để tạo bảng\",\n      aliases: [\"bang\"],\n      group: \"Nâng cao\",\n    },\n    image: {\n      title: \"Hình ảnh\",\n      subtext: \"Chèn hình ảnh\",\n      aliases: [\"anh\", \"tai-len-anh\", \"tai-len\", \"img\", \"hinh\", \"media\", \"url\"],\n      group: \"Phương tiện\",\n    },\n    video: {\n      title: \"Video\",\n      subtext: \"Chèn video\",\n      aliases: [\n        \"video\",\n        \"tai-len-video\",\n        \"tai-len\",\n        \"mp4\",\n        \"phim\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Phương tiện\",\n    },\n    audio: {\n      title: \"Âm thanh\",\n      subtext: \"Chèn âm thanh\",\n      aliases: [\n        \"âm thanh\",\n        \"tai-len-am-thanh\",\n        \"tai-len\",\n        \"mp3\",\n        \"am thanh\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Phương tiện\",\n    },\n    file: {\n      title: \"Tệp\",\n      subtext: \"Chèn tệp\",\n      aliases: [\"tep\", \"tai-len\", \"nhung\", \"media\", \"url\"],\n      group: \"Phương tiện\",\n    },\n    emoji: {\n      title: \"Biểu tượng cảm xúc\",\n      subtext: \"Dùng để chèn biểu tượng cảm xúc\",\n      aliases: [\n        \"biểu tượng cảm xúc\",\n        \"emoji\",\n        \"emoticon\",\n        \"cảm xúc expression\",\n        \"khuôn mặt\",\n        \"face\",\n      ],\n      group: \"Khác\",\n    },\n  },\n  placeholders: {\n    default: \"Nhập văn bản hoặc gõ '/' để thêm định dạng\",\n    heading: \"Tiêu đề\",\n    bulletListItem: \"Danh sách\",\n    numberedListItem: \"Danh sách\",\n    checkListItem: \"Danh sách\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Thêm ảnh\",\n    },\n    video: {\n      add_button_text: \"Thêm video\",\n    },\n    audio: {\n      add_button_text: \"Thêm âm thanh\",\n    },\n    file: {\n      add_button_text: \"Thêm tệp\",\n    },\n  },\n  // từ gói phản ứng:\n  side_menu: {\n    add_block_label: \"Thêm khối\",\n    drag_handle_label: \"Mở trình đơn khối\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Xóa\",\n    colors_menuitem: \"Màu sắc\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Xóa cột\",\n    delete_row_menuitem: \"Xóa hàng\",\n    add_left_menuitem: \"Thêm cột bên trái\",\n    add_right_menuitem: \"Thêm cột bên phải\",\n    add_above_menuitem: \"Thêm hàng phía trên\",\n    add_below_menuitem: \"Thêm hàng phía dưới\",\n  },\n  suggestion_menu: {\n    no_items_title: \"Không tìm thấy mục nào\",\n    loading: \"Đang tải...\",\n  },\n  color_picker: {\n    text_title: \"Văn bản\",\n    background_title: \"Nền\",\n    colors: {\n      default: \"Mặc định\",\n      gray: \"Xám\",\n      brown: \"Nâu\",\n      red: \"Đỏ\",\n      orange: \"Cam\",\n      yellow: \"Vàng\",\n      green: \"Xanh lá\",\n      blue: \"Xanh dương\",\n      purple: \"Tím\",\n      pink: \"Hồng\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"In đậm\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"In nghiêng\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Gạch dưới\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Gạch ngang\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Code\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Màu sắc\",\n    },\n    link: {\n      tooltip: \"Tạo liên kết\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Chỉnh sửa chú thích\",\n      input_placeholder: \"Chỉnh sửa chú thích\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Thay thế hình ảnh\",\n        video: \"Thay thế video\",\n        audio: \"Thay thế âm thanh\",\n        file: \"Thay thế tệp\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Đổi tên hình ảnh\",\n        video: \"Đổi tên video\",\n        audio: \"Đổi tên âm thanh\",\n        file: \"Đổi tên tệp\",\n      },\n      input_placeholder: {\n        image: \"Đổi tên hình ảnh\",\n        video: \"Đổi tên video\",\n        audio: \"Đổi tên âm thanh\",\n        file: \"Đổi tên tệp\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Tải xuống hình ảnh\",\n        video: \"Tải xuống video\",\n        audio: \"Tải xuống âm thanh\",\n        file: \"Tải xuống tệp\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Xóa hình ảnh\",\n        video: \"Xóa video\",\n        audio: \"Xóa âm thanh\",\n        file: \"Xóa tệp\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Chuyển đổi xem trước\",\n    },\n    nest: {\n      tooltip: \"Lồng khối\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Bỏ lồng khối\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Căn trái văn bản\",\n    },\n    align_center: {\n      tooltip: \"Căn giữa văn bản\",\n    },\n    align_right: {\n      tooltip: \"Căn phải văn bản\",\n    },\n    align_justify: {\n      tooltip: \"Căn đều văn bản\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Tải lên\",\n      file_placeholder: {\n        image: \"Tải lên hình ảnh\",\n        video: \"Tải lên video\",\n        audio: \"Tải lên âm thanh\",\n        file: \"Tải lên tệp\",\n      },\n      upload_error: \"Lỗi: Tải lên thất bại\",\n    },\n    embed: {\n      title: \"Nhúng\",\n      embed_button: {\n        image: \"Nhúng hình ảnh\",\n        video: \"Nhúng video\",\n        audio: \"Nhúng âm thanh\",\n        file: \"Nhúng tệp\",\n      },\n      url_placeholder: \"Nhập URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Xóa liên kết\",\n    },\n    edit: {\n      text: \"Chỉnh sửa liên kết\",\n      tooltip: \"Chỉnh sửa\",\n    },\n    open: {\n      tooltip: \"Mở trong tab mới\",\n    },\n    form: {\n      title_placeholder: \"Chỉnh sửa tiêu đề\",\n      url_placeholder: \"Chỉnh sửa URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n","import type { Dictionary } from \"../dictionary\";\n\nexport const zh: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"一级标题\",\n      subtext: \"用于顶级标题\",\n      aliases: [\"h\", \"heading1\", \"h1\", \"标题\", \"一级标题\"],\n      group: \"标题\",\n    },\n    heading_2: {\n      title: \"二级标题\",\n      subtext: \"用于关键部分\",\n      aliases: [\"h2\", \"heading2\", \"subheading\", \"标题\", \"二级标题\", \"副标题\"],\n      group: \"标题\",\n    },\n    heading_3: {\n      title: \"三级标题\",\n      subtext: \"用于小节和分组标题\",\n      aliases: [\"h3\", \"heading3\", \"subheading\", \"标题\", \"三级标题\"],\n      group: \"标题\",\n    },\n    numbered_list: {\n      title: \"有序列表\",\n      subtext: \"用于显示有序列表\",\n      aliases: [\n        \"ol\",\n        \"li\",\n        \"list\",\n        \"numberedlist\",\n        \"numbered list\",\n        \"列表\",\n        \"有序列表\",\n      ],\n      group: \"基础\",\n    },\n    bullet_list: {\n      title: \"无序列表\",\n      subtext: \"用于显示无序列表\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"list\",\n        \"bulletlist\",\n        \"bullet list\",\n        \"列表\",\n        \"无序列表\",\n      ],\n      group: \"基础\",\n    },\n    check_list: {\n      title: \"检查清单\",\n      subtext: \"用于显示带有复选框的列表\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"checklist\",\n        \"checked list\",\n        \"列表\",\n        \"检查清单\",\n        \"勾选列表\",\n        \"复选框\",\n      ],\n      group: \"基础\",\n    },\n    paragraph: {\n      title: \"段落\",\n      subtext: \"用于文档正文\",\n      aliases: [\"p\", \"paragraph\", \"text\", \"正文\"],\n      group: \"基础\",\n    },\n    table: {\n      title: \"表格\",\n      subtext: \"使用表格\",\n      aliases: [\"table\", \"表格\"],\n      group: \"高级功能\",\n    },\n    image: {\n      title: \"图片\",\n      subtext: \"插入图片\",\n      aliases: [\n        \"图片\",\n        \"上传图片\",\n        \"上传\",\n        \"image\",\n        \"img\",\n        \"相册\",\n        \"媒体\",\n        \"url\",\n      ],\n      group: \"媒体\",\n    },\n    video: {\n      title: \"视频\",\n      subtext: \"插入视频\",\n      aliases: [\n        \"视频\",\n        \"视频上传\",\n        \"上传\",\n        \"video\",\n        \"mp4\",\n        \"电影\",\n        \"媒体\",\n        \"url\",\n        \"驱动\",\n        \"dropbox\",\n      ],\n      group: \"媒体\",\n    },\n    audio: {\n      title: \"音频\",\n      subtext: \"插入音频\",\n      aliases: [\n        \"音频\",\n        \"音频上传\",\n        \"上传\",\n        \"audio\",\n        \"mp3\",\n        \"声音\",\n        \"媒体\",\n        \"url\",\n        \"驱动\",\n        \"dropbox\",\n      ],\n      group: \"媒体\",\n    },\n    file: {\n      title: \"文件\",\n      subtext: \"插入文件\",\n      aliases: [\"文件\", \"上传\", \"file\", \"嵌入\", \"媒体\", \"url\"],\n      group: \"媒体\",\n    },\n    emoji: {\n      title: \"表情符号\",\n      subtext: \"用于插入表情符号\",\n      aliases: [\n        \"表情符号\",\n        \"emoji\",\n        \"face\",\n        \"emote\",\n        \"表情\",\n        \"表情表达\",\n        \"表情\",\n      ],\n      group: \"其他\",\n    },\n  },\n  placeholders: {\n    default: \"输入 '/' 以使用命令\",\n    heading: \"标题\",\n    bulletListItem: \"列表\",\n    numberedListItem: \"列表\",\n    checkListItem: \"列表\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"添加图片\",\n    },\n    video: {\n      add_button_text: \"添加视频\",\n    },\n    audio: {\n      add_button_text: \"添加音频\",\n    },\n    file: {\n      add_button_text: \"添加文件\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"添加块\",\n    drag_handle_label: \"打开菜单\",\n  },\n  drag_handle: {\n    delete_menuitem: \"删除\",\n    colors_menuitem: \"颜色\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"删除列\",\n    delete_row_menuitem: \"删除行\",\n    add_left_menuitem: \"左侧添加列\",\n    add_right_menuitem: \"右侧添加列\",\n    add_above_menuitem: \"上方添加行\",\n    add_below_menuitem: \"下方添加行\",\n  },\n  suggestion_menu: {\n    no_items_title: \"无匹配项\",\n    loading: \"加载中…\",\n  },\n  color_picker: {\n    text_title: \"文本\",\n    background_title: \"背景色\",\n    colors: {\n      default: \"默认\",\n      gray: \"灰色\",\n      brown: \"棕色\",\n      red: \"红色\",\n      orange: \"橙色\",\n      yellow: \"黄色\",\n      green: \"绿色\",\n      blue: \"蓝色\",\n      purple: \"紫色\",\n      pink: \"粉色\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"加粗\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"斜体\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"下划线\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"删除线\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"代码标记\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"颜色\",\n    },\n    link: {\n      tooltip: \"添加链接\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"编辑标题\",\n      input_placeholder: \"编辑标题\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"替换图片\",\n        video: \"替换视频\",\n        audio: \"替换音频\",\n        file: \"替换文件\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"重命名图片\",\n        video: \"重命名视频\",\n        audio: \"重命名音频\",\n        file: \"重命名文件\",\n      },\n      input_placeholder: {\n        image: \"重命名图片\",\n        video: \"重命名视频\",\n        audio: \"重命名音频\",\n        file: \"重命名文件\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"下载图片\",\n        video: \"下载视频\",\n        audio: \"下载音频\",\n        file: \"下载文件\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"删除图片\",\n        video: \"删除视频\",\n        audio: \"删除音频\",\n        file: \"删除文件\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"切换预览\",\n    },\n    nest: {\n      tooltip: \"嵌套\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"取消嵌套\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"左对齐\",\n    },\n    align_center: {\n      tooltip: \"居中\",\n    },\n    align_right: {\n      tooltip: \"右对齐\",\n    },\n    align_justify: {\n      tooltip: \"文本对齐\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"上传\",\n      file_placeholder: {\n        image: \"上传图片\",\n        video: \"上传视频\",\n        audio: \"上传音频\",\n        file: \"上传文件\",\n      },\n      upload_error: \"Error：上传失败\",\n    },\n    embed: {\n      title: \"嵌入\",\n      embed_button: {\n        image: \"嵌入图片\",\n        video: \"嵌入视频\",\n        audio: \"嵌入音频\",\n        file: \"嵌入文件\",\n      },\n      url_placeholder: \"输入图片地址\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"清除链接\",\n    },\n    edit: {\n      text: \"编辑链接\",\n      tooltip: \"编辑\",\n    },\n    open: {\n      tooltip: \"新窗口打开\",\n    },\n    form: {\n      title_placeholder: \"编辑标题\",\n      url_placeholder: \"编辑链接地址\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n","// some dependencies only export as ESM modules. This makes them incompatible with Node CJS.\n// To work around this, we load these dependencies as dynamic imports in a function that initializes them.\n\n// (to reproduce this issue, run ts-node on a file that users server-util)\nexport let esmDependencies:\n  | undefined\n  | {\n      rehypeParse: typeof import(\"rehype-parse\");\n      rehypeStringify: typeof import(\"rehype-stringify\");\n      unified: typeof import(\"unified\");\n      hastUtilFromDom: typeof import(\"hast-util-from-dom\");\n      rehypeRemark: typeof import(\"rehype-remark\");\n      remarkGfm: typeof import(\"remark-gfm\");\n      remarkStringify: typeof import(\"remark-stringify\");\n      remarkParse: typeof import(\"remark-parse\");\n      remarkRehype: typeof import(\"remark-rehype\");\n      rehypeFormat: typeof import(\"rehype-format\");\n    };\n\nexport async function initializeESMDependencies() {\n  if (esmDependencies) {\n    return esmDependencies;\n  }\n  const vals = await Promise.all([\n    import(\"rehype-parse\"),\n    import(\"rehype-stringify\"),\n    import(\"unified\"),\n    import(\"hast-util-from-dom\"),\n    import(\"rehype-remark\"),\n    import(\"remark-gfm\"),\n    import(\"remark-stringify\"),\n    import(\"remark-parse\"),\n    import(\"remark-rehype\"),\n    import(\"rehype-format\"),\n  ]);\n\n  esmDependencies = {\n    rehypeParse: vals[0],\n    rehypeStringify: vals[1],\n    unified: vals[2],\n    hastUtilFromDom: vals[3],\n    rehypeRemark: vals[4],\n    remarkGfm: vals[5],\n    remarkStringify: vals[6],\n    remarkParse: vals[7],\n    remarkRehype: vals[8],\n    rehypeFormat: vals[9],\n  };\n\n  return esmDependencies;\n}\n","import {\n  combineTransactionSteps,\n  Extension,\n  findChildrenInRange,\n  getChangedRanges,\n} from \"@tiptap/core\";\nimport { Fragment, Slice } from \"prosemirror-model\";\nimport { Plugin, PluginKey } from \"prosemirror-state\";\nimport { v4 } from \"uuid\";\n\n/**\n * Code from Tiptap UniqueID extension (https://tiptap.dev/api/extensions/unique-id)\n * This extension is licensed under MIT (even though it's part of Tiptap pro).\n *\n * If you're a user of BlockNote, we still recommend to support their awesome work and become a sponsor!\n * https://tiptap.dev/pro\n */\n\n/**\n * Removes duplicated values within an array.\n * Supports numbers, strings and objects.\n */\nfunction removeDuplicates(array: any, by = JSON.stringify) {\n  const seen: any = {};\n  return array.filter((item: any) => {\n    const key = by(item);\n    return Object.prototype.hasOwnProperty.call(seen, key)\n      ? false\n      : (seen[key] = true);\n  });\n}\n\n/**\n * Returns a list of duplicated items within an array.\n */\nfunction findDuplicates(items: any) {\n  const filtered = items.filter(\n    (el: any, index: number) => items.indexOf(el) !== index\n  );\n  const duplicates = removeDuplicates(filtered);\n  return duplicates;\n}\n\nconst UniqueID = Extension.create({\n  name: \"uniqueID\",\n  // we’ll set a very high priority to make sure this runs first\n  // and is compatible with `appendTransaction` hooks of other extensions\n  priority: 10000,\n  addOptions() {\n    return {\n      attributeName: \"id\",\n      types: [],\n      setIdAttribute: false,\n      generateID: () => {\n        // Use mock ID if tests are running.\n        if (typeof window !== \"undefined\" && (window as any).__TEST_OPTIONS) {\n          const testOptions = (window as any).__TEST_OPTIONS;\n          if (testOptions.mockID === undefined) {\n            testOptions.mockID = 0;\n          } else {\n            testOptions.mockID++;\n          }\n\n          return testOptions.mockID.toString() as string;\n        }\n\n        return v4();\n      },\n      filterTransaction: null,\n    };\n  },\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          [this.options.attributeName]: {\n            default: null,\n            parseHTML: (element) =>\n              element.getAttribute(`data-${this.options.attributeName}`),\n            renderHTML: (attributes) => {\n              const defaultIdAttributes = {\n                [`data-${this.options.attributeName}`]:\n                  attributes[this.options.attributeName],\n              };\n              if (this.options.setIdAttribute) {\n                return {\n                  ...defaultIdAttributes,\n                  id: attributes[this.options.attributeName],\n                };\n              } else {\n                return defaultIdAttributes;\n              }\n            },\n          },\n        },\n      },\n    ];\n  },\n  // check initial content for missing ids\n  // onCreate() {\n  //   // Don’t do this when the collaboration extension is active\n  //   // because this may update the content, so Y.js tries to merge these changes.\n  //   // This leads to empty block nodes.\n  //   // See: https://github.com/ueberdosis/tiptap/issues/2400\n  //   if (\n  //     this.editor.extensionManager.extensions.find(\n  //       (extension) => extension.name === \"collaboration\"\n  //     )\n  //   ) {\n  //     return;\n  //   }\n  //   const { view, state } = this.editor;\n  //   const { tr, doc } = state;\n  //   const { types, attributeName, generateID } = this.options;\n  //   const nodesWithoutId = findChildren(doc, (node) => {\n  //     return (\n  //       types.includes(node.type.name) && node.attrs[attributeName] === null\n  //     );\n  //   });\n  //   nodesWithoutId.forEach(({ node, pos }) => {\n  //     tr.setNodeMarkup(pos, undefined, {\n  //       ...node.attrs,\n  //       [attributeName]: generateID(),\n  //     });\n  //   });\n  //   tr.setMeta(\"addToHistory\", false);\n  //   view.dispatch(tr);\n  // },\n  addProseMirrorPlugins() {\n    let dragSourceElement: any = null;\n    let transformPasted = false;\n    return [\n      new Plugin({\n        key: new PluginKey(\"uniqueID\"),\n        appendTransaction: (transactions, oldState, newState) => {\n          // console.log(\"appendTransaction\");\n          const docChanges =\n            transactions.some((transaction) => transaction.docChanged) &&\n            !oldState.doc.eq(newState.doc);\n          const filterTransactions =\n            this.options.filterTransaction &&\n            transactions.some((tr) => {\n              let _a, _b;\n              return !((_b = (_a = this.options).filterTransaction) === null ||\n              _b === void 0\n                ? void 0\n                : _b.call(_a, tr));\n            });\n          if (!docChanges || filterTransactions) {\n            return;\n          }\n          const { tr } = newState;\n          const { types, attributeName, generateID } = this.options;\n          const transform = combineTransactionSteps(\n            oldState.doc,\n            transactions as any\n          );\n          const { mapping } = transform;\n          // get changed ranges based on the old state\n          const changes = getChangedRanges(transform);\n\n          changes.forEach(({ newRange }) => {\n            const newNodes = findChildrenInRange(\n              newState.doc,\n              newRange,\n              (node) => {\n                return types.includes(node.type.name);\n              }\n            );\n            const newIds = newNodes\n              .map(({ node }) => node.attrs[attributeName])\n              .filter((id) => id !== null);\n            const duplicatedNewIds = findDuplicates(newIds);\n            newNodes.forEach(({ node, pos }) => {\n              let _a;\n              // instead of checking `node.attrs[attributeName]` directly\n              // we look at the current state of the node within `tr.doc`.\n              // this helps to prevent adding new ids to the same node\n              // if the node changed multiple times within one transaction\n              const id =\n                (_a = tr.doc.nodeAt(pos)) === null || _a === void 0\n                  ? void 0\n                  : _a.attrs[attributeName];\n              if (id === null) {\n                // edge case, when using collaboration, yjs will set the id to null in `_forceRerender`\n                // when loading the editor\n                // this checks for this case and keeps it at initialBlockId so there will be no change\n                const initialDoc = oldState.doc.type.createAndFill()!.content;\n                const wasInitial =\n                  oldState.doc.content.findDiffStart(initialDoc) === null;\n\n                if (wasInitial) {\n                  // the old state was the \"initial content\"\n                  const jsonNode = JSON.parse(\n                    JSON.stringify(newState.doc.toJSON())\n                  );\n                  jsonNode.content[0].content[0].attrs.id = \"initialBlockId\";\n                  // would the new state with the fix also be the \"initial content\"?\n                  if (\n                    JSON.stringify(jsonNode.content) ===\n                    JSON.stringify(initialDoc.toJSON())\n                  ) {\n                    // yes, apply the fix\n                    tr.setNodeMarkup(pos, undefined, {\n                      ...node.attrs,\n                      [attributeName]: \"initialBlockId\",\n                    });\n                    return;\n                  }\n                }\n\n                tr.setNodeMarkup(pos, undefined, {\n                  ...node.attrs,\n                  [attributeName]: generateID(),\n                });\n                return;\n              }\n              // check if the node doesn’t exist in the old state\n              const { deleted } = mapping.invert().mapResult(pos);\n              const newNode = deleted && duplicatedNewIds.includes(id);\n              if (newNode) {\n                tr.setNodeMarkup(pos, undefined, {\n                  ...node.attrs,\n                  [attributeName]: generateID(),\n                });\n              }\n            });\n          });\n          if (!tr.steps.length) {\n            return;\n          }\n          return tr;\n        },\n        // we register a global drag handler to track the current drag source element\n        view(view) {\n          const handleDragstart = (event: any) => {\n            let _a;\n            dragSourceElement = (\n              (_a = view.dom.parentElement) === null || _a === void 0\n                ? void 0\n                : _a.contains(event.target)\n            )\n              ? view.dom.parentElement\n              : null;\n          };\n          window.addEventListener(\"dragstart\", handleDragstart);\n          return {\n            destroy() {\n              window.removeEventListener(\"dragstart\", handleDragstart);\n            },\n          };\n        },\n        props: {\n          // `handleDOMEvents` is called before `transformPasted`\n          // so we can do some checks before\n          handleDOMEvents: {\n            // only create new ids for dropped content while holding `alt`\n            // or content is dragged from another editor\n            drop: (view, event: any) => {\n              let _a;\n              if (\n                dragSourceElement !== view.dom.parentElement ||\n                ((_a = event.dataTransfer) === null || _a === void 0\n                  ? void 0\n                  : _a.effectAllowed) === \"copy\"\n              ) {\n                dragSourceElement = null;\n                transformPasted = true;\n              }\n              return false;\n            },\n            // always create new ids on pasted content\n            paste: () => {\n              transformPasted = true;\n              return false;\n            },\n          },\n          // we’ll remove ids for every pasted node\n          // so we can create a new one within `appendTransaction`\n          transformPasted: (slice) => {\n            if (!transformPasted) {\n              return slice;\n            }\n            const { types, attributeName } = this.options;\n            const removeId = (fragment: any) => {\n              const list: any[] = [];\n              fragment.forEach((node: any) => {\n                // don’t touch text nodes\n                if (node.isText) {\n                  list.push(node);\n                  return;\n                }\n                // check for any other child nodes\n                if (!types.includes(node.type.name)) {\n                  list.push(node.copy(removeId(node.content)));\n                  return;\n                }\n                // remove id\n                const nodeWithoutId = node.type.create(\n                  {\n                    ...node.attrs,\n                    [attributeName]: null,\n                  },\n                  removeId(node.content),\n                  node.marks\n                );\n                list.push(nodeWithoutId);\n              });\n              return Fragment.from(list);\n            };\n            // reset check\n            transformPasted = false;\n            return new Slice(\n              removeId(slice.content),\n              slice.openStart,\n              slice.openEnd\n            );\n          },\n        },\n      }),\n    ];\n  },\n});\n\nexport { UniqueID as default, UniqueID };\n","import { Node, NodeType } from \"prosemirror-model\";\n\nexport type BlockInfoWithoutPositions = {\n  id: string;\n  node: Node;\n  contentNode: Node;\n  contentType: NodeType;\n  numChildBlocks: number;\n};\n\nexport type BlockInfo = BlockInfoWithoutPositions & {\n  startPos: number;\n  endPos: number;\n  depth: number;\n};\n\n/**\n * Helper function for `getBlockInfoFromPos`, returns information regarding\n * provided blockContainer node.\n * @param blockContainer The blockContainer node to retrieve info for.\n */\nexport function getBlockInfo(blockContainer: Node): BlockInfoWithoutPositions {\n  const id = blockContainer.attrs[\"id\"];\n  const contentNode = blockContainer.firstChild!;\n  const contentType = contentNode.type;\n  const numChildBlocks =\n    blockContainer.childCount === 2 ? blockContainer.lastChild!.childCount : 0;\n\n  return {\n    id,\n    node: blockContainer,\n    contentNode,\n    contentType,\n    numChildBlocks,\n  };\n}\n\n/**\n * Retrieves information regarding the nearest blockContainer node in a\n * ProseMirror doc, relative to a position.\n * @param doc The ProseMirror doc.\n * @param pos An integer position.\n * @returns A BlockInfo object for the nearest blockContainer node.\n */\nexport function getBlockInfoFromPos(doc: Node, pos: number): BlockInfo {\n  // If the position is outside the outer block group, we need to move it to the\n  // nearest block. This happens when the collaboration plugin is active, where\n  // the selection is placed at the very end of the doc.\n  const outerBlockGroupStartPos = 1;\n  const outerBlockGroupEndPos = doc.nodeSize - 2;\n  if (pos <= outerBlockGroupStartPos) {\n    pos = outerBlockGroupStartPos + 1;\n\n    while (\n      doc.resolve(pos).parent.type.name !== \"blockContainer\" &&\n      pos < outerBlockGroupEndPos\n    ) {\n      pos++;\n    }\n  } else if (pos >= outerBlockGroupEndPos) {\n    pos = outerBlockGroupEndPos - 1;\n\n    while (\n      doc.resolve(pos).parent.type.name !== \"blockContainer\" &&\n      pos > outerBlockGroupStartPos\n    ) {\n      pos--;\n    }\n  }\n\n  // This gets triggered when a node selection on a block is active, i.e. when\n  // you drag and drop a block.\n  if (doc.resolve(pos).parent.type.name === \"blockGroup\") {\n    pos++;\n  }\n\n  const $pos = doc.resolve(pos);\n\n  const maxDepth = $pos.depth;\n  let node = $pos.node(maxDepth);\n  let depth = maxDepth;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (depth < 0) {\n      throw new Error(\n        \"Could not find blockContainer node. This can only happen if the underlying BlockNote schema has been edited.\"\n      );\n    }\n\n    if (node.type.name === \"blockContainer\") {\n      break;\n    }\n\n    depth -= 1;\n    node = $pos.node(depth);\n  }\n\n  const { id, contentNode, contentType, numChildBlocks } = getBlockInfo(node);\n\n  const startPos = $pos.start(depth);\n  const endPos = $pos.end(depth);\n\n  return {\n    id,\n    node,\n    contentNode,\n    contentType,\n    numChildBlocks,\n    startPos,\n    endPos,\n    depth,\n  };\n}\n","import { Node } from \"@tiptap/core\";\nimport { PropSchema, Props } from \"../propTypes\";\nimport { StyleSchema, Styles } from \"../styles/types\";\n\nexport type CustomInlineContentConfig = {\n  type: string;\n  content: \"styled\" | \"none\"; // | \"plain\"\n  readonly propSchema: PropSchema;\n  // content: \"inline\" | \"none\" | \"table\";\n};\n// InlineContentConfig contains the \"schema\" info about an InlineContent type\n// i.e. what props it supports, what content it supports, etc.\nexport type InlineContentConfig = CustomInlineContentConfig | \"text\" | \"link\";\n\n// InlineContentImplementation contains the \"implementation\" info about an InlineContent element\n// such as the functions / Nodes required to render and / or serialize it\n// @ts-ignore\nexport type InlineContentImplementation<T extends InlineContentConfig> =\n  T extends \"link\" | \"text\"\n    ? undefined\n    : {\n        node: Node;\n      };\n\n// Container for both the config and implementation of InlineContent,\n// and the type of `implementation` is based on that of the config\nexport type InlineContentSpec<T extends InlineContentConfig> = {\n  config: T;\n  implementation: InlineContentImplementation<T>;\n};\n\n// A Schema contains all the types (Configs) supported in an editor\n// The keys are the \"type\" of InlineContent elements\nexport type InlineContentSchema = Record<string, InlineContentConfig>;\n\nexport type InlineContentSpecs = {\n  text: { config: \"text\"; implementation: undefined };\n  link: { config: \"link\"; implementation: undefined };\n} & Record<string, InlineContentSpec<InlineContentConfig>>;\n\nexport type InlineContentSchemaFromSpecs<T extends InlineContentSpecs> = {\n  [K in keyof T]: T[K][\"config\"];\n};\n\nexport type CustomInlineContentFromConfig<\n  I extends CustomInlineContentConfig,\n  S extends StyleSchema\n> = {\n  type: I[\"type\"];\n  props: Props<I[\"propSchema\"]>;\n  content: I[\"content\"] extends \"styled\"\n    ? StyledText<S>[]\n    : I[\"content\"] extends \"plain\"\n    ? string\n    : I[\"content\"] extends \"none\"\n    ? undefined\n    : never;\n};\n\nexport type InlineContentFromConfig<\n  I extends InlineContentConfig,\n  S extends StyleSchema\n> = I extends \"text\"\n  ? StyledText<S>\n  : I extends \"link\"\n  ? Link<S>\n  : I extends CustomInlineContentConfig\n  ? CustomInlineContentFromConfig<I, S>\n  : never;\n\nexport type PartialCustomInlineContentFromConfig<\n  I extends CustomInlineContentConfig,\n  S extends StyleSchema\n> = {\n  type: I[\"type\"];\n  props?: Props<I[\"propSchema\"]>;\n  content?: I[\"content\"] extends \"styled\"\n    ? StyledText<S>[] | string\n    : I[\"content\"] extends \"plain\"\n    ? string\n    : I[\"content\"] extends \"none\"\n    ? undefined\n    : never;\n};\n\nexport type PartialInlineContentFromConfig<\n  I extends InlineContentConfig,\n  S extends StyleSchema\n> = I extends \"text\"\n  ? string | StyledText<S>\n  : I extends \"link\"\n  ? PartialLink<S>\n  : I extends CustomInlineContentConfig\n  ? PartialCustomInlineContentFromConfig<I, S>\n  : never;\n\nexport type StyledText<T extends StyleSchema> = {\n  type: \"text\";\n  text: string;\n  styles: Styles<T>;\n};\n\nexport type Link<T extends StyleSchema> = {\n  type: \"link\";\n  href: string;\n  content: StyledText<T>[];\n};\n\nexport type PartialLink<T extends StyleSchema> = Omit<Link<T>, \"content\"> & {\n  content: string | Link<T>[\"content\"];\n};\n\nexport type InlineContent<\n  I extends InlineContentSchema,\n  T extends StyleSchema\n> = InlineContentFromConfig<I[keyof I], T>;\n\ntype PartialInlineContentElement<\n  I extends InlineContentSchema,\n  T extends StyleSchema\n> = PartialInlineContentFromConfig<I[keyof I], T>;\n\nexport type PartialInlineContent<\n  I extends InlineContentSchema,\n  T extends StyleSchema\n> = PartialInlineContentElement<I, T>[] | string;\n\nexport function isLinkInlineContent<T extends StyleSchema>(\n  content: InlineContent<any, T>\n): content is Link<T> {\n  return content.type === \"link\";\n}\n\nexport function isPartialLinkInlineContent<T extends StyleSchema>(\n  content: PartialInlineContentElement<any, T>\n): content is PartialLink<T> {\n  return typeof content !== \"string\" && content.type === \"link\";\n}\n\nexport function isStyledTextInlineContent<T extends StyleSchema>(\n  content: PartialInlineContentElement<any, T>\n): content is StyledText<T> {\n  return typeof content !== \"string\" && content.type === \"text\";\n}\n","export class UnreachableCaseError extends Error {\n  constructor(val: never) {\n    super(`Unreachable case: ${val}`);\n  }\n}\n\nexport function assertEmpty(obj: Record<string, never>, throwError = true) {\n  const { \"data-test\": dataTest, ...rest } = obj; // exclude data-test\n\n  if (Object.keys(rest).length > 0 && throwError) {\n    throw new Error(\"Object must be empty \" + JSON.stringify(obj));\n  }\n}\n\n// TODO: change for built-in version of typescript 5.4 after upgrade\nexport type NoInfer<T> = [T][T extends any ? 0 : never];\n","import { Mark, Node, Schema } from \"@tiptap/pm/model\";\n\nimport UniqueID from \"../../extensions/UniqueID/UniqueID\";\nimport type {\n  BlockSchema,\n  CustomInlineContentConfig,\n  CustomInlineContentFromConfig,\n  InlineContent,\n  InlineContentFromConfig,\n  InlineContentSchema,\n  PartialCustomInlineContentFromConfig,\n  PartialInlineContent,\n  PartialLink,\n  PartialTableContent,\n  StyleSchema,\n  StyledText,\n  Styles,\n  TableContent,\n} from \"../../schema\";\nimport { getBlockInfo } from \"../getBlockInfoFromPos\";\n\nimport type { Block, PartialBlock } from \"../../blocks/defaultBlocks\";\nimport {\n  isLinkInlineContent,\n  isPartialLinkInlineContent,\n  isStyledTextInlineContent,\n} from \"../../schema/inlineContent/types\";\nimport { UnreachableCaseError } from \"../../util/typescript\";\n\n/**\n * Convert a StyledText inline element to a\n * prosemirror text node with the appropriate marks\n */\nfunction styledTextToNodes<T extends StyleSchema>(\n  styledText: StyledText<T>,\n  schema: Schema,\n  styleSchema: T\n): Node[] {\n  const marks: Mark[] = [];\n\n  for (const [style, value] of Object.entries(styledText.styles)) {\n    const config = styleSchema[style];\n    if (!config) {\n      throw new Error(`style ${style} not found in styleSchema`);\n    }\n\n    if (config.propSchema === \"boolean\") {\n      marks.push(schema.mark(style));\n    } else if (config.propSchema === \"string\") {\n      marks.push(schema.mark(style, { stringValue: value }));\n    } else {\n      throw new UnreachableCaseError(config.propSchema);\n    }\n  }\n\n  return (\n    styledText.text\n      // Splits text & line breaks.\n      .split(/(\\n)/g)\n      // If the content ends with a line break, an empty string is added to the\n      // end, which this removes.\n      .filter((text) => text.length > 0)\n      // Converts text & line breaks to nodes.\n      .map((text) => {\n        if (text === \"\\n\") {\n          return schema.nodes[\"hardBreak\"].create();\n        } else {\n          return schema.text(text, marks);\n        }\n      })\n  );\n}\n\n/**\n * Converts a Link inline content element to\n * prosemirror text nodes with the appropriate marks\n */\nfunction linkToNodes(\n  link: PartialLink<StyleSchema>,\n  schema: Schema,\n  styleSchema: StyleSchema\n): Node[] {\n  const linkMark = schema.marks.link.create({\n    href: link.href,\n  });\n\n  return styledTextArrayToNodes(link.content, schema, styleSchema).map(\n    (node) => {\n      if (node.type.name === \"text\") {\n        return node.mark([...node.marks, linkMark]);\n      }\n\n      if (node.type.name === \"hardBreak\") {\n        return node;\n      }\n      throw new Error(\"unexpected node type\");\n    }\n  );\n}\n\n/**\n * Converts an array of StyledText inline content elements to\n * prosemirror text nodes with the appropriate marks\n */\nfunction styledTextArrayToNodes<S extends StyleSchema>(\n  content: string | StyledText<S>[],\n  schema: Schema,\n  styleSchema: S\n): Node[] {\n  const nodes: Node[] = [];\n\n  if (typeof content === \"string\") {\n    nodes.push(\n      ...styledTextToNodes(\n        { type: \"text\", text: content, styles: {} },\n        schema,\n        styleSchema\n      )\n    );\n    return nodes;\n  }\n\n  for (const styledText of content) {\n    nodes.push(...styledTextToNodes(styledText, schema, styleSchema));\n  }\n  return nodes;\n}\n\n/**\n * converts an array of inline content elements to prosemirror nodes\n */\nexport function inlineContentToNodes<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blockContent: PartialInlineContent<I, S>,\n  schema: Schema,\n  styleSchema: S\n): Node[] {\n  const nodes: Node[] = [];\n\n  for (const content of blockContent) {\n    if (typeof content === \"string\") {\n      nodes.push(...styledTextArrayToNodes(content, schema, styleSchema));\n    } else if (isPartialLinkInlineContent(content)) {\n      nodes.push(...linkToNodes(content, schema, styleSchema));\n    } else if (isStyledTextInlineContent(content)) {\n      nodes.push(...styledTextArrayToNodes([content], schema, styleSchema));\n    } else {\n      nodes.push(\n        blockOrInlineContentToContentNode(content, schema, styleSchema)\n      );\n    }\n  }\n  return nodes;\n}\n\n/**\n * converts an array of inline content elements to prosemirror nodes\n */\nexport function tableContentToNodes<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  tableContent: PartialTableContent<I, S>,\n  schema: Schema,\n  styleSchema: StyleSchema\n): Node[] {\n  const rowNodes: Node[] = [];\n\n  for (const row of tableContent.rows) {\n    const columnNodes: Node[] = [];\n    for (const cell of row.cells) {\n      let pNode: Node;\n      if (!cell) {\n        pNode = schema.nodes[\"tableParagraph\"].create({});\n      } else if (typeof cell === \"string\") {\n        pNode = schema.nodes[\"tableParagraph\"].create({}, schema.text(cell));\n      } else {\n        const textNodes = inlineContentToNodes(cell, schema, styleSchema);\n        pNode = schema.nodes[\"tableParagraph\"].create({}, textNodes);\n      }\n\n      const cellNode = schema.nodes[\"tableCell\"].create({}, pNode);\n      columnNodes.push(cellNode);\n    }\n    const rowNode = schema.nodes[\"tableRow\"].create({}, columnNodes);\n    rowNodes.push(rowNode);\n  }\n  return rowNodes;\n}\n\nfunction blockOrInlineContentToContentNode(\n  block:\n    | PartialBlock<any, any, any>\n    | PartialCustomInlineContentFromConfig<any, any>,\n  schema: Schema,\n  styleSchema: StyleSchema\n) {\n  let contentNode: Node;\n  let type = block.type;\n\n  // TODO: needed? came from previous code\n  if (type === undefined) {\n    type = \"paragraph\";\n  }\n\n  if (!schema.nodes[type]) {\n    throw new Error(`node type ${type} not found in schema`);\n  }\n\n  if (!block.content) {\n    contentNode = schema.nodes[type].create(block.props);\n  } else if (typeof block.content === \"string\") {\n    const nodes = inlineContentToNodes([block.content], schema, styleSchema);\n    contentNode = schema.nodes[type].create(block.props, nodes);\n  } else if (Array.isArray(block.content)) {\n    const nodes = inlineContentToNodes(block.content, schema, styleSchema);\n    contentNode = schema.nodes[type].create(block.props, nodes);\n  } else if (block.content.type === \"tableContent\") {\n    const nodes = tableContentToNodes(block.content, schema, styleSchema);\n    contentNode = schema.nodes[type].create(block.props, nodes);\n  } else {\n    throw new UnreachableCaseError(block.content.type);\n  }\n  return contentNode;\n}\n/**\n * Converts a BlockNote block to a TipTap node.\n */\nexport function blockToNode(\n  block: PartialBlock<any, any, any>,\n  schema: Schema,\n  styleSchema: StyleSchema\n) {\n  let id = block.id;\n\n  if (id === undefined) {\n    id = UniqueID.options.generateID();\n  }\n\n  const contentNode = blockOrInlineContentToContentNode(\n    block,\n    schema,\n    styleSchema\n  );\n\n  const children: Node[] = [];\n\n  if (block.children) {\n    for (const child of block.children) {\n      children.push(blockToNode(child, schema, styleSchema));\n    }\n  }\n\n  const groupNode = schema.nodes[\"blockGroup\"].create({}, children);\n\n  return schema.nodes[\"blockContainer\"].create(\n    {\n      id: id,\n      ...block.props,\n    },\n    children.length > 0 ? [contentNode, groupNode] : contentNode\n  );\n}\n\n/**\n * Converts an internal (prosemirror) table node contentto a BlockNote Tablecontent\n */\nfunction contentNodeToTableContent<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(contentNode: Node, inlineContentSchema: I, styleSchema: S) {\n  const ret: TableContent<I, S> = {\n    type: \"tableContent\",\n    rows: [],\n  };\n\n  contentNode.content.forEach((rowNode) => {\n    const row: TableContent<I, S>[\"rows\"][0] = {\n      cells: [],\n    };\n\n    rowNode.content.forEach((cellNode) => {\n      row.cells.push(\n        contentNodeToInlineContent(\n          cellNode.firstChild!,\n          inlineContentSchema,\n          styleSchema\n        )\n      );\n    });\n\n    ret.rows.push(row);\n  });\n\n  return ret;\n}\n\n/**\n * Converts an internal (prosemirror) content node to a BlockNote InlineContent array.\n */\nexport function contentNodeToInlineContent<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(contentNode: Node, inlineContentSchema: I, styleSchema: S) {\n  const content: InlineContent<any, S>[] = [];\n  let currentContent: InlineContent<any, S> | undefined = undefined;\n\n  // Most of the logic below is for handling links because in ProseMirror links are marks\n  // while in BlockNote links are a type of inline content\n  contentNode.content.forEach((node) => {\n    // hardBreak nodes do not have an InlineContent equivalent, instead we\n    // add a newline to the previous node.\n    if (node.type.name === \"hardBreak\") {\n      if (currentContent) {\n        // Current content exists.\n        if (isStyledTextInlineContent(currentContent)) {\n          // Current content is text.\n          currentContent.text += \"\\n\";\n        } else if (isLinkInlineContent(currentContent)) {\n          // Current content is a link.\n          currentContent.content[currentContent.content.length - 1].text +=\n            \"\\n\";\n        } else {\n          throw new Error(\"unexpected\");\n        }\n      } else {\n        // Current content does not exist.\n        currentContent = {\n          type: \"text\",\n          text: \"\\n\",\n          styles: {},\n        };\n      }\n\n      return;\n    }\n\n    if (\n      node.type.name !== \"link\" &&\n      node.type.name !== \"text\" &&\n      inlineContentSchema[node.type.name]\n    ) {\n      if (currentContent) {\n        content.push(currentContent);\n        currentContent = undefined;\n      }\n\n      content.push(\n        nodeToCustomInlineContent(node, inlineContentSchema, styleSchema)\n      );\n\n      return;\n    }\n\n    const styles: Styles<S> = {};\n    let linkMark: Mark | undefined;\n\n    for (const mark of node.marks) {\n      if (mark.type.name === \"link\") {\n        linkMark = mark;\n      } else {\n        const config = styleSchema[mark.type.name];\n        if (!config) {\n          throw new Error(`style ${mark.type.name} not found in styleSchema`);\n        }\n        if (config.propSchema === \"boolean\") {\n          (styles as any)[config.type] = true;\n        } else if (config.propSchema === \"string\") {\n          (styles as any)[config.type] = mark.attrs.stringValue;\n        } else {\n          throw new UnreachableCaseError(config.propSchema);\n        }\n      }\n    }\n\n    // Parsing links and text.\n    // Current content exists.\n    if (currentContent) {\n      // Current content is text.\n      if (isStyledTextInlineContent(currentContent)) {\n        if (!linkMark) {\n          // Node is text (same type as current content).\n          if (\n            JSON.stringify(currentContent.styles) === JSON.stringify(styles)\n          ) {\n            // Styles are the same.\n            currentContent.text += node.textContent;\n          } else {\n            // Styles are different.\n            content.push(currentContent);\n            currentContent = {\n              type: \"text\",\n              text: node.textContent,\n              styles,\n            };\n          }\n        } else {\n          // Node is a link (different type to current content).\n          content.push(currentContent);\n          currentContent = {\n            type: \"link\",\n            href: linkMark.attrs.href,\n            content: [\n              {\n                type: \"text\",\n                text: node.textContent,\n                styles,\n              },\n            ],\n          };\n        }\n      } else if (isLinkInlineContent(currentContent)) {\n        // Current content is a link.\n        if (linkMark) {\n          // Node is a link (same type as current content).\n          // Link URLs are the same.\n          if (currentContent.href === linkMark.attrs.href) {\n            // Styles are the same.\n            if (\n              JSON.stringify(\n                currentContent.content[currentContent.content.length - 1].styles\n              ) === JSON.stringify(styles)\n            ) {\n              currentContent.content[currentContent.content.length - 1].text +=\n                node.textContent;\n            } else {\n              // Styles are different.\n              currentContent.content.push({\n                type: \"text\",\n                text: node.textContent,\n                styles,\n              });\n            }\n          } else {\n            // Link URLs are different.\n            content.push(currentContent);\n            currentContent = {\n              type: \"link\",\n              href: linkMark.attrs.href,\n              content: [\n                {\n                  type: \"text\",\n                  text: node.textContent,\n                  styles,\n                },\n              ],\n            };\n          }\n        } else {\n          // Node is text (different type to current content).\n          content.push(currentContent);\n          currentContent = {\n            type: \"text\",\n            text: node.textContent,\n            styles,\n          };\n        }\n      } else {\n        // TODO\n      }\n    }\n    // Current content does not exist.\n    else {\n      // Node is text.\n      if (!linkMark) {\n        currentContent = {\n          type: \"text\",\n          text: node.textContent,\n          styles,\n        };\n      }\n      // Node is a link.\n      else {\n        currentContent = {\n          type: \"link\",\n          href: linkMark.attrs.href,\n          content: [\n            {\n              type: \"text\",\n              text: node.textContent,\n              styles,\n            },\n          ],\n        };\n      }\n    }\n  });\n\n  if (currentContent) {\n    content.push(currentContent);\n  }\n\n  return content as InlineContent<I, S>[];\n}\n\nexport function nodeToCustomInlineContent<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(node: Node, inlineContentSchema: I, styleSchema: S): InlineContent<I, S> {\n  if (node.type.name === \"text\" || node.type.name === \"link\") {\n    throw new Error(\"unexpected\");\n  }\n  const props: any = {};\n  const icConfig = inlineContentSchema[\n    node.type.name\n  ] as CustomInlineContentConfig;\n  for (const [attr, value] of Object.entries(node.attrs)) {\n    if (!icConfig) {\n      throw Error(\"ic node is of an unrecognized type: \" + node.type.name);\n    }\n\n    const propSchema = icConfig.propSchema;\n\n    if (attr in propSchema) {\n      props[attr] = value;\n    }\n  }\n\n  let content: CustomInlineContentFromConfig<any, any>[\"content\"];\n\n  if (icConfig.content === \"styled\") {\n    content = contentNodeToInlineContent(\n      node,\n      inlineContentSchema,\n      styleSchema\n    ) as any; // TODO: is this safe? could we have Links here that are undesired?\n  } else {\n    content = undefined;\n  }\n\n  const ic = {\n    type: node.type.name,\n    props,\n    content,\n  } as InlineContentFromConfig<I[keyof I], S>;\n  return ic;\n}\n\n/**\n * Convert a TipTap node to a BlockNote block.\n */\nexport function nodeToBlock<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  node: Node,\n  blockSchema: BSchema,\n  inlineContentSchema: I,\n  styleSchema: S,\n  blockCache?: WeakMap<Node, Block<BSchema, I, S>>\n): Block<BSchema, I, S> {\n  if (node.type.name !== \"blockContainer\") {\n    throw Error(\n      \"Node must be of type blockContainer, but is of type\" +\n        node.type.name +\n        \".\"\n    );\n  }\n\n  const cachedBlock = blockCache?.get(node);\n\n  if (cachedBlock) {\n    return cachedBlock;\n  }\n\n  const blockInfo = getBlockInfo(node);\n\n  let id = blockInfo.id;\n\n  // Only used for blocks converted from other formats.\n  if (id === null) {\n    id = UniqueID.options.generateID();\n  }\n\n  const props: any = {};\n  for (const [attr, value] of Object.entries({\n    ...node.attrs,\n    ...blockInfo.contentNode.attrs,\n  })) {\n    const blockSpec = blockSchema[blockInfo.contentType.name];\n\n    if (!blockSpec) {\n      throw Error(\n        \"Block is of an unrecognized type: \" + blockInfo.contentType.name\n      );\n    }\n\n    const propSchema = blockSpec.propSchema;\n\n    if (attr in propSchema) {\n      props[attr] = value;\n    }\n  }\n\n  const blockConfig = blockSchema[blockInfo.contentType.name];\n\n  const children: Block<BSchema, I, S>[] = [];\n  for (let i = 0; i < blockInfo.numChildBlocks; i++) {\n    children.push(\n      nodeToBlock(\n        node.lastChild!.child(i),\n        blockSchema,\n        inlineContentSchema,\n        styleSchema,\n        blockCache\n      )\n    );\n  }\n\n  let content: Block<any, any, any>[\"content\"];\n\n  if (blockConfig.content === \"inline\") {\n    content = contentNodeToInlineContent(\n      blockInfo.contentNode,\n      inlineContentSchema,\n      styleSchema\n    );\n  } else if (blockConfig.content === \"table\") {\n    content = contentNodeToTableContent(\n      blockInfo.contentNode,\n      inlineContentSchema,\n      styleSchema\n    );\n  } else if (blockConfig.content === \"none\") {\n    content = undefined;\n  } else {\n    throw new UnreachableCaseError(blockConfig.content);\n  }\n\n  const block = {\n    id,\n    type: blockConfig.type,\n    props,\n    content,\n    children,\n  } as Block<BSchema, I, S>;\n\n  blockCache?.set(node, block);\n\n  return block;\n}\n","import { DOMSerializer, Fragment, Node } from \"prosemirror-model\";\n\nimport type { BlockNoteEditor } from \"../../../../editor/BlockNoteEditor\";\nimport {\n  BlockSchema,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../../../../schema\";\nimport { nodeToBlock } from \"../../../nodeConversions/nodeConversions\";\n\nfunction doc(options: { document?: Document }) {\n  return options.document || window.document;\n}\n\n// Used to implement `serializeNodeInner` for the `internalHTMLSerializer` and\n// `externalHTMLExporter`. Changes how the content of `blockContainer` nodes is\n// serialized vs the default `DOMSerializer` implementation. For the\n// `blockContent` node, the `toInternalHTML` or `toExternalHTML` function of its\n// corresponding block is used for serialization instead of the node's\n// `renderHTML` method.\nexport const serializeNodeInner = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  node: Node,\n  options: { document?: Document },\n  serializer: DOMSerializer,\n  editor: BlockNoteEditor<BSchema, I, S>,\n  toExternalHTML: boolean\n) => {\n  if (!serializer.nodes[node.type.name]) {\n    throw new Error(\"Serializer is missing a node type: \" + node.type.name);\n  }\n\n  const { dom, contentDOM } = DOMSerializer.renderSpec(\n    doc(options),\n    serializer.nodes[node.type.name](node)\n  );\n\n  if (contentDOM) {\n    if (node.isLeaf) {\n      throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n    }\n\n    // Handles converting `blockContainer` nodes to HTML.\n    if (node.type.name === \"blockContainer\") {\n      const blockContentNode =\n        node.childCount > 0 &&\n        node.firstChild!.type.spec.group === \"blockContent\"\n          ? node.firstChild!\n          : undefined;\n      const blockGroupNode =\n        node.childCount > 0 && node.lastChild!.type.spec.group === \"blockGroup\"\n          ? node.lastChild!\n          : undefined;\n\n      // Converts `blockContent` node using the custom `blockSpec`'s\n      // `toExternalHTML` or `toInternalHTML` function.\n      // Note: While `blockContainer` nodes should always contain a\n      // `blockContent` node according to the schema, PM Fragments don't always\n      // conform to the schema. This is unintuitive but important as it occurs\n      // when copying only nested blocks.\n      if (blockContentNode !== undefined) {\n        const impl =\n          editor.blockImplementations[blockContentNode.type.name]\n            .implementation;\n        const toHTML = toExternalHTML\n          ? impl.toExternalHTML\n          : impl.toInternalHTML;\n        const blockContent = toHTML(\n          nodeToBlock(\n            node,\n            editor.schema.blockSchema,\n            editor.schema.inlineContentSchema,\n            editor.schema.styleSchema,\n            editor.blockCache\n          ),\n          editor as any\n        );\n\n        // Converts inline nodes in the `blockContent` node's content to HTML\n        // using their `renderHTML` methods.\n        if (blockContent.contentDOM !== undefined) {\n          if (node.isLeaf) {\n            throw new RangeError(\n              \"Content hole not allowed in a leaf node spec\"\n            );\n          }\n\n          blockContent.contentDOM.appendChild(\n            serializer.serializeFragment(blockContentNode.content, options)\n          );\n        }\n\n        contentDOM.appendChild(blockContent.dom);\n      }\n\n      // Converts `blockGroup` node to HTML using its `renderHTML` method.\n      if (blockGroupNode !== undefined) {\n        serializer.serializeFragment(\n          Fragment.from(blockGroupNode),\n          options,\n          contentDOM\n        );\n      }\n    } else {\n      // Converts the node normally, i.e. using its `renderHTML method`.\n      serializer.serializeFragment(node.content, options, contentDOM);\n    }\n  }\n\n  return dom as HTMLElement;\n};\n\n// Used to implement `serializeProseMirrorFragment` for the\n// `internalHTMLSerializer` and `externalHTMLExporter`. Does basically the same\n// thing as `serializer.serializeFragment`, but takes fewer arguments and\n// returns a string instead, to make it easier to use.\nexport const serializeProseMirrorFragment = (\n  fragment: Fragment,\n  serializer: DOMSerializer,\n  options?: { document?: Document }\n) => {\n  const internalHTML = serializer.serializeFragment(fragment, options);\n  const parent = document.createElement(\"div\");\n  parent.appendChild(internalHTML);\n\n  return parent.innerHTML;\n};\n","import { Element as HASTElement, Parent as HASTParent } from \"hast\";\nimport { esmDependencies } from \"../../../../util/esmDependencies\";\n\ntype SimplifyBlocksOptions = {\n  orderedListItemBlockTypes: Set<string>;\n  unorderedListItemBlockTypes: Set<string>;\n};\n\nfunction addAttributesAndRemoveClasses(\n  element: HASTElement,\n  attributes: Record<string, unknown>\n) {\n  // Removes all BlockNote specific class names.\n  const className =\n    ((element.properties?.className as string[]) || []).filter(\n      (className) => !className.startsWith(\"bn-\")\n    ) || [];\n  // Adds all block props as data attributes.\n  element.properties = {\n    ...element.properties,\n    ...attributes,\n    className: className.length > 0 ? className : undefined,\n  };\n}\n\n/**\n * Rehype plugin which converts the HTML output string rendered by BlockNote into a simplified structure which better\n * follows HTML standards. It does several things:\n * - Removes all block related div elements, leaving only the actual content inside the block.\n * - Lifts nested blocks to a higher level for all block types that don't represent list items.\n * - Wraps blocks which represent list items in corresponding ul/ol HTML elements and restructures them to comply\n * with HTML list structure.\n * @param options Options for specifying which block types represent ordered and unordered list items.\n */\nexport function simplifyBlocks(options: SimplifyBlocksOptions) {\n  const deps = esmDependencies;\n\n  if (!deps) {\n    throw new Error(\n      \"simplifyBlocks requires ESM dependencies to be initialized\"\n    );\n  }\n\n  const listItemBlockTypes = new Set<string>([\n    ...options.orderedListItemBlockTypes,\n    ...options.unorderedListItemBlockTypes,\n  ]);\n\n  const simplifyBlocksHelper = (tree: HASTParent) => {\n    // Checks whether blocks in the tree are wrapped by a parent `blockGroup`\n    // element, in which case the `blockGroup`'s children are lifted out, and it\n    // is removed.\n    if (\n      tree.children.length === 1 &&\n      (tree.children[0] as HASTElement).properties?.[\"dataNodeType\"] ===\n        \"blockGroup\"\n    ) {\n      const blockGroup = tree.children[0] as HASTElement;\n      tree.children.pop();\n      tree.children.push(...blockGroup.children);\n    }\n\n    let numChildElements = tree.children.length;\n    let activeList: HASTElement | undefined;\n\n    for (let i = 0; i < numChildElements; i++) {\n      const blockOuter = tree.children[i] as HASTElement;\n      const blockContainer = blockOuter.children[0] as HASTElement;\n      const blockContent = blockContainer.children.find((child) => {\n        const properties = (child as HASTElement).properties;\n        const classNames = properties?.[\"className\"] as string[] | undefined;\n\n        return classNames?.includes(\"bn-block-content\");\n      }) as HASTElement | undefined;\n      const blockGroup = blockContainer.children.find((child) => {\n        const properties = (child as HASTElement).properties;\n        const classNames = properties?.[\"className\"] as string[] | undefined;\n\n        return classNames?.includes(\"bn-block-group\");\n      }) as HASTElement | undefined;\n\n      // Saves the data attributes of the block container, excluding the block\n      // ID and node type as we're removing the block structure. This means that\n      // only attributes for the block's props are saved.\n      const blockContainerDataAttributes = Object.fromEntries(\n        Object.entries(blockContainer.properties || {}).filter(\n          ([key]) =>\n            key.startsWith(\"data\") && key !== \"dataId\" && key !== \"dataNodeType\"\n        )\n      );\n      // Saves the data attributes of the block content, excluding the block\n      // content type as we're removing the block structure. This means that\n      // only attributes for the block's props are saved.\n      const blockContentDataAttributes = Object.fromEntries(\n        Object.entries(blockContent?.properties || {}).filter(\n          ([key]) =>\n            key.startsWith(\"data\") &&\n            key !== \"dataContentType\" &&\n            key !== \"dataFileBlock\" &&\n            key !== \"dataNodeViewWrapper\" &&\n            key !== \"dataEditable\"\n        )\n      );\n      // All the block's props as data attributes.\n      const blockPropsDataAttributes = {\n        ...blockContainerDataAttributes,\n        ...blockContentDataAttributes,\n      };\n\n      // When the selection starts in a nested block, the Fragment from it omits\n      // the `blockContent` node of the parent `blockContainer` if it's not also\n      // included in the selection. This is because ProseMirror preserves the\n      // nesting hierarchy of the nested nodes, even if their ancestors aren't\n      // fully selected. In this case, we just lift the child `blockContainer`\n      // nodes up.\n      // NOTE: This only happens for the first `blockContainer`, since to get to\n      // any nested blocks later in the document, the selection must also\n      // include their parents.\n      if (!blockContent) {\n        tree.children.splice(i, 1, ...blockGroup!.children);\n        simplifyBlocksHelper(tree);\n\n        return;\n      }\n\n      const isListItemBlock = listItemBlockTypes.has(\n        blockContent.properties![\"dataContentType\"] as string\n      );\n\n      const listItemBlockType = isListItemBlock\n        ? options.orderedListItemBlockTypes.has(\n            blockContent.properties![\"dataContentType\"] as string\n          )\n          ? \"ol\"\n          : \"ul\"\n        : null;\n\n      // Plugin runs recursively to process nested blocks.\n      if (blockGroup) {\n        simplifyBlocksHelper(blockGroup);\n      }\n\n      // Checks that there is an active list, but the block can't be added to it as it's of a different type.\n      if (activeList && activeList.tagName !== listItemBlockType) {\n        // Blocks that were copied into the list are removed and the list is inserted in their place.\n        tree.children.splice(\n          i - activeList.children.length,\n          activeList.children.length,\n          activeList\n        );\n\n        // Updates the current index and number of child elements.\n        const numElementsRemoved = activeList.children.length - 1;\n        i -= numElementsRemoved;\n        numChildElements -= numElementsRemoved;\n\n        activeList = undefined;\n      }\n\n      // Checks if the block represents a list item.\n      if (isListItemBlock) {\n        // Checks if a list isn't already active. We don't have to check if the block and the list are of the same\n        // type as this was already done earlier.\n        if (!activeList) {\n          // Creates a new list element to represent an active list.\n          activeList = deps.hastUtilFromDom.fromDom(\n            document.createElement(listItemBlockType!)\n          ) as HASTElement;\n        }\n\n        // Creates a new list item element to represent the block.\n        const listItemElement = deps.hastUtilFromDom.fromDom(\n          document.createElement(\"li\")\n        ) as HASTElement;\n\n        // Adds only the content inside the block to the active list.\n        listItemElement.children.push(...blockContent.children);\n        // Nested blocks have already been processed in the recursive function call, so the resulting elements are\n        // also added to the active list.\n        if (blockGroup) {\n          listItemElement.children.push(...blockGroup.children);\n        }\n\n        // Adds the list item representing the block to the active list.\n        activeList.children.push(listItemElement);\n      } else if (blockGroup) {\n        // Lifts all children out of the current block, as only list items should allow nesting.\n        tree.children.splice(i + 1, 0, ...blockGroup.children);\n        // Replaces the block with only the content inside it.\n        const content = blockContent.children[0] as HASTElement;\n        addAttributesAndRemoveClasses(content, blockPropsDataAttributes);\n        tree.children[i] = content;\n\n        // Updates the current index and number of child elements.\n        const numElementsAdded = blockGroup.children.length;\n        i += numElementsAdded;\n        numChildElements += numElementsAdded;\n      } else {\n        // Replaces the block with only the content inside it.\n        const content = blockContent.children[0] as HASTElement;\n        addAttributesAndRemoveClasses(content, blockPropsDataAttributes);\n        tree.children[i] = content;\n      }\n    }\n\n    // Since the active list is only inserted after encountering a block which can't be added to it, there are cases\n    // where it remains un-inserted after processing all blocks, which are handled here.\n    if (activeList) {\n      tree.children.splice(\n        numChildElements - activeList.children.length,\n        activeList.children.length,\n        activeList\n      );\n    }\n  };\n\n  return simplifyBlocksHelper;\n}\n","import { DOMSerializer, Fragment, Node, Schema } from \"prosemirror-model\";\n\nimport { PartialBlock } from \"../../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../../schema\";\nimport { esmDependencies } from \"../../../util/esmDependencies\";\nimport { blockToNode } from \"../../nodeConversions/nodeConversions\";\nimport {\n  serializeNodeInner,\n  serializeProseMirrorFragment,\n} from \"./util/sharedHTMLConversion\";\nimport { simplifyBlocks } from \"./util/simplifyBlocksRehypePlugin\";\n\n// Used to export BlockNote blocks and ProseMirror nodes to HTML for use outside\n// the editor. Blocks are exported using the `toExternalHTML` method in their\n// `blockSpec`, or `toInternalHTML` if `toExternalHTML` is not defined.\n//\n// The HTML created by this serializer is different to what's rendered by the\n// editor to the DOM. This also means that data is likely to be lost when\n// converting back to original blocks. The differences in the output HTML are:\n// 1. It doesn't include the `blockGroup` and `blockContainer` wrappers meaning\n// that nesting is not preserved for non-list-item blocks.\n// 2. `li` items in the output HTML are wrapped in `ul` or `ol` elements.\n// 3. While nesting for list items is preserved, other types of blocks nested\n// inside a list are un-nested and a new list is created after them.\n// 4. The HTML is wrapped in a single `div` element.\n//\n// The serializer has 2 main methods:\n// `exportBlocks`: Exports an array of blocks to HTML.\n// `exportFragment`: Exports a ProseMirror fragment to HTML. This is mostly\n// useful if you want to export a selection which may not start/end at the\n// start/end of a block.\nexport interface ExternalHTMLExporter<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> {\n  exportBlocks: (\n    blocks: PartialBlock<BSchema, I, S>[],\n    options: { document?: Document }\n  ) => string;\n  exportProseMirrorFragment: (\n    fragment: Fragment,\n    options: { document?: Document; simplifyBlocks?: boolean }\n  ) => string;\n}\n\n// Needs to be sync because it's used in drag handler event (SideMenuPlugin)\n// Ideally, call `await initializeESMDependencies()` before calling this function\nexport const createExternalHTMLExporter = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  schema: Schema,\n  editor: BlockNoteEditor<BSchema, I, S>\n): ExternalHTMLExporter<BSchema, I, S> => {\n  const deps = esmDependencies;\n\n  if (!deps) {\n    throw new Error(\n      \"External HTML exporter requires ESM dependencies to be initialized\"\n    );\n  }\n\n  // TODO: maybe cache this serializer (default prosemirror serializer is cached)?\n  const serializer = new DOMSerializer(\n    DOMSerializer.nodesFromSchema(schema),\n    DOMSerializer.marksFromSchema(schema)\n  ) as DOMSerializer & {\n    serializeNodeInner: (\n      node: Node,\n      options: { document?: Document }\n    ) => HTMLElement;\n    exportProseMirrorFragment: (\n      fragment: Fragment,\n      options: { document?: Document; simplifyBlocks?: boolean }\n    ) => string;\n    exportBlocks: (\n      blocks: PartialBlock<BSchema, I, S>[],\n      options: { document?: Document }\n    ) => string;\n  };\n\n  serializer.serializeNodeInner = (\n    node: Node,\n    options: { document?: Document }\n  ) => serializeNodeInner(node, options, serializer, editor, true);\n\n  // Like the `internalHTMLSerializer`, also uses `serializeProseMirrorFragment`\n  // but additionally runs it through the `simplifyBlocks` rehype plugin to\n  // convert the internal HTML to external.\n  serializer.exportProseMirrorFragment = (fragment, options) => {\n    let externalHTML: any = deps.unified\n      .unified()\n      .use(deps.rehypeParse.default, { fragment: true });\n    if (options.simplifyBlocks !== false) {\n      externalHTML = externalHTML.use(simplifyBlocks, {\n        orderedListItemBlockTypes: new Set<string>([\"numberedListItem\"]),\n        unorderedListItemBlockTypes: new Set<string>([\n          \"bulletListItem\",\n          \"checkListItem\",\n        ]),\n      });\n    }\n    externalHTML = externalHTML\n      .use(deps.rehypeStringify.default)\n      .processSync(serializeProseMirrorFragment(fragment, serializer, options));\n\n    return externalHTML.value as string;\n  };\n\n  serializer.exportBlocks = (\n    blocks: PartialBlock<BSchema, I, S>[],\n    options\n  ) => {\n    const nodes = blocks.map((block) =>\n      blockToNode(block, schema, editor.schema.styleSchema)\n    );\n    const blockGroup = schema.nodes[\"blockGroup\"].create(null, nodes);\n\n    return serializer.exportProseMirrorFragment(\n      Fragment.from(blockGroup),\n      options\n    );\n  };\n\n  return serializer;\n};\n","import { DOMSerializer, Fragment, Node, Schema } from \"prosemirror-model\";\nimport { PartialBlock } from \"../../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../../schema\";\nimport { blockToNode } from \"../../nodeConversions/nodeConversions\";\nimport {\n  serializeNodeInner,\n  serializeProseMirrorFragment,\n} from \"./util/sharedHTMLConversion\";\n// Used to serialize BlockNote blocks and ProseMirror nodes to HTML without\n// losing data. Blocks are exported using the `toInternalHTML` method in their\n// `blockSpec`.\n//\n// The HTML created by this serializer is the same as what's rendered by the\n// editor to the DOM. This means that it retains the same structure as the\n// editor, including the `blockGroup` and `blockContainer` wrappers. This also\n// means that it can be converted back to the original blocks without any data\n// loss.\n//\n// The serializer has 2 main methods:\n// `serializeFragment`: Serializes a ProseMirror fragment to HTML. This is\n// mostly useful if you want to serialize a selection which may not start/end at\n// the start/end of a block.\n// `serializeBlocks`: Serializes an array of blocks to HTML.\nexport interface InternalHTMLSerializer<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> {\n  // TODO: Ideally we would expand the BlockNote API to support partial\n  //  selections so we don't need this.\n  serializeProseMirrorFragment: (\n    fragment: Fragment,\n    options: { document?: Document }\n  ) => string;\n  serializeBlocks: (\n    blocks: PartialBlock<BSchema, I, S>[],\n    options: { document?: Document }\n  ) => string;\n}\n\nexport const createInternalHTMLSerializer = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  schema: Schema,\n  editor: BlockNoteEditor<BSchema, I, S>\n): InternalHTMLSerializer<BSchema, I, S> => {\n  // TODO: maybe cache this serializer (default prosemirror serializer is cached)?\n  const serializer = new DOMSerializer(\n    DOMSerializer.nodesFromSchema(schema),\n    DOMSerializer.marksFromSchema(schema)\n  ) as DOMSerializer & {\n    serializeNodeInner: (\n      node: Node,\n      options: { document?: Document }\n    ) => HTMLElement;\n    serializeBlocks: (\n      blocks: PartialBlock<BSchema, I, S>[],\n      options: { document?: Document }\n    ) => string;\n    serializeProseMirrorFragment: (\n      fragment: Fragment,\n      options?: { document?: Document | undefined } | undefined,\n      target?: HTMLElement | DocumentFragment | undefined\n    ) => string;\n  };\n\n  serializer.serializeNodeInner = (\n    node: Node,\n    options: { document?: Document }\n  ) => serializeNodeInner(node, options, serializer, editor, false);\n\n  serializer.serializeProseMirrorFragment = (fragment: Fragment, options) =>\n    serializeProseMirrorFragment(fragment, serializer, options);\n\n  serializer.serializeBlocks = (\n    blocks: PartialBlock<BSchema, I, S>[],\n    options\n  ) => {\n    const nodes = blocks.map((block) =>\n      blockToNode(block, schema, editor.schema.styleSchema)\n    );\n    const blockGroup = schema.nodes[\"blockGroup\"].create(null, nodes);\n\n    return serializer.serializeProseMirrorFragment(\n      Fragment.from(blockGroup),\n      options\n    );\n  };\n\n  return serializer;\n};\n","import { Editor } from \"@tiptap/core\";\nimport { getBlockInfoFromPos } from \"./getBlockInfoFromPos\";\n\n// Used to get the content type of the block that the text cursor is in. This is\n// a band-aid fix to prevent input rules and keyboard shortcuts from triggering\n// in tables, but really those should be extended to work with block selections.\nexport const getCurrentBlockContentType = (editor: Editor) => {\n  const { contentType } = getBlockInfoFromPos(\n    editor.state.doc,\n    editor.state.selection.from\n  );\n\n  return contentType.spec.content;\n};\n","export const isAppleOS = () =>\n  typeof navigator !== \"undefined\" &&\n  (/Mac/.test(navigator.platform) ||\n    (/AppleWebKit/.test(navigator.userAgent) &&\n      /Mobile\\/\\w+/.test(navigator.userAgent)));\n\nexport function formatKeyboardShortcut(shortcut: string, ctrlText = \"Ctrl\") {\n  if (isAppleOS()) {\n    return shortcut.replace(\"Mod\", \"⌘\");\n  } else {\n    return shortcut.replace(\"Mod\", ctrlText);\n  }\n}\n\nexport function mergeCSSClasses(...classes: string[]) {\n  return classes.filter((c) => c).join(\" \");\n}\n\nexport const isSafari = () =>\n  /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n","import { blockToNode } from \"../api/nodeConversions/nodeConversions\";\nimport type { BlockNoteEditor } from \"../editor/BlockNoteEditor\";\nimport type {\n  BlockNoDefaults,\n  BlockSchema,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../schema\";\nimport { mergeCSSClasses } from \"../util/browser\";\n\n// Function that creates a ProseMirror `DOMOutputSpec` for a default block.\n// Since all default blocks have the same structure (`blockContent` div with a\n// `inlineContent` element inside), this function only needs the block's name\n// for the `data-content-type` attribute of the `blockContent` element and the\n// HTML tag of the `inlineContent` element, as well as any HTML attributes to\n// add to those.\nexport function createDefaultBlockDOMOutputSpec(\n  blockName: string,\n  htmlTag: string,\n  blockContentHTMLAttributes: Record<string, string>,\n  inlineContentHTMLAttributes: Record<string, string>\n) {\n  const blockContent = document.createElement(\"div\");\n  blockContent.className = mergeCSSClasses(\n    \"bn-block-content\",\n    blockContentHTMLAttributes.class\n  );\n  blockContent.setAttribute(\"data-content-type\", blockName);\n  for (const [attribute, value] of Object.entries(blockContentHTMLAttributes)) {\n    if (attribute !== \"class\") {\n      blockContent.setAttribute(attribute, value);\n    }\n  }\n\n  const inlineContent = document.createElement(htmlTag);\n  inlineContent.className = mergeCSSClasses(\n    \"bn-inline-content\",\n    inlineContentHTMLAttributes.class\n  );\n  for (const [attribute, value] of Object.entries(\n    inlineContentHTMLAttributes\n  )) {\n    if (attribute !== \"class\") {\n      inlineContent.setAttribute(attribute, value);\n    }\n  }\n\n  blockContent.appendChild(inlineContent);\n\n  return {\n    dom: blockContent,\n    contentDOM: inlineContent,\n  };\n}\n\n// Function used to convert default blocks to HTML. It uses the corresponding\n// node's `renderHTML` method to do the conversion by using a default\n// `DOMSerializer`.\nexport const defaultBlockToHTML = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  block: BlockNoDefaults<BSchema, I, S>,\n  editor: BlockNoteEditor<BSchema, I, S>\n): {\n  dom: HTMLElement;\n  contentDOM?: HTMLElement;\n} => {\n  const node = blockToNode(block, editor.pmSchema, editor.schema.styleSchema)\n    .firstChild!;\n  const toDOM = editor.pmSchema.nodes[node.type.name].spec.toDOM;\n\n  if (toDOM === undefined) {\n    throw new Error(\n      \"This block has no default HTML serialization as its corresponding TipTap node doesn't implement `renderHTML`.\"\n    );\n  }\n\n  const renderSpec = toDOM(node);\n\n  if (typeof renderSpec !== \"object\" || !(\"dom\" in renderSpec)) {\n    throw new Error(\n      \"Cannot use this block's default HTML serialization as its corresponding TipTap node's `renderHTML` function does not return an object with the `dom` property.\"\n    );\n  }\n\n  return renderSpec as {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n  };\n};\n","import type { Props, PropSchema } from \"../schema\";\n\n// TODO: this system should probably be moved / refactored.\n// The dependency from schema on this file doesn't make sense\n\nexport const defaultProps = {\n  backgroundColor: {\n    default: \"default\" as const,\n  },\n  textColor: {\n    default: \"default\" as const,\n  },\n  textAlignment: {\n    default: \"left\" as const,\n    values: [\"left\", \"center\", \"right\", \"justify\"] as const,\n  },\n} satisfies PropSchema;\n\nexport type DefaultProps = Props<typeof defaultProps>;\n\n// Default props which are set on `blockContainer` nodes rather than\n// `blockContent` nodes. Ensures that they are not redundantly added to\n// a custom block's TipTap node attributes.\nexport const inheritedProps = [\"backgroundColor\", \"textColor\"];\n","export function camelToDataKebab(str: string): string {\n  return \"data-\" + str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nexport function filenameFromURL(url: string): string {\n  const parts = url.split(\"/\");\n  if (\n    !parts.length || // invalid?\n    parts[parts.length - 1] === \"\" // for example, URL ends in a directory-like trailing slash\n  ) {\n    // in this case just return the original url\n    return url;\n  }\n  return parts[parts.length - 1];\n}\n","import {\n  Attribute,\n  Attributes,\n  Editor,\n  Extension,\n  Node,\n  NodeConfig,\n} from \"@tiptap/core\";\nimport { defaultBlockToHTML } from \"../../blocks/defaultBlockHelpers\";\nimport { inheritedProps } from \"../../blocks/defaultProps\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { mergeCSSClasses } from \"../../util/browser\";\nimport { camelToDataKebab } from \"../../util/string\";\nimport { InlineContentSchema } from \"../inlineContent/types\";\nimport { PropSchema, Props } from \"../propTypes\";\nimport { StyleSchema } from \"../styles/types\";\nimport {\n  BlockConfig,\n  BlockSchemaFromSpecs,\n  BlockSchemaWithBlock,\n  BlockSpec,\n  BlockSpecs,\n  SpecificBlock,\n  TiptapBlockImplementation,\n} from \"./types\";\n\n// Function that uses the 'propSchema' of a blockConfig to create a TipTap\n// node's `addAttributes` property.\n// TODO: extract function\nexport function propsToAttributes(propSchema: PropSchema): Attributes {\n  const tiptapAttributes: Record<string, Attribute> = {};\n\n  Object.entries(propSchema)\n    .filter(([name, _spec]) => !inheritedProps.includes(name))\n    .forEach(([name, spec]) => {\n      tiptapAttributes[name] = {\n        default: spec.default,\n        keepOnSplit: true,\n        // Props are displayed in kebab-case as HTML attributes. If a prop's\n        // value is the same as its default, we don't display an HTML\n        // attribute for it.\n        parseHTML: (element) => {\n          const value = element.getAttribute(camelToDataKebab(name));\n\n          if (value === null) {\n            return null;\n          }\n\n          if (typeof spec.default === \"boolean\") {\n            if (value === \"true\") {\n              return true;\n            }\n\n            if (value === \"false\") {\n              return false;\n            }\n\n            return null;\n          }\n\n          if (typeof spec.default === \"number\") {\n            const asNumber = parseFloat(value);\n            const isNumeric =\n              !Number.isNaN(asNumber) && Number.isFinite(asNumber);\n\n            if (isNumeric) {\n              return asNumber;\n            }\n\n            return null;\n          }\n\n          return value;\n        },\n        renderHTML: (attributes) =>\n          attributes[name] !== spec.default\n            ? {\n                [camelToDataKebab(name)]: attributes[name],\n              }\n            : {},\n      };\n    });\n\n  return tiptapAttributes;\n}\n\n// Used to figure out which block should be rendered. This block is then used to\n// create the node view.\nexport function getBlockFromPos<\n  BType extends string,\n  Config extends BlockConfig,\n  BSchema extends BlockSchemaWithBlock<BType, Config>,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  getPos: (() => number) | boolean,\n  editor: BlockNoteEditor<BSchema, I, S>,\n  tipTapEditor: Editor,\n  type: BType\n) {\n  // Gets position of the node\n  if (typeof getPos === \"boolean\") {\n    throw new Error(\n      \"Cannot find node position as getPos is a boolean, not a function.\"\n    );\n  }\n  const pos = getPos();\n  // Gets parent blockContainer node\n  const blockContainer = tipTapEditor.state.doc.resolve(pos!).node();\n  // Gets block identifier\n  const blockIdentifier = blockContainer.attrs.id;\n\n  if (!blockIdentifier) {\n    throw new Error(\"Block doesn't have id\");\n  }\n\n  // Gets the block\n  const block = editor.getBlock(blockIdentifier)! as SpecificBlock<\n    BSchema,\n    BType,\n    I,\n    S\n  >;\n  if (block.type !== type) {\n    throw new Error(\"Block type does not match\");\n  }\n\n  return block;\n}\n\n// Function that wraps the `dom` element returned from 'blockConfig.render' in a\n// `blockContent` div, which contains the block type and props as HTML\n// attributes. If `blockConfig.render` also returns a `contentDOM`, it also adds\n// an `inlineContent` class to it.\nexport function wrapInBlockStructure<\n  BType extends string,\n  PSchema extends PropSchema\n>(\n  element: {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n    destroy?: () => void;\n  },\n  blockType: BType,\n  blockProps: Props<PSchema>,\n  propSchema: PSchema,\n  isFileBlock = false,\n  domAttributes?: Record<string, string>\n): {\n  dom: HTMLElement;\n  contentDOM?: HTMLElement;\n  destroy?: () => void;\n} {\n  // Creates `blockContent` element\n  const blockContent = document.createElement(\"div\");\n\n  // Adds custom HTML attributes\n  if (domAttributes !== undefined) {\n    for (const [attr, value] of Object.entries(domAttributes)) {\n      if (attr !== \"class\") {\n        blockContent.setAttribute(attr, value);\n      }\n    }\n  }\n  // Sets blockContent class\n  blockContent.className = mergeCSSClasses(\n    \"bn-block-content\",\n    domAttributes?.class || \"\"\n  );\n  // Sets content type attribute\n  blockContent.setAttribute(\"data-content-type\", blockType);\n  // Adds props as HTML attributes in kebab-case with \"data-\" prefix. Skips props\n  // which are already added as HTML attributes to the parent `blockContent`\n  // element (inheritedProps) and props set to their default values.\n  for (const [prop, value] of Object.entries(blockProps)) {\n    if (!inheritedProps.includes(prop) && value !== propSchema[prop].default) {\n      blockContent.setAttribute(camelToDataKebab(prop), value);\n    }\n  }\n  // Adds file block attribute\n  if (isFileBlock) {\n    blockContent.setAttribute(\"data-file-block\", \"\");\n  }\n\n  blockContent.appendChild(element.dom);\n\n  if (element.contentDOM !== undefined) {\n    element.contentDOM.className = mergeCSSClasses(\n      \"bn-inline-content\",\n      element.contentDOM.className\n    );\n    element.contentDOM.setAttribute(\"data-editable\", \"\");\n  }\n\n  return {\n    ...element,\n    dom: blockContent,\n  };\n}\n\n// Helper type to keep track of the `name` and `content` properties after calling Node.create.\ntype StronglyTypedTipTapNode<\n  Name extends string,\n  Content extends \"inline*\" | \"tableRow+\" | \"\"\n> = Node & { name: Name; config: { content: Content } };\n\nexport function createStronglyTypedTiptapNode<\n  Name extends string,\n  Content extends \"inline*\" | \"tableRow+\" | \"\"\n>(config: NodeConfig & { name: Name; content: Content }) {\n  return Node.create(config) as StronglyTypedTipTapNode<Name, Content>; // force re-typing (should be safe as it's type-checked from the config)\n}\n\n// This helper function helps to instantiate a blockspec with a\n// config and implementation that conform to the type of Config\nexport function createInternalBlockSpec<T extends BlockConfig>(\n  config: T,\n  implementation: TiptapBlockImplementation<\n    T,\n    any,\n    InlineContentSchema,\n    StyleSchema\n  >\n) {\n  return {\n    config,\n    implementation,\n  } satisfies BlockSpec<T, any, InlineContentSchema, StyleSchema>;\n}\n\nexport function createBlockSpecFromStronglyTypedTiptapNode<\n  T extends Node,\n  P extends PropSchema\n>(node: T, propSchema: P, requiredExtensions?: Array<Extension | Node>) {\n  return createInternalBlockSpec(\n    {\n      type: node.name as T[\"name\"],\n      content: (node.config.content === \"inline*\"\n        ? \"inline\"\n        : node.config.content === \"tableRow+\"\n        ? \"table\"\n        : \"none\") as T[\"config\"][\"content\"] extends \"inline*\"\n        ? \"inline\"\n        : T[\"config\"][\"content\"] extends \"tableRow+\"\n        ? \"table\"\n        : \"none\",\n      propSchema,\n    },\n    {\n      node,\n      requiredExtensions,\n      toInternalHTML: defaultBlockToHTML,\n      toExternalHTML: defaultBlockToHTML,\n      // parse: () => undefined, // parse rules are in node already\n    }\n  );\n}\n\nexport function getBlockSchemaFromSpecs<T extends BlockSpecs>(specs: T) {\n  return Object.fromEntries(\n    Object.entries(specs).map(([key, value]) => [key, value.config])\n  ) as BlockSchemaFromSpecs<T>;\n}\n","import { Editor } from \"@tiptap/core\";\nimport { TagParseRule } from \"@tiptap/pm/model\";\nimport { NodeView } from \"@tiptap/pm/view\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { InlineContentSchema } from \"../inlineContent/types\";\nimport { StyleSchema } from \"../styles/types\";\nimport {\n  createInternalBlockSpec,\n  createStronglyTypedTiptapNode,\n  getBlockFromPos,\n  propsToAttributes,\n  wrapInBlockStructure,\n} from \"./internal\";\nimport {\n  BlockConfig,\n  BlockFromConfig,\n  BlockSchemaWithBlock,\n  PartialBlockFromConfig,\n} from \"./types\";\n\n// restrict content to \"inline\" and \"none\" only\nexport type CustomBlockConfig = BlockConfig & {\n  content: \"inline\" | \"none\";\n};\n\nexport type CustomBlockImplementation<\n  T extends CustomBlockConfig,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> = {\n  render: (\n    /**\n     * The custom block to render\n     */\n    block: BlockFromConfig<T, I, S>,\n    /**\n     * The BlockNote editor instance\n     * This is typed generically. If you want an editor with your custom schema, you need to\n     * cast it manually, e.g.: `const e = editor as BlockNoteEditor<typeof mySchema>;`\n     */\n    editor: BlockNoteEditor<BlockSchemaWithBlock<T[\"type\"], T>, I, S>\n    // (note) if we want to fix the manual cast, we need to prevent circular references and separate block definition and render implementations\n    // or allow manually passing <BSchema>, but that's not possible without passing the other generics because Typescript doesn't support partial inferred generics\n  ) => {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n    destroy?: () => void;\n  };\n  // Exports block to external HTML. If not defined, the output will be the same\n  // as `render(...).dom`. Used to create clipboard data when pasting outside\n  // BlockNote.\n  // TODO: Maybe can return undefined to ignore when serializing?\n  toExternalHTML?: (\n    block: BlockFromConfig<T, I, S>,\n    editor: BlockNoteEditor<BlockSchemaWithBlock<T[\"type\"], T>, I, S>\n  ) => {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n  };\n\n  parse?: (\n    el: HTMLElement\n  ) => PartialBlockFromConfig<T, I, S>[\"props\"] | undefined;\n};\n\n// Function that causes events within non-selectable blocks to be handled by the\n// browser instead of the editor.\nexport function applyNonSelectableBlockFix(nodeView: NodeView, editor: Editor) {\n  nodeView.stopEvent = (event) => {\n    // Blurs the editor on mouse down as the block is non-selectable. This is\n    // mainly done to prevent UI elements like the formatting toolbar from being\n    // visible while content within a non-selectable block is selected.\n    if (event.type === \"mousedown\") {\n      setTimeout(() => {\n        editor.view.dom.blur();\n      }, 10);\n    }\n\n    return true;\n  };\n}\n\n// Function that uses the 'parse' function of a blockConfig to create a\n// TipTap node's `parseHTML` property. This is only used for parsing content\n// from the clipboard.\nexport function getParseRules(\n  config: BlockConfig,\n  customParseFunction: CustomBlockImplementation<any, any, any>[\"parse\"]\n) {\n  const rules: TagParseRule[] = [\n    {\n      tag: \"[data-content-type=\" + config.type + \"]\",\n      contentElement: \"[data-editable]\",\n    },\n  ];\n\n  if (customParseFunction) {\n    rules.push({\n      tag: \"*\",\n      getAttrs(node: string | HTMLElement) {\n        if (typeof node === \"string\") {\n          return false;\n        }\n\n        const props = customParseFunction?.(node);\n\n        if (props === undefined) {\n          return false;\n        }\n\n        return props;\n      },\n    });\n  }\n  //     getContent(node, schema) {\n  //       const block = blockConfig.parse?.(node as HTMLElement);\n  //\n  //       if (block !== undefined && block.content !== undefined) {\n  //         return Fragment.from(\n  //           typeof block.content === \"string\"\n  //             ? schema.text(block.content)\n  //             : inlineContentToNodes(block.content, schema)\n  //         );\n  //       }\n  //\n  //       return Fragment.empty;\n  //     },\n  //   });\n  // }\n\n  return rules;\n}\n\n// A function to create custom block for API consumers\n// we want to hide the tiptap node from API consumers and provide a simpler API surface instead\nexport function createBlockSpec<\n  T extends CustomBlockConfig,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(blockConfig: T, blockImplementation: CustomBlockImplementation<T, I, S>) {\n  const node = createStronglyTypedTiptapNode({\n    name: blockConfig.type as T[\"type\"],\n    content: (blockConfig.content === \"inline\"\n      ? \"inline*\"\n      : \"\") as T[\"content\"] extends \"inline\" ? \"inline*\" : \"\",\n    group: \"blockContent\",\n    selectable: blockConfig.isSelectable ?? true,\n\n    addAttributes() {\n      return propsToAttributes(blockConfig.propSchema);\n    },\n\n    parseHTML() {\n      return getParseRules(blockConfig, blockImplementation.parse);\n    },\n\n    renderHTML({ HTMLAttributes }) {\n      // renderHTML is used for copy/pasting content from the editor back into\n      // the editor, so we need to make sure the `blockContent` element is\n      // structured correctly as this is what's used for parsing blocks. We\n      // just render a placeholder div inside as the `blockContent` element\n      // already has all the information needed for proper parsing.\n      const div = document.createElement(\"div\");\n      div.setAttribute(\"data-tmp-placeholder\", \"true\");\n      return wrapInBlockStructure(\n        {\n          dom: div,\n        },\n        blockConfig.type,\n        {},\n        blockConfig.propSchema,\n        blockConfig.isFileBlock,\n        HTMLAttributes\n      );\n    },\n\n    addNodeView() {\n      return ({ getPos }) => {\n        // Gets the BlockNote editor instance\n        const editor = this.options.editor;\n        // Gets the block\n        const block = getBlockFromPos(\n          getPos,\n          editor,\n          this.editor,\n          blockConfig.type\n        );\n        // Gets the custom HTML attributes for `blockContent` nodes\n        const blockContentDOMAttributes =\n          this.options.domAttributes?.blockContent || {};\n\n        const output = blockImplementation.render(block as any, editor);\n\n        const nodeView: NodeView = wrapInBlockStructure(\n          output,\n          block.type,\n          block.props,\n          blockConfig.propSchema,\n          blockContentDOMAttributes\n        );\n\n        if (blockConfig.isSelectable === false) {\n          applyNonSelectableBlockFix(nodeView, this.editor);\n        }\n\n        return nodeView;\n      };\n    },\n  });\n\n  if (node.name !== blockConfig.type) {\n    throw new Error(\n      \"Node name does not match block type. This is a bug in BlockNote.\"\n    );\n  }\n\n  return createInternalBlockSpec(blockConfig, {\n    node,\n    toInternalHTML: (block, editor) => {\n      const blockContentDOMAttributes =\n        node.options.domAttributes?.blockContent || {};\n\n      const output = blockImplementation.render(block as any, editor as any);\n\n      return wrapInBlockStructure(\n        output,\n        block.type,\n        block.props,\n        blockConfig.propSchema,\n        blockConfig.isFileBlock,\n        blockContentDOMAttributes\n      );\n    },\n    toExternalHTML: (block, editor) => {\n      const blockContentDOMAttributes =\n        node.options.domAttributes?.blockContent || {};\n\n      let output = blockImplementation.toExternalHTML?.(\n        block as any,\n        editor as any\n      );\n      if (output === undefined) {\n        output = blockImplementation.render(block as any, editor as any);\n      }\n\n      return wrapInBlockStructure(\n        output,\n        block.type,\n        block.props,\n        blockConfig.propSchema,\n        blockContentDOMAttributes\n      );\n    },\n  });\n}\n","import { KeyboardShortcutCommand, Node } from \"@tiptap/core\";\n\nimport { camelToDataKebab } from \"../../util/string\";\nimport { PropSchema, Props } from \"../propTypes\";\nimport {\n  CustomInlineContentConfig,\n  InlineContentConfig,\n  InlineContentImplementation,\n  InlineContentSchemaFromSpecs,\n  InlineContentSpec,\n  InlineContentSpecs,\n} from \"./types\";\n\n// Function that adds necessary classes and attributes to the `dom` element\n// returned from a custom inline content's 'render' function, to ensure no data\n// is lost on internal copy & paste.\nexport function addInlineContentAttributes<\n  IType extends string,\n  PSchema extends PropSchema\n>(\n  element: {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n  },\n  inlineContentType: IType,\n  inlineContentProps: Props<PSchema>,\n  propSchema: PSchema\n): {\n  dom: HTMLElement;\n  contentDOM?: HTMLElement;\n} {\n  // Sets content type attribute\n  element.dom.setAttribute(\"data-inline-content-type\", inlineContentType);\n  // Adds props as HTML attributes in kebab-case with \"data-\" prefix. Skips props\n  // set to their default values.\n  Object.entries(inlineContentProps)\n    .filter(([prop, value]) => value !== propSchema[prop].default)\n    .map(([prop, value]) => {\n      return [camelToDataKebab(prop), value];\n    })\n    .forEach(([prop, value]) => element.dom.setAttribute(prop, value));\n\n  if (element.contentDOM !== undefined) {\n    element.contentDOM.setAttribute(\"data-editable\", \"\");\n  }\n\n  return element;\n}\n\n// see https://github.com/TypeCellOS/BlockNote/pull/435\nexport function addInlineContentKeyboardShortcuts<\n  T extends CustomInlineContentConfig\n>(\n  config: T\n): {\n  [p: string]: KeyboardShortcutCommand;\n} {\n  return {\n    Backspace: ({ editor }) => {\n      const resolvedPos = editor.state.selection.$from;\n\n      return (\n        editor.state.selection.empty &&\n        resolvedPos.node().type.name === config.type &&\n        resolvedPos.parentOffset === 0\n      );\n    },\n  };\n}\n\n// This helper function helps to instantiate a InlineContentSpec with a\n// config and implementation that conform to the type of Config\nexport function createInternalInlineContentSpec<T extends InlineContentConfig>(\n  config: T,\n  implementation: InlineContentImplementation<T>\n) {\n  return {\n    config,\n    implementation,\n  } satisfies InlineContentSpec<T>;\n}\n\nexport function createInlineContentSpecFromTipTapNode<\n  T extends Node,\n  P extends PropSchema\n>(node: T, propSchema: P) {\n  return createInternalInlineContentSpec(\n    {\n      type: node.name as T[\"name\"],\n      propSchema,\n      content: node.config.content === \"inline*\" ? \"styled\" : \"none\",\n    },\n    {\n      node,\n    }\n  );\n}\n\nexport function getInlineContentSchemaFromSpecs<T extends InlineContentSpecs>(\n  specs: T\n) {\n  return Object.fromEntries(\n    Object.entries(specs).map(([key, value]) => [key, value.config])\n  ) as InlineContentSchemaFromSpecs<T>;\n}\n","import { Node } from \"@tiptap/core\";\nimport { TagParseRule } from \"@tiptap/pm/model\";\nimport {\n  inlineContentToNodes,\n  nodeToCustomInlineContent,\n} from \"../../api/nodeConversions/nodeConversions\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { propsToAttributes } from \"../blocks/internal\";\nimport { Props } from \"../propTypes\";\nimport { StyleSchema } from \"../styles/types\";\nimport {\n  addInlineContentAttributes,\n  addInlineContentKeyboardShortcuts,\n  createInlineContentSpecFromTipTapNode,\n} from \"./internal\";\nimport {\n  CustomInlineContentConfig,\n  InlineContentFromConfig,\n  InlineContentSpec,\n  PartialCustomInlineContentFromConfig,\n} from \"./types\";\n\n// TODO: support serialization\n\nexport type CustomInlineContentImplementation<\n  T extends CustomInlineContentConfig,\n  // B extends BlockSchema,\n  // I extends InlineContentSchema,\n  S extends StyleSchema\n> = {\n  render: (\n    /**\n     * The custom inline content to render\n     */\n    inlineContent: InlineContentFromConfig<T, S>,\n    updateInlineContent: (\n      update: PartialCustomInlineContentFromConfig<T, S>\n    ) => void,\n    /**\n     * The BlockNote editor instance\n     * This is typed generically. If you want an editor with your custom schema, you need to\n     * cast it manually, e.g.: `const e = editor as BlockNoteEditor<typeof mySchema>;`\n     */\n    editor: BlockNoteEditor<any, any, S>\n    // (note) if we want to fix the manual cast, we need to prevent circular references and separate block definition and render implementations\n    // or allow manually passing <BSchema>, but that's not possible without passing the other generics because Typescript doesn't support partial inferred generics\n  ) => {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n    // destroy?: () => void;\n  };\n};\n\nexport function getInlineContentParseRules(\n  config: CustomInlineContentConfig\n): TagParseRule[] {\n  return [\n    {\n      tag: `[data-inline-content-type=\"${config.type}\"]`,\n      contentElement: (element) => {\n        const htmlElement = element as HTMLElement;\n\n        if (htmlElement.matches(\"[data-editable]\")) {\n          return htmlElement;\n        }\n\n        return htmlElement.querySelector(\"[data-editable]\") || htmlElement;\n      },\n    },\n  ];\n}\n\nexport function createInlineContentSpec<\n  T extends CustomInlineContentConfig,\n  S extends StyleSchema\n>(\n  inlineContentConfig: T,\n  inlineContentImplementation: CustomInlineContentImplementation<T, S>\n): InlineContentSpec<T> {\n  const node = Node.create({\n    name: inlineContentConfig.type,\n    inline: true,\n    group: \"inline\",\n    selectable: inlineContentConfig.content === \"styled\",\n    atom: inlineContentConfig.content === \"none\",\n    content: (inlineContentConfig.content === \"styled\"\n      ? \"inline*\"\n      : \"\") as T[\"content\"] extends \"styled\" ? \"inline*\" : \"\",\n\n    addAttributes() {\n      return propsToAttributes(inlineContentConfig.propSchema);\n    },\n\n    addKeyboardShortcuts() {\n      return addInlineContentKeyboardShortcuts(inlineContentConfig);\n    },\n\n    parseHTML() {\n      return getInlineContentParseRules(inlineContentConfig);\n    },\n\n    renderHTML({ node }) {\n      const editor = this.options.editor;\n\n      const output = inlineContentImplementation.render(\n        nodeToCustomInlineContent(\n          node,\n          editor.schema.inlineContentSchema,\n          editor.schema.styleSchema\n        ) as any as InlineContentFromConfig<T, S>, // TODO: fix cast\n        () => {\n          // No-op\n        },\n        editor\n      );\n\n      return addInlineContentAttributes(\n        output,\n        inlineContentConfig.type,\n        node.attrs as Props<T[\"propSchema\"]>,\n        inlineContentConfig.propSchema\n      );\n    },\n\n    addNodeView() {\n      return ({ node, getPos }) => {\n        const editor = this.options.editor;\n\n        const output = inlineContentImplementation.render(\n          nodeToCustomInlineContent(\n            node,\n            editor.schema.inlineContentSchema,\n            editor.schema.styleSchema\n          ) as any as InlineContentFromConfig<T, S>, // TODO: fix cast\n          (update) => {\n            if (typeof getPos === \"boolean\") {\n              return;\n            }\n\n            const content = inlineContentToNodes(\n              [update],\n              editor._tiptapEditor.schema,\n              editor.schema.styleSchema\n            );\n\n            editor._tiptapEditor.view.dispatch(\n              editor._tiptapEditor.view.state.tr.replaceWith(\n                getPos(),\n                getPos() + node.nodeSize,\n                content\n              )\n            );\n          },\n          editor\n        );\n\n        return addInlineContentAttributes(\n          output,\n          inlineContentConfig.type,\n          node.attrs as Props<T[\"propSchema\"]>,\n          inlineContentConfig.propSchema\n        );\n      };\n    },\n  });\n\n  return createInlineContentSpecFromTipTapNode(\n    node,\n    inlineContentConfig.propSchema\n  ) as InlineContentSpec<T>; // TODO: fix cast\n}\n","import { Attributes, Mark } from \"@tiptap/core\";\nimport {\n  StyleConfig,\n  StyleImplementation,\n  StylePropSchema,\n  StyleSchemaFromSpecs,\n  StyleSpec,\n  StyleSpecs,\n} from \"./types\";\n\nexport function stylePropsToAttributes(\n  propSchema: StylePropSchema\n): Attributes {\n  if (propSchema === \"boolean\") {\n    return {};\n  }\n  return {\n    stringValue: {\n      default: undefined,\n      keepOnSplit: true,\n      parseHTML: (element) => element.getAttribute(\"data-value\"),\n      renderHTML: (attributes) =>\n        attributes.stringValue !== undefined\n          ? {\n              \"data-value\": attributes.stringValue,\n            }\n          : {},\n    },\n  };\n}\n\n// Function that adds necessary classes and attributes to the `dom` element\n// returned from a custom style's 'render' function, to ensure no data is lost\n// on internal copy & paste.\nexport function addStyleAttributes<\n  SType extends string,\n  PSchema extends StylePropSchema\n>(\n  element: {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n  },\n  styleType: SType,\n  styleValue: PSchema extends \"boolean\" ? undefined : string,\n  propSchema: PSchema\n): {\n  dom: HTMLElement;\n  contentDOM?: HTMLElement;\n} {\n  // Sets content type attribute\n  element.dom.setAttribute(\"data-style-type\", styleType);\n  // Adds style value as an HTML attribute in kebab-case with \"data-\" prefix, if\n  // the style takes a string value.\n  if (propSchema === \"string\") {\n    element.dom.setAttribute(\"data-value\", styleValue as string);\n  }\n\n  if (element.contentDOM !== undefined) {\n    element.contentDOM.setAttribute(\"data-editable\", \"\");\n  }\n\n  return element;\n}\n\n// This helper function helps to instantiate a stylespec with a\n// config and implementation that conform to the type of Config\nexport function createInternalStyleSpec<T extends StyleConfig>(\n  config: T,\n  implementation: StyleImplementation\n) {\n  return {\n    config,\n    implementation,\n  } satisfies StyleSpec<T>;\n}\n\nexport function createStyleSpecFromTipTapMark<\n  T extends Mark,\n  P extends StylePropSchema\n>(mark: T, propSchema: P) {\n  return createInternalStyleSpec(\n    {\n      type: mark.name as T[\"name\"],\n      propSchema,\n    },\n    {\n      mark,\n    }\n  );\n}\n\nexport function getStyleSchemaFromSpecs<T extends StyleSpecs>(specs: T) {\n  return Object.fromEntries(\n    Object.entries(specs).map(([key, value]) => [key, value.config])\n  ) as StyleSchemaFromSpecs<T>;\n}\n","import { Mark } from \"@tiptap/core\";\nimport { ParseRule } from \"@tiptap/pm/model\";\nimport {\n  addStyleAttributes,\n  createInternalStyleSpec,\n  stylePropsToAttributes,\n} from \"./internal\";\nimport { StyleConfig, StyleSpec } from \"./types\";\nimport {UnreachableCaseError} from \"../../util/typescript\";\n\nexport type CustomStyleImplementation<T extends StyleConfig> = {\n  render: T[\"propSchema\"] extends \"boolean\"\n    ? () => {\n        dom: HTMLElement;\n        contentDOM?: HTMLElement;\n      }\n    : (value: string) => {\n        dom: HTMLElement;\n        contentDOM?: HTMLElement;\n      };\n};\n\n// TODO: support serialization\n\nexport function getStyleParseRules(config: StyleConfig): ParseRule[] {\n  return [\n    {\n      tag: `[data-style-type=\"${config.type}\"]`,\n      contentElement: (element) => {\n        const htmlElement = element as HTMLElement;\n\n        if (htmlElement.matches(\"[data-editable]\")) {\n          return htmlElement;\n        }\n\n        return htmlElement.querySelector(\"[data-editable]\") || htmlElement;\n      },\n    },\n  ];\n}\n\nexport function createStyleSpec<T extends StyleConfig>(\n  styleConfig: T,\n  styleImplementation: CustomStyleImplementation<T>\n): StyleSpec<T> {\n  const mark = Mark.create({\n    name: styleConfig.type,\n\n    addAttributes() {\n      return stylePropsToAttributes(styleConfig.propSchema);\n    },\n\n    parseHTML() {\n      return getStyleParseRules(styleConfig);\n    },\n\n    renderHTML({ mark }) {\n      let renderResult: {\n        dom: HTMLElement;\n        contentDOM?: HTMLElement;\n      };\n\n      if (styleConfig.propSchema === \"boolean\") {\n        // @ts-ignore not sure why this is complaining\n        renderResult = styleImplementation.render();\n      } else if (styleConfig.propSchema === \"string\") {\n        renderResult = styleImplementation.render(mark.attrs.stringValue);\n      } else {\n        throw new UnreachableCaseError(styleConfig.propSchema);\n      }\n\n      // const renderResult = styleImplementation.render();\n      return addStyleAttributes(\n        renderResult,\n        styleConfig.type,\n        mark.attrs.stringValue,\n        styleConfig.propSchema\n      );\n    },\n  });\n\n  return createInternalStyleSpec(styleConfig, {\n    mark,\n  });\n}\n","import type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport {\n  BlockFromConfig,\n  BlockSchemaWithBlock,\n  FileBlockConfig,\n} from \"../../schema\";\n\nexport const createFileBlockWrapper = (\n  block: BlockFromConfig<FileBlockConfig, any, any>,\n  editor: BlockNoteEditor<\n    BlockSchemaWithBlock<FileBlockConfig[\"type\"], FileBlockConfig>,\n    any,\n    any\n  >,\n  // TODO: Maybe make optional for default preview\n  element: { dom: HTMLElement; destroy?: () => void },\n  buttonText?: string,\n  buttonIcon?: HTMLElement\n) => {\n  const wrapper = document.createElement(\"div\");\n  wrapper.className = \"bn-file-block-content-wrapper\";\n\n  if (block.props.url === \"\") {\n    const addFileButton = createAddFileButton(\n      block,\n      editor,\n      buttonText,\n      buttonIcon\n    );\n    wrapper.appendChild(addFileButton.dom);\n\n    const loading = document.createElement(\"div\");\n    loading.className = \"bn-file-loading-preview\";\n    loading.textContent = \"Loading...\";\n\n    const destroyUploadStartHandler = editor.onUploadStart((blockId) => {\n      if (blockId === block.id) {\n        wrapper.removeChild(addFileButton.dom);\n        wrapper.appendChild(loading);\n      }\n    });\n    const destroyUploadEndHandler = editor.onUploadEnd((blockId) => {\n      if (blockId === block.id) {\n        wrapper.removeChild(loading);\n        wrapper.appendChild(addFileButton.dom);\n      }\n    });\n\n    return {\n      dom: wrapper,\n      destroy: () => {\n        addFileButton.destroy?.();\n        destroyUploadStartHandler();\n        destroyUploadEndHandler();\n      },\n    };\n  } else if (block.props.showPreview === false) {\n    // TODO: Not using the wrapper element here?\n    const file = createDefaultFilePreview(block).dom;\n    const element = createFileAndCaptionWrapper(block, file);\n\n    return {\n      dom: element.dom,\n    };\n  } else {\n    wrapper.appendChild(element.dom);\n\n    return {\n      dom: wrapper,\n      destroy: element.destroy,\n    };\n  }\n};\n\n// Default file preview, displaying a file icon and file name.\nexport const createDefaultFilePreview = (\n  block: BlockFromConfig<FileBlockConfig, any, any>\n): { dom: HTMLElement; destroy?: () => void } => {\n  const file = document.createElement(\"div\");\n  file.className = \"bn-file-default-preview\";\n\n  const icon = document.createElement(\"div\");\n  icon.className = \"bn-file-default-preview-icon\";\n  icon.innerHTML =\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M3 8L9.00319 2H19.9978C20.5513 2 21 2.45531 21 2.9918V21.0082C21 21.556 20.5551 22 20.0066 22H3.9934C3.44476 22 3 21.5501 3 20.9932V8ZM10 4V9H5V20H19V4H10Z\"></path></svg>';\n\n  const fileName = document.createElement(\"p\");\n  fileName.className = \"bn-file-default-preview-name\";\n  fileName.textContent = block.props.name || \"\";\n\n  file.appendChild(icon);\n  file.appendChild(fileName);\n\n  return {\n    dom: file,\n  };\n};\n\n// Wrapper element containing file preview and caption.\nexport const createFileAndCaptionWrapper = (\n  block: BlockFromConfig<FileBlockConfig, any, any>,\n  file: HTMLElement\n) => {\n  const fileAndCaptionWrapper = document.createElement(\"div\");\n  fileAndCaptionWrapper.className = \"bn-file-and-caption-wrapper\";\n\n  const caption = document.createElement(\"p\");\n  caption.className = \"bn-file-caption\";\n  caption.textContent = block.props.caption;\n\n  fileAndCaptionWrapper.appendChild(file);\n  fileAndCaptionWrapper.appendChild(caption);\n\n  return {\n    dom: fileAndCaptionWrapper,\n  };\n};\n\n// Button element that acts as a placeholder for files with no src.\nexport const createAddFileButton = (\n  block: BlockFromConfig<FileBlockConfig, any, any>,\n  editor: BlockNoteEditor<any, any, any>,\n  buttonText?: string,\n  buttonIcon?: HTMLElement\n) => {\n  const addFileButton = document.createElement(\"div\");\n  addFileButton.className = \"bn-add-file-button\";\n\n  const addFileButtonIcon = document.createElement(\"div\");\n  addFileButtonIcon.className = \"bn-add-file-button-icon\";\n  if (buttonIcon) {\n    addFileButtonIcon.appendChild(buttonIcon);\n  } else {\n    addFileButtonIcon.innerHTML =\n      '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M3 8L9.00319 2H19.9978C20.5513 2 21 2.45531 21 2.9918V21.0082C21 21.556 20.5551 22 20.0066 22H3.9934C3.44476 22 3 21.5501 3 20.9932V8ZM10 4V9H5V20H19V4H10Z\"></path></svg>';\n  }\n\n  const addFileButtonText = document.createElement(\"p\");\n  addFileButtonText.className = \"bn-add-file-button-text\";\n  addFileButtonText.innerHTML =\n    buttonText || editor.dictionary.file_blocks.file.add_button_text;\n\n  // Prevents focus from moving to the button.\n  const addFileButtonMouseDownHandler = (event: MouseEvent) => {\n    event.preventDefault();\n  };\n  // Opens the file toolbar.\n  const addFileButtonClickHandler = () => {\n    editor.dispatch(\n      editor._tiptapEditor.state.tr.setMeta(editor.filePanel!.plugin, {\n        block: block,\n      })\n    );\n  };\n\n  addFileButton.appendChild(addFileButtonIcon);\n  addFileButton.appendChild(addFileButtonText);\n\n  addFileButton.addEventListener(\n    \"mousedown\",\n    addFileButtonMouseDownHandler,\n    true\n  );\n  addFileButton.addEventListener(\"click\", addFileButtonClickHandler, true);\n\n  return {\n    dom: addFileButton,\n    destroy: () => {\n      addFileButton.removeEventListener(\n        \"mousedown\",\n        addFileButtonMouseDownHandler,\n        true\n      );\n      addFileButton.removeEventListener(\n        \"click\",\n        addFileButtonClickHandler,\n        true\n      );\n    },\n  };\n};\n\nexport const parseEmbedElement = (embedElement: HTMLEmbedElement) => {\n  const url = embedElement.src || undefined;\n\n  return { url };\n};\n\nexport const parseFigureElement = (\n  figureElement: HTMLElement,\n  targetTag: string\n) => {\n  const targetElement = figureElement.querySelector(\n    targetTag\n  ) as HTMLElement | null;\n  if (!targetElement) {\n    return undefined;\n  }\n\n  const captionElement = figureElement.querySelector(\"figcaption\");\n  const caption = captionElement?.textContent ?? undefined;\n\n  return { targetElement, caption };\n};\n\n// Wrapper figure element to display file link with caption. Used for external\n// HTML\nexport const createLinkWithCaption = (\n  element: HTMLElement,\n  caption: string\n) => {\n  const wrapper = document.createElement(\"div\");\n  const fileCaption = document.createElement(\"p\");\n  fileCaption.textContent = caption;\n\n  wrapper.appendChild(element);\n  wrapper.appendChild(fileCaption);\n\n  return {\n    dom: wrapper,\n  };\n};\n\n// Wrapper figure element to display file preview with caption. Used for\n// external HTML.\nexport const createFigureWithCaption = (\n  element: HTMLElement,\n  caption: string\n) => {\n  const figure = document.createElement(\"figure\");\n  const captionElement = document.createElement(\"figcaption\");\n  captionElement.textContent = caption;\n\n  figure.appendChild(element);\n  figure.appendChild(captionElement);\n\n  return { dom: figure };\n};\n\n// Wrapper element which adds resize handles & logic for visual media file\n// previews.\nexport const createResizeHandlesWrapper = (\n  block: BlockFromConfig<FileBlockConfig, any, any>,\n  editor: BlockNoteEditor<any, any, any>,\n  element: HTMLElement,\n  getWidth: () => number,\n  setWidth: (width: number) => void\n): { dom: HTMLElement; destroy: () => void } => {\n  if (!block.props.previewWidth) {\n    throw new Error(\"Block must have a `previewWidth` prop.\");\n  }\n\n  // Wrapper element for rendered element and resize handles.\n  const wrapper = document.createElement(\"div\");\n  wrapper.className = \"bn-visual-media-wrapper\";\n\n  // Resize handle elements.\n  const leftResizeHandle = document.createElement(\"div\");\n  leftResizeHandle.className = \"bn-visual-media-resize-handle\";\n  leftResizeHandle.style.left = \"4px\";\n  const rightResizeHandle = document.createElement(\"div\");\n  rightResizeHandle.className = \"bn-visual-media-resize-handle\";\n  rightResizeHandle.style.right = \"4px\";\n\n  // Temporary parameters set when the user begins resizing the element, used to\n  // calculate the new width of the element.\n  let resizeParams:\n    | {\n        handleUsed: \"left\" | \"right\";\n        initialWidth: number;\n        initialClientX: number;\n      }\n    | undefined;\n\n  // Updates the element width with an updated width depending on the cursor X\n  // offset from when the resize began, and which resize handle is being used.\n  const windowMouseMoveHandler = (event: MouseEvent) => {\n    if (!resizeParams) {\n      if (\n        !editor.isEditable &&\n        wrapper.contains(leftResizeHandle) &&\n        wrapper.contains(rightResizeHandle)\n      ) {\n        wrapper.removeChild(leftResizeHandle);\n        wrapper.removeChild(rightResizeHandle);\n      }\n\n      return;\n    }\n\n    let newWidth: number;\n\n    if (block.props.textAlignment === \"center\") {\n      if (resizeParams.handleUsed === \"left\") {\n        newWidth =\n          resizeParams.initialWidth +\n          (resizeParams.initialClientX - event.clientX) * 2;\n      } else {\n        newWidth =\n          resizeParams.initialWidth +\n          (event.clientX - resizeParams.initialClientX) * 2;\n      }\n    } else {\n      if (resizeParams.handleUsed === \"left\") {\n        newWidth =\n          resizeParams.initialWidth +\n          resizeParams.initialClientX -\n          event.clientX;\n      } else {\n        newWidth =\n          resizeParams.initialWidth +\n          event.clientX -\n          resizeParams.initialClientX;\n      }\n    }\n\n    // Min element width in px.\n    const minWidth = 64;\n\n    // Ensures the element is not wider than the editor and not smaller than a\n    // predetermined minimum width.\n    if (newWidth < minWidth) {\n      setWidth(minWidth);\n    } else if (newWidth > editor.domElement.firstElementChild!.clientWidth) {\n      setWidth(editor.domElement.firstElementChild!.clientWidth);\n    } else {\n      setWidth(newWidth);\n    }\n  };\n  // Stops mouse movements from resizing the element and updates the block's\n  // `width` prop to the new value.\n  const windowMouseUpHandler = (event: MouseEvent) => {\n    // Hides the drag handles if the cursor is no longer over the element.\n    if (\n      (!event.target ||\n        !wrapper.contains(event.target as Node) ||\n        !editor.isEditable) &&\n      wrapper.contains(leftResizeHandle) &&\n      wrapper.contains(rightResizeHandle)\n    ) {\n      wrapper.removeChild(leftResizeHandle);\n      wrapper.removeChild(rightResizeHandle);\n    }\n\n    if (!resizeParams) {\n      return;\n    }\n\n    resizeParams = undefined;\n\n    editor.updateBlock(block, {\n      props: {\n        previewWidth: getWidth(),\n      },\n    });\n  };\n\n  // Shows the resize handles when hovering over the element with the cursor.\n  const elementMouseEnterHandler = () => {\n    if (editor.isEditable) {\n      wrapper.appendChild(leftResizeHandle);\n      wrapper.appendChild(rightResizeHandle);\n    }\n  };\n  // Hides the resize handles when the cursor leaves the element, unless the\n  // cursor moves to one of the resize handles.\n  const elementMouseLeaveHandler = (event: MouseEvent) => {\n    if (\n      event.relatedTarget === leftResizeHandle ||\n      event.relatedTarget === rightResizeHandle\n    ) {\n      return;\n    }\n\n    if (resizeParams) {\n      return;\n    }\n\n    if (\n      editor.isEditable &&\n      wrapper.contains(leftResizeHandle) &&\n      wrapper.contains(rightResizeHandle)\n    ) {\n      wrapper.removeChild(leftResizeHandle);\n      wrapper.removeChild(rightResizeHandle);\n    }\n  };\n\n  // Sets the resize params, allowing the user to begin resizing the element by\n  // moving the cursor left or right.\n  const leftResizeHandleMouseDownHandler = (event: MouseEvent) => {\n    event.preventDefault();\n\n    wrapper.appendChild(leftResizeHandle);\n    wrapper.appendChild(rightResizeHandle);\n\n    resizeParams = {\n      handleUsed: \"left\",\n      initialWidth: block.props.previewWidth!,\n      initialClientX: event.clientX,\n    };\n  };\n  const rightResizeHandleMouseDownHandler = (event: MouseEvent) => {\n    event.preventDefault();\n\n    wrapper.appendChild(leftResizeHandle);\n    wrapper.appendChild(rightResizeHandle);\n\n    resizeParams = {\n      handleUsed: \"right\",\n      initialWidth: block.props.previewWidth!,\n      initialClientX: event.clientX,\n    };\n  };\n\n  wrapper.appendChild(element);\n\n  window.addEventListener(\"mousemove\", windowMouseMoveHandler);\n  window.addEventListener(\"mouseup\", windowMouseUpHandler);\n  element.addEventListener(\"mouseenter\", elementMouseEnterHandler);\n  element.addEventListener(\"mouseleave\", elementMouseLeaveHandler);\n  leftResizeHandle.addEventListener(\n    \"mousedown\",\n    leftResizeHandleMouseDownHandler\n  );\n  rightResizeHandle.addEventListener(\n    \"mousedown\",\n    rightResizeHandleMouseDownHandler\n  );\n\n  return {\n    dom: wrapper,\n    destroy: () => {\n      window.removeEventListener(\"mousemove\", windowMouseMoveHandler);\n      window.removeEventListener(\"mouseup\", windowMouseUpHandler);\n      element.removeEventListener(\"mouseenter\", elementMouseEnterHandler);\n      element.removeEventListener(\"mouseleave\", elementMouseLeaveHandler);\n      leftResizeHandle.removeEventListener(\n        \"mousedown\",\n        leftResizeHandleMouseDownHandler\n      );\n      rightResizeHandle.removeEventListener(\n        \"mousedown\",\n        rightResizeHandleMouseDownHandler\n      );\n    },\n  };\n};\n","export const parseAudioElement = (audioElement: HTMLAudioElement) => {\n  const url = audioElement.src || undefined;\n\n  return { url };\n};\n","import type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport {\n  BlockFromConfig,\n  createBlockSpec,\n  FileBlockConfig,\n  Props,\n  PropSchema,\n} from \"../../schema\";\nimport { defaultProps } from \"../defaultProps\";\n\nimport {\n  createFigureWithCaption,\n  createFileAndCaptionWrapper,\n  createFileBlockWrapper,\n  createLinkWithCaption,\n  parseFigureElement,\n} from \"../FileBlockContent/fileBlockHelpers\";\nimport { parseAudioElement } from \"./audioBlockHelpers\";\n\nexport const audioPropSchema = {\n  backgroundColor: defaultProps.backgroundColor,\n  // File name.\n  name: {\n    default: \"\" as const,\n  },\n  // File url.\n  url: {\n    default: \"\" as const,\n  },\n  // File caption.\n  caption: {\n    default: \"\" as const,\n  },\n\n  showPreview: {\n    default: true,\n  },\n} satisfies PropSchema;\n\nexport const audioBlockConfig = {\n  type: \"audio\" as const,\n  propSchema: audioPropSchema,\n  content: \"none\",\n  isFileBlock: true,\n  fileBlockAccept: [\"audio/*\"],\n} satisfies FileBlockConfig;\n\nexport const audioRender = (\n  block: BlockFromConfig<typeof audioBlockConfig, any, any>,\n  editor: BlockNoteEditor<any, any, any>\n) => {\n  const icon = document.createElement(\"div\");\n  icon.innerHTML =\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M2 16.0001H5.88889L11.1834 20.3319C11.2727 20.405 11.3846 20.4449 11.5 20.4449C11.7761 20.4449 12 20.2211 12 19.9449V4.05519C12 3.93977 11.9601 3.8279 11.887 3.73857C11.7121 3.52485 11.3971 3.49335 11.1834 3.66821L5.88889 8.00007H2C1.44772 8.00007 1 8.44778 1 9.00007V15.0001C1 15.5524 1.44772 16.0001 2 16.0001ZM23 12C23 15.292 21.5539 18.2463 19.2622 20.2622L17.8445 18.8444C19.7758 17.1937 21 14.7398 21 12C21 9.26016 19.7758 6.80629 17.8445 5.15557L19.2622 3.73779C21.5539 5.75368 23 8.70795 23 12ZM18 12C18 10.0883 17.106 8.38548 15.7133 7.28673L14.2842 8.71584C15.3213 9.43855 16 10.64 16 12C16 13.36 15.3213 14.5614 14.2842 15.2841L15.7133 16.7132C17.106 15.6145 18 13.9116 18 12Z\"></path></svg>';\n\n  const audio = document.createElement(\"audio\");\n  audio.className = \"bn-audio\";\n  editor.resolveFileUrl(block.props.url).then((downloadUrl) => {\n    audio.src = downloadUrl;\n  });\n  audio.controls = true;\n  audio.contentEditable = \"false\";\n  audio.draggable = false;\n\n  const element = createFileAndCaptionWrapper(block, audio);\n\n  return createFileBlockWrapper(\n    block,\n    editor,\n    element,\n    editor.dictionary.file_blocks.audio.add_button_text,\n    icon.firstElementChild as HTMLElement\n  );\n};\n\nexport const audioParse = (\n  element: HTMLElement\n): Partial<Props<typeof audioBlockConfig.propSchema>> | undefined => {\n  if (element.tagName === \"AUDIO\") {\n    return parseAudioElement(element as HTMLAudioElement);\n  }\n\n  if (element.tagName === \"FIGURE\") {\n    const parsedFigure = parseFigureElement(element, \"audio\");\n    if (!parsedFigure) {\n      return undefined;\n    }\n\n    const { targetElement, caption } = parsedFigure;\n\n    return {\n      ...parseAudioElement(targetElement as HTMLAudioElement),\n      caption,\n    };\n  }\n\n  return undefined;\n};\n\nexport const audioToExternalHTML = (\n  block: BlockFromConfig<typeof audioBlockConfig, any, any>\n) => {\n  if (!block.props.url) {\n    const div = document.createElement(\"p\");\n    div.textContent = \"Add audio\";\n\n    return {\n      dom: div,\n    };\n  }\n\n  let audio;\n  if (block.props.showPreview) {\n    audio = document.createElement(\"audio\");\n    audio.src = block.props.url;\n  } else {\n    audio = document.createElement(\"a\");\n    audio.href = block.props.url;\n    audio.textContent = block.props.name || block.props.url;\n  }\n\n  if (block.props.caption) {\n    if (block.props.showPreview) {\n      return createFigureWithCaption(audio, block.props.caption);\n    } else {\n      return createLinkWithCaption(audio, block.props.caption);\n    }\n  }\n\n  return {\n    dom: audio,\n  };\n};\n\nexport const AudioBlock = createBlockSpec(audioBlockConfig, {\n  render: audioRender,\n  parse: audioParse,\n  toExternalHTML: audioToExternalHTML,\n});\n","import type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport {\n  BlockFromConfig,\n  FileBlockConfig,\n  PropSchema,\n  createBlockSpec,\n} from \"../../schema\";\nimport { defaultProps } from \"../defaultProps\";\nimport {\n  createDefaultFilePreview,\n  createFileAndCaptionWrapper,\n  createFileBlockWrapper,\n  createLinkWithCaption,\n  parseEmbedElement,\n  parseFigureElement,\n} from \"./fileBlockHelpers\";\n\nexport const filePropSchema = {\n  backgroundColor: defaultProps.backgroundColor,\n  // File name.\n  name: {\n    default: \"\" as const,\n  },\n  // File url.\n  url: {\n    default: \"\" as const,\n  },\n  // File caption.\n  caption: {\n    default: \"\" as const,\n  },\n} satisfies PropSchema;\n\nexport const fileBlockConfig = {\n  type: \"file\" as const,\n  propSchema: filePropSchema,\n  content: \"none\",\n  isFileBlock: true,\n} satisfies FileBlockConfig;\n\nexport const fileRender = (\n  block: BlockFromConfig<typeof fileBlockConfig, any, any>,\n  editor: BlockNoteEditor<any, any, any>\n) => {\n  const file = createDefaultFilePreview(block).dom;\n  const element = createFileAndCaptionWrapper(block, file);\n\n  return createFileBlockWrapper(block, editor, element);\n};\n\nexport const fileParse = (element: HTMLElement) => {\n  if (element.tagName === \"EMBED\") {\n    return parseEmbedElement(element as HTMLEmbedElement);\n  }\n\n  if (element.tagName === \"FIGURE\") {\n    const parsedFigure = parseFigureElement(element, \"embed\");\n    if (!parsedFigure) {\n      return undefined;\n    }\n\n    const { targetElement, caption } = parsedFigure;\n\n    return {\n      ...parseEmbedElement(targetElement as HTMLEmbedElement),\n      caption,\n    };\n  }\n\n  return undefined;\n};\n\nexport const fileToExternalHTML = (\n  block: BlockFromConfig<typeof fileBlockConfig, any, any>\n) => {\n  if (!block.props.url) {\n    const div = document.createElement(\"p\");\n    div.textContent = \"Add file\";\n\n    return {\n      dom: div,\n    };\n  }\n\n  const fileSrcLink = document.createElement(\"a\");\n  fileSrcLink.href = block.props.url;\n  fileSrcLink.textContent = block.props.name || block.props.url;\n\n  if (block.props.caption) {\n    return createLinkWithCaption(fileSrcLink, block.props.caption);\n  }\n\n  return {\n    dom: fileSrcLink,\n  };\n};\n\nexport const FileBlock = createBlockSpec(fileBlockConfig, {\n  render: fileRender,\n  parse: fileParse,\n  toExternalHTML: fileToExternalHTML,\n});\n","/**\n * Uploads a file to tmpfiles.org and returns the URL to the uploaded file.\n *\n * @warning This function should only be used for development purposes, replace with your own backend!\n */\nexport const uploadToTmpFilesDotOrg_DEV_ONLY = async (\n  file: File\n): Promise<string> => {\n  const body = new FormData();\n  body.append(\"file\", file);\n\n  const ret = await fetch(\"https://tmpfiles.org/api/v1/upload\", {\n    method: \"POST\",\n    body: body,\n  });\n  return (await ret.json()).data.url.replace(\n    \"tmpfiles.org/\",\n    \"tmpfiles.org/dl/\"\n  );\n};\n","export const parseImageElement = (imageElement: HTMLImageElement) => {\n  const url = imageElement.src || undefined;\n  const previewWidth = imageElement.width || undefined;\n\n  return { url, previewWidth };\n};\n","import type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport {\n  BlockFromConfig,\n  createBlockSpec,\n  FileBlockConfig,\n  Props,\n  PropSchema,\n} from \"../../schema\";\nimport { defaultProps } from \"../defaultProps\";\nimport {\n  createFigureWithCaption,\n  createFileAndCaptionWrapper,\n  createFileBlockWrapper,\n  createLinkWithCaption,\n  createResizeHandlesWrapper,\n  parseFigureElement,\n} from \"../FileBlockContent/fileBlockHelpers\";\nimport { parseImageElement } from \"./imageBlockHelpers\";\n\nexport const imagePropSchema = {\n  textAlignment: defaultProps.textAlignment,\n  backgroundColor: defaultProps.backgroundColor,\n  // File name.\n  name: {\n    default: \"\" as const,\n  },\n  // File url.\n  url: {\n    default: \"\" as const,\n  },\n  // File caption.\n  caption: {\n    default: \"\" as const,\n  },\n\n  showPreview: {\n    default: true,\n  },\n  // File preview width in px.\n  previewWidth: {\n    default: 512,\n  },\n} satisfies PropSchema;\n\nexport const imageBlockConfig = {\n  type: \"image\" as const,\n  propSchema: imagePropSchema,\n  content: \"none\",\n  isFileBlock: true,\n  fileBlockAccept: [\"image/*\"],\n} satisfies FileBlockConfig;\n\nexport const imageRender = (\n  block: BlockFromConfig<typeof imageBlockConfig, any, any>,\n  editor: BlockNoteEditor<any, any, any>\n) => {\n  const icon = document.createElement(\"div\");\n  icon.innerHTML =\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M5 11.1005L7 9.1005L12.5 14.6005L16 11.1005L19 14.1005V5H5V11.1005ZM4 3H20C20.5523 3 21 3.44772 21 4V20C21 20.5523 20.5523 21 20 21H4C3.44772 21 3 20.5523 3 20V4C3 3.44772 3.44772 3 4 3ZM15.5 10C14.6716 10 14 9.32843 14 8.5C14 7.67157 14.6716 7 15.5 7C16.3284 7 17 7.67157 17 8.5C17 9.32843 16.3284 10 15.5 10Z\"></path></svg>';\n\n  const image = document.createElement(\"img\");\n  image.className = \"bn-visual-media\";\n  editor.resolveFileUrl(block.props.url).then((downloadUrl) => {\n    image.src = downloadUrl;\n  });\n  image.alt = block.props.name || block.props.caption || \"BlockNote image\";\n  image.contentEditable = \"false\";\n  image.draggable = false;\n  image.width = Math.min(\n    block.props.previewWidth,\n    editor.domElement.firstElementChild!.clientWidth\n  );\n\n  const file = createResizeHandlesWrapper(\n    block,\n    editor,\n    image,\n    () => image.width,\n    (width) => (image.width = width)\n  );\n\n  const element = createFileAndCaptionWrapper(block, file.dom);\n\n  return createFileBlockWrapper(\n    block,\n    editor,\n    element,\n    editor.dictionary.file_blocks.image.add_button_text,\n    icon.firstElementChild as HTMLElement\n  );\n};\n\nexport const imageParse = (\n  element: HTMLElement\n): Partial<Props<typeof imageBlockConfig.propSchema>> | undefined => {\n  if (element.tagName === \"IMG\") {\n    return parseImageElement(element as HTMLImageElement);\n  }\n\n  if (element.tagName === \"FIGURE\") {\n    const parsedFigure = parseFigureElement(element, \"img\");\n    if (!parsedFigure) {\n      return undefined;\n    }\n\n    const { targetElement, caption } = parsedFigure;\n\n    return {\n      ...parseImageElement(targetElement as HTMLImageElement),\n      caption,\n    };\n  }\n\n  return undefined;\n};\n\nexport const imageToExternalHTML = (\n  block: BlockFromConfig<typeof imageBlockConfig, any, any>\n) => {\n  if (!block.props.url) {\n    const div = document.createElement(\"p\");\n    div.textContent = \"Add image\";\n\n    return {\n      dom: div,\n    };\n  }\n\n  let image;\n  if (block.props.showPreview) {\n    image = document.createElement(\"img\");\n    image.src = block.props.url;\n    image.alt = block.props.name || block.props.caption || \"BlockNote image\";\n    image.width = block.props.previewWidth;\n  } else {\n    image = document.createElement(\"a\");\n    image.href = block.props.url;\n    image.textContent = block.props.name || block.props.url;\n  }\n\n  if (block.props.caption) {\n    if (block.props.showPreview) {\n      return createFigureWithCaption(image, block.props.caption);\n    } else {\n      return createLinkWithCaption(image, block.props.caption);\n    }\n  }\n\n  return {\n    dom: image,\n  };\n};\n\nexport const ImageBlock = createBlockSpec(imageBlockConfig, {\n  render: imageRender,\n  parse: imageParse,\n  toExternalHTML: imageToExternalHTML,\n});\n","export const parseVideoElement = (videoElement: HTMLVideoElement) => {\n  const url = videoElement.src || undefined;\n  const previewWidth = videoElement.width || undefined;\n\n  return { url, previewWidth };\n};\n","import type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport {\n  BlockFromConfig,\n  createBlockSpec,\n  FileBlockConfig,\n  Props,\n  PropSchema,\n} from \"../../schema\";\nimport { defaultProps } from \"../defaultProps\";\n\nimport {\n  createFigureWithCaption,\n  createFileAndCaptionWrapper,\n  createFileBlockWrapper,\n  createLinkWithCaption,\n  createResizeHandlesWrapper,\n  parseFigureElement,\n} from \"../FileBlockContent/fileBlockHelpers\";\nimport { parseVideoElement } from \"./videoBlockHelpers\";\n\nexport const videoPropSchema = {\n  textAlignment: defaultProps.textAlignment,\n  backgroundColor: defaultProps.backgroundColor,\n  // File name.\n  name: {\n    default: \"\" as const,\n  },\n  // File url.\n  url: {\n    default: \"\" as const,\n  },\n  // File caption.\n  caption: {\n    default: \"\" as const,\n  },\n\n  showPreview: {\n    default: true,\n  },\n  // File preview width in px.\n  previewWidth: {\n    default: 512,\n  },\n} satisfies PropSchema;\n\nexport const videoBlockConfig = {\n  type: \"video\" as const,\n  propSchema: videoPropSchema,\n  content: \"none\",\n  isFileBlock: true,\n  fileBlockAccept: [\"video/*\"],\n} satisfies FileBlockConfig;\n\nexport const videoRender = (\n  block: BlockFromConfig<typeof videoBlockConfig, any, any>,\n  editor: BlockNoteEditor<any, any, any>\n) => {\n  const icon = document.createElement(\"div\");\n  icon.innerHTML =\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M2 3.9934C2 3.44476 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44495 22 3.9934V20.0066C22 20.5552 21.5447 21 21.0082 21H2.9918C2.44405 21 2 20.5551 2 20.0066V3.9934ZM8 5V19H16V5H8ZM4 5V7H6V5H4ZM18 5V7H20V5H18ZM4 9V11H6V9H4ZM18 9V11H20V9H18ZM4 13V15H6V13H4ZM18 13V15H20V13H18ZM4 17V19H6V17H4ZM18 17V19H20V17H18Z\"></path></svg>';\n\n  const video = document.createElement(\"video\");\n  video.className = \"bn-visual-media\";\n  video.src = block.props.url;\n  video.controls = true;\n  video.contentEditable = \"false\";\n  video.draggable = false;\n  video.width = Math.min(\n    block.props.previewWidth,\n    editor.domElement.firstElementChild!.clientWidth\n  );\n\n  const file = createResizeHandlesWrapper(\n    block,\n    editor,\n    video,\n    () => video.width,\n    (width) => (video.width = width)\n  );\n\n  const element = createFileAndCaptionWrapper(block, file.dom);\n\n  return createFileBlockWrapper(\n    block,\n    editor,\n    element,\n    editor.dictionary.file_blocks.video.add_button_text,\n    icon.firstElementChild as HTMLElement\n  );\n};\n\nexport const videoParse = (\n  element: HTMLElement\n): Partial<Props<typeof videoBlockConfig.propSchema>> | undefined => {\n  if (element.tagName === \"VIDEO\") {\n    return parseVideoElement(element as HTMLVideoElement);\n  }\n\n  if (element.tagName === \"FIGURE\") {\n    const parsedFigure = parseFigureElement(element, \"video\");\n    if (!parsedFigure) {\n      return undefined;\n    }\n\n    const { targetElement, caption } = parsedFigure;\n\n    return {\n      ...parseVideoElement(targetElement as HTMLVideoElement),\n      caption,\n    };\n  }\n\n  return undefined;\n};\n\nexport const videoToExternalHTML = (\n  block: BlockFromConfig<typeof videoBlockConfig, any, any>\n) => {\n  if (!block.props.url) {\n    const div = document.createElement(\"p\");\n    div.textContent = \"Add video\";\n\n    return {\n      dom: div,\n    };\n  }\n\n  let video;\n  if (block.props.showPreview) {\n    video = document.createElement(\"video\");\n    video.src = block.props.url;\n    video.width = block.props.previewWidth;\n  } else {\n    video = document.createElement(\"a\");\n    video.href = block.props.url;\n    video.textContent = block.props.name || block.props.url;\n  }\n\n  if (block.props.caption) {\n    if (block.props.showPreview) {\n      return createFigureWithCaption(video, block.props.caption);\n    } else {\n      return createLinkWithCaption(video, block.props.caption);\n    }\n  }\n\n  return {\n    dom: video,\n  };\n};\n\nexport const VideoBlock = createBlockSpec(videoBlockConfig, {\n  render: videoRender,\n  parse: videoParse,\n  toExternalHTML: videoToExternalHTML,\n});\n","import { Mark } from \"@tiptap/core\";\nimport { createStyleSpecFromTipTapMark } from \"../../schema\";\n\nconst BackgroundColorMark = Mark.create({\n  name: \"backgroundColor\",\n\n  addAttributes() {\n    return {\n      stringValue: {\n        default: undefined,\n        parseHTML: (element) => element.getAttribute(\"data-background-color\"),\n        renderHTML: (attributes) => ({\n          \"data-background-color\": attributes.stringValue,\n        }),\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"span\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          if (element.hasAttribute(\"data-background-color\")) {\n            return {\n              stringValue: element.getAttribute(\"data-background-color\"),\n            };\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"span\", HTMLAttributes, 0];\n  },\n});\n\nexport const BackgroundColor = createStyleSpecFromTipTapMark(\n  BackgroundColorMark,\n  \"string\"\n);\n","import { Mark } from \"@tiptap/core\";\nimport { createStyleSpecFromTipTapMark } from \"../../schema\";\n\nconst TextColorMark = Mark.create({\n  name: \"textColor\",\n\n  addAttributes() {\n    return {\n      stringValue: {\n        default: undefined,\n        parseHTML: (element) => element.getAttribute(\"data-text-color\"),\n        renderHTML: (attributes) => ({\n          \"data-text-color\": attributes.stringValue,\n        }),\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"span\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          if (element.hasAttribute(\"data-text-color\")) {\n            return { stringValue: element.getAttribute(\"data-text-color\") };\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"span\", HTMLAttributes, 0];\n  },\n});\n\nexport const TextColor = createStyleSpecFromTipTapMark(TextColorMark, \"string\");\n","import { InputRule } from \"@tiptap/core\";\nimport {\n  PropSchema,\n  createBlockSpecFromStronglyTypedTiptapNode,\n  createStronglyTypedTiptapNode,\n} from \"../../schema\";\nimport { createDefaultBlockDOMOutputSpec } from \"../defaultBlockHelpers\";\nimport { defaultProps } from \"../defaultProps\";\nimport { getCurrentBlockContentType } from \"../../api/getCurrentBlockContentType\";\n\nexport const headingPropSchema = {\n  ...defaultProps,\n  level: { default: 1, values: [1, 2, 3] as const },\n} satisfies PropSchema;\n\nconst HeadingBlockContent = createStronglyTypedTiptapNode({\n  name: \"heading\",\n  content: \"inline*\",\n  group: \"blockContent\",\n  addAttributes() {\n    return {\n      level: {\n        default: 1,\n        // instead of \"level\" attributes, use \"data-level\"\n        parseHTML: (element) => {\n          const attr = element.getAttribute(\"data-level\")!;\n          const parsed = parseInt(attr);\n          if (isFinite(parsed)) {\n            return parsed;\n          }\n          return undefined;\n        },\n        renderHTML: (attributes) => {\n          return {\n            \"data-level\": (attributes.level as number).toString(),\n          };\n        },\n      },\n    };\n  },\n\n  addInputRules() {\n    return [\n      ...[1, 2, 3].map((level) => {\n        // Creates a heading of appropriate level when starting with \"#\", \"##\", or \"###\".\n        return new InputRule({\n          find: new RegExp(`^(#{${level}})\\\\s$`),\n          handler: ({ state, chain, range }) => {\n            if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n              return;\n            }\n\n            chain()\n              .BNUpdateBlock(state.selection.from, {\n                type: \"heading\",\n                props: {\n                  level: level as any,\n                },\n              })\n              // Removes the \"#\" character(s) used to set the heading.\n              .deleteRange({ from: range.from, to: range.to });\n          },\n        });\n      }),\n    ];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      \"Mod-Alt-1\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"heading\",\n            props: {\n              level: 1 as any,\n            },\n          }\n        );\n      },\n      \"Mod-Alt-2\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"heading\",\n            props: {\n              level: 2 as any,\n            },\n          }\n        );\n      },\n      \"Mod-Alt-3\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"heading\",\n            props: {\n              level: 3 as any,\n            },\n          }\n        );\n      },\n    };\n  },\n  parseHTML() {\n    return [\n      {\n        tag: \"div[data-content-type=\" + this.name + \"]\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          return {\n            level: element.getAttribute(\"data-level\"),\n          };\n        },\n      },\n      {\n        tag: \"h1\",\n        attrs: { level: 1 },\n        node: \"heading\",\n      },\n      {\n        tag: \"h2\",\n        attrs: { level: 2 },\n        node: \"heading\",\n      },\n      {\n        tag: \"h3\",\n        attrs: { level: 3 },\n        node: \"heading\",\n      },\n    ];\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    return createDefaultBlockDOMOutputSpec(\n      this.name,\n      `h${node.attrs.level}`,\n      {\n        ...(this.options.domAttributes?.blockContent || {}),\n        ...HTMLAttributes,\n      },\n      this.options.domAttributes?.inlineContent || {}\n    );\n  },\n});\n\nexport const Heading = createBlockSpecFromStronglyTypedTiptapNode(\n  HeadingBlockContent,\n  headingPropSchema\n);\n","import { Editor } from \"@tiptap/core\";\nimport { getBlockInfoFromPos } from \"../../api/getBlockInfoFromPos\";\n\nexport const handleEnter = (editor: Editor) => {\n  const { contentNode, contentType } = getBlockInfoFromPos(\n    editor.state.doc,\n    editor.state.selection.from\n  )!;\n\n  const selectionEmpty =\n    editor.state.selection.anchor === editor.state.selection.head;\n\n  if (\n    !(\n      contentType.name === \"bulletListItem\" ||\n      contentType.name === \"numberedListItem\" ||\n      contentType.name === \"checkListItem\"\n    ) ||\n    !selectionEmpty\n  ) {\n    return false;\n  }\n\n  return editor.commands.first(({ state, chain, commands }) => [\n    () =>\n      // Changes list item block to a paragraph block if the content is empty.\n      commands.command(() => {\n        if (contentNode.childCount === 0) {\n          return commands.BNUpdateBlock(state.selection.from, {\n            type: \"paragraph\",\n            props: {},\n          });\n        }\n\n        return false;\n      }),\n\n    () =>\n      // Splits the current block, moving content inside that's after the cursor\n      // to a new block of the same type below.\n      commands.command(() => {\n        if (contentNode.childCount > 0) {\n          chain()\n            .deleteSelection()\n            .BNSplitBlock(state.selection.from, true)\n            .run();\n\n          return true;\n        }\n\n        return false;\n      }),\n  ]);\n};\n","import { InputRule } from \"@tiptap/core\";\nimport {\n  PropSchema,\n  createBlockSpecFromStronglyTypedTiptapNode,\n  createStronglyTypedTiptapNode,\n} from \"../../../schema\";\nimport { createDefaultBlockDOMOutputSpec } from \"../../defaultBlockHelpers\";\nimport { defaultProps } from \"../../defaultProps\";\nimport { handleEnter } from \"../ListItemKeyboardShortcuts\";\nimport { getCurrentBlockContentType } from \"../../../api/getCurrentBlockContentType\";\n\nexport const bulletListItemPropSchema = {\n  ...defaultProps,\n} satisfies PropSchema;\n\nconst BulletListItemBlockContent = createStronglyTypedTiptapNode({\n  name: \"bulletListItem\",\n  content: \"inline*\",\n  group: \"blockContent\",\n  // This is to make sure that check list parse rules run before, since they\n  // both parse `li` elements but check lists are more specific.\n  priority: 90,\n  addInputRules() {\n    return [\n      // Creates an unordered list when starting with \"-\", \"+\", or \"*\".\n      new InputRule({\n        find: new RegExp(`^[-+*]\\\\s$`),\n        handler: ({ state, chain, range }) => {\n          if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n            return;\n          }\n\n          chain()\n            .BNUpdateBlock(state.selection.from, {\n              type: \"bulletListItem\",\n              props: {},\n            })\n            // Removes the \"-\", \"+\", or \"*\" character used to set the list.\n            .deleteRange({ from: range.from, to: range.to });\n        },\n      }),\n    ];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => handleEnter(this.editor),\n      \"Mod-Shift-8\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"bulletListItem\",\n            props: {},\n          }\n        );\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      // Case for regular HTML list structure.\n      {\n        tag: \"div[data-content-type=\" + this.name + \"]\", // TODO: remove if we can't come up with test case that needs this\n      },\n      {\n        tag: \"li\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (\n            parent.tagName === \"UL\" ||\n            (parent.tagName === \"DIV\" && parent.parentElement!.tagName === \"UL\")\n          ) {\n            return {};\n          }\n\n          return false;\n        },\n        node: \"bulletListItem\",\n      },\n      // Case for BlockNote list structure.\n      {\n        tag: \"p\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (parent.getAttribute(\"data-content-type\") === \"bulletListItem\") {\n            return {};\n          }\n\n          return false;\n        },\n        priority: 300,\n        node: \"bulletListItem\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return createDefaultBlockDOMOutputSpec(\n      this.name,\n      // We use a <p> tag, because for <li> tags we'd need a <ul> element to put\n      // them in to be semantically correct, which we can't have due to the\n      // schema.\n      \"p\",\n      {\n        ...(this.options.domAttributes?.blockContent || {}),\n        ...HTMLAttributes,\n      },\n      this.options.domAttributes?.inlineContent || {}\n    );\n  },\n});\n\nexport const BulletListItem = createBlockSpecFromStronglyTypedTiptapNode(\n  BulletListItemBlockContent,\n  bulletListItemPropSchema\n);\n","import { Plugin, PluginKey } from \"prosemirror-state\";\nimport { getBlockInfoFromPos } from \"../../../api/getBlockInfoFromPos\";\n\n// ProseMirror Plugin which automatically assigns indices to ordered list items per nesting level.\nconst PLUGIN_KEY = new PluginKey(`numbered-list-indexing`);\nexport const NumberedListIndexingPlugin = () => {\n  return new Plugin({\n    key: PLUGIN_KEY,\n    appendTransaction: (_transactions, _oldState, newState) => {\n      const tr = newState.tr;\n      tr.setMeta(\"numberedListIndexing\", true);\n\n      let modified = false;\n\n      // Traverses each node the doc using DFS, so blocks which are on the same nesting level will be traversed in the\n      // same order they appear. This means the index of each list item block can be calculated by incrementing the\n      // index of the previous list item block.\n      newState.doc.descendants((node, pos) => {\n        if (\n          node.type.name === \"blockContainer\" &&\n          node.firstChild!.type.name === \"numberedListItem\"\n        ) {\n          let newIndex = \"1\";\n          const isFirstBlockInDoc = pos === 1;\n\n          const blockInfo = getBlockInfoFromPos(tr.doc, pos + 1)!;\n          if (blockInfo === undefined) {\n            return;\n          }\n\n          // Checks if this block is the start of a new ordered list, i.e. if it's the first block in the document, the\n          // first block in its nesting level, or the previous block is not an ordered list item.\n          if (!isFirstBlockInDoc) {\n            const prevBlockInfo = getBlockInfoFromPos(tr.doc, pos - 2)!;\n            if (prevBlockInfo === undefined) {\n              return;\n            }\n\n            const isFirstBlockInNestingLevel =\n              blockInfo.depth !== prevBlockInfo.depth;\n\n            if (!isFirstBlockInNestingLevel) {\n              const prevBlockContentNode = prevBlockInfo.contentNode;\n              const prevBlockContentType = prevBlockInfo.contentType;\n\n              const isPrevBlockOrderedListItem =\n                prevBlockContentType.name === \"numberedListItem\";\n\n              if (isPrevBlockOrderedListItem) {\n                const prevBlockIndex = prevBlockContentNode.attrs[\"index\"];\n\n                newIndex = (parseInt(prevBlockIndex) + 1).toString();\n              }\n            }\n          }\n\n          const contentNode = blockInfo.contentNode;\n          const index = contentNode.attrs[\"index\"];\n\n          if (index !== newIndex) {\n            modified = true;\n\n            tr.setNodeMarkup(pos + 1, undefined, {\n              index: newIndex,\n            });\n          }\n        }\n      });\n\n      return modified ? tr : null;\n    },\n  });\n};\n","import { InputRule } from \"@tiptap/core\";\nimport {\n  PropSchema,\n  createBlockSpecFromStronglyTypedTiptapNode,\n  createStronglyTypedTiptapNode,\n} from \"../../../schema\";\nimport { createDefaultBlockDOMOutputSpec } from \"../../defaultBlockHelpers\";\nimport { defaultProps } from \"../../defaultProps\";\nimport { handleEnter } from \"../ListItemKeyboardShortcuts\";\nimport { NumberedListIndexingPlugin } from \"./NumberedListIndexingPlugin\";\nimport { getCurrentBlockContentType } from \"../../../api/getCurrentBlockContentType\";\n\nexport const numberedListItemPropSchema = {\n  ...defaultProps,\n} satisfies PropSchema;\n\nconst NumberedListItemBlockContent = createStronglyTypedTiptapNode({\n  name: \"numberedListItem\",\n  content: \"inline*\",\n  group: \"blockContent\",\n  priority: 90,\n  addAttributes() {\n    return {\n      index: {\n        default: null,\n        parseHTML: (element) => element.getAttribute(\"data-index\"),\n        renderHTML: (attributes) => {\n          return {\n            \"data-index\": attributes.index,\n          };\n        },\n      },\n    };\n  },\n\n  addInputRules() {\n    return [\n      // Creates an ordered list when starting with \"1.\".\n      new InputRule({\n        find: new RegExp(`^1\\\\.\\\\s$`),\n        handler: ({ state, chain, range }) => {\n          if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n            return;\n          }\n\n          chain()\n            .BNUpdateBlock(state.selection.from, {\n              type: \"numberedListItem\",\n              props: {},\n            })\n            // Removes the \"1.\" characters used to set the list.\n            .deleteRange({ from: range.from, to: range.to });\n        },\n      }),\n    ];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => handleEnter(this.editor),\n      \"Mod-Shift-7\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"numberedListItem\",\n            props: {},\n          }\n        );\n      },\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [NumberedListIndexingPlugin()];\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"div[data-content-type=\" + this.name + \"]\", // TODO: remove if we can't come up with test case that needs this\n      },\n      // Case for regular HTML list structure.\n      // (e.g.: when pasting from other apps)\n      {\n        tag: \"li\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (\n            parent.tagName === \"OL\" ||\n            (parent.tagName === \"DIV\" && parent.parentElement!.tagName === \"OL\")\n          ) {\n            return {};\n          }\n\n          return false;\n        },\n        node: \"numberedListItem\",\n      },\n      // Case for BlockNote list structure.\n      // (e.g.: when pasting from blocknote)\n      {\n        tag: \"p\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (parent.getAttribute(\"data-content-type\") === \"numberedListItem\") {\n            return {};\n          }\n\n          return false;\n        },\n        priority: 300,\n        node: \"numberedListItem\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return createDefaultBlockDOMOutputSpec(\n      this.name,\n      // We use a <p> tag, because for <li> tags we'd need an <ol> element to\n      // put them in to be semantically correct, which we can't have due to the\n      // schema.\n      \"p\",\n      {\n        ...(this.options.domAttributes?.blockContent || {}),\n        ...HTMLAttributes,\n      },\n      this.options.domAttributes?.inlineContent || {}\n    );\n  },\n});\n\nexport const NumberedListItem = createBlockSpecFromStronglyTypedTiptapNode(\n  NumberedListItemBlockContent,\n  numberedListItemPropSchema\n);\n","import { InputRule } from \"@tiptap/core\";\nimport {\n  PropSchema,\n  createBlockSpecFromStronglyTypedTiptapNode,\n  createStronglyTypedTiptapNode,\n} from \"../../../schema\";\nimport { createDefaultBlockDOMOutputSpec } from \"../../defaultBlockHelpers\";\nimport { defaultProps } from \"../../defaultProps\";\nimport { handleEnter } from \"../ListItemKeyboardShortcuts\";\nimport { getCurrentBlockContentType } from \"../../../api/getCurrentBlockContentType\";\n\nexport const checkListItemPropSchema = {\n  ...defaultProps,\n  checked: {\n    default: false,\n  },\n} satisfies PropSchema;\n\nconst checkListItemBlockContent = createStronglyTypedTiptapNode({\n  name: \"checkListItem\",\n  content: \"inline*\",\n  group: \"blockContent\",\n  addAttributes() {\n    return {\n      checked: {\n        default: false,\n        // instead of \"checked\" attributes, use \"data-checked\"\n        parseHTML: (element) =>\n          element.getAttribute(\"data-checked\") === \"true\" || undefined,\n        renderHTML: (attributes) => {\n          return attributes.checked\n            ? {\n                \"data-checked\": (attributes.checked as boolean).toString(),\n              }\n            : {};\n        },\n      },\n    };\n  },\n\n  addInputRules() {\n    return [\n      // Creates a checklist when starting with \"[]\" or \"[X]\".\n      new InputRule({\n        find: new RegExp(`\\\\[\\\\s*\\\\]\\\\s$`),\n        handler: ({ state, chain, range }) => {\n          if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n            return;\n          }\n\n          chain()\n            .BNUpdateBlock(state.selection.from, {\n              type: \"checkListItem\",\n              props: {\n                checked: false as any,\n              },\n            })\n            // Removes the characters used to set the list.\n            .deleteRange({ from: range.from, to: range.to });\n        },\n      }),\n      new InputRule({\n        find: new RegExp(`\\\\[[Xx]\\\\]\\\\s$`),\n        handler: ({ state, chain, range }) => {\n          if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n            return;\n          }\n\n          chain()\n            .BNUpdateBlock(state.selection.from, {\n              type: \"checkListItem\",\n              props: {\n                checked: true as any,\n              },\n            })\n            // Removes the characters used to set the list.\n            .deleteRange({ from: range.from, to: range.to });\n        },\n      }),\n    ];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => handleEnter(this.editor),\n      \"Mod-Shift-9\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"checkListItem\",\n            props: {},\n          }\n        );\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"div[data-content-type=\" + this.name + \"]\", // TODO: remove if we can't come up with test case that needs this\n      },\n      // Checkbox only.\n      {\n        tag: \"input\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          if ((element as HTMLInputElement).type === \"checkbox\") {\n            return { checked: (element as HTMLInputElement).checked };\n          }\n\n          return false;\n        },\n        node: \"checkListItem\",\n      },\n      // Container element for checkbox + label.\n      {\n        tag: \"li\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (\n            parent.tagName === \"UL\" ||\n            (parent.tagName === \"DIV\" && parent.parentElement!.tagName === \"UL\")\n          ) {\n            const checkbox =\n              (element.querySelector(\n                \"input[type=checkbox]\"\n              ) as HTMLInputElement) || null;\n\n            if (checkbox === null) {\n              return false;\n            }\n\n            return { checked: checkbox.checked };\n          }\n\n          return false;\n        },\n        node: \"checkListItem\",\n      },\n    ];\n  },\n\n  // Since there is no HTML checklist element, there isn't really any\n  // standardization for what checklists should look like in the DOM. GDocs'\n  // and Notion's aren't cross compatible, for example. This implementation\n  // has a semantically correct DOM structure (though missing a label for the\n  // checkbox) which is also converted correctly to Markdown by remark.\n  renderHTML({ node, HTMLAttributes }) {\n    const checkbox = document.createElement(\"input\");\n    checkbox.type = \"checkbox\";\n    checkbox.checked = node.attrs.checked;\n    if (node.attrs.checked) {\n      checkbox.setAttribute(\"checked\", \"\");\n    }\n\n    const { dom, contentDOM } = createDefaultBlockDOMOutputSpec(\n      this.name,\n      \"p\",\n      {\n        ...(this.options.domAttributes?.blockContent || {}),\n        ...HTMLAttributes,\n      },\n      this.options.domAttributes?.inlineContent || {}\n    );\n\n    dom.insertBefore(checkbox, contentDOM);\n\n    return { dom, contentDOM };\n  },\n\n  // Need to render node view since the checkbox needs to be able to update the\n  // node. This is only possible with a node view as it exposes `getPos`.\n  addNodeView() {\n    return ({ node, getPos, editor, HTMLAttributes }) => {\n      // Need to wrap certain elements in a div or keyboard navigation gets\n      // confused.\n      const wrapper = document.createElement(\"div\");\n      const checkboxWrapper = document.createElement(\"div\");\n      checkboxWrapper.contentEditable = \"false\";\n\n      const checkbox = document.createElement(\"input\");\n      checkbox.type = \"checkbox\";\n      checkbox.checked = node.attrs.checked;\n      if (node.attrs.checked) {\n        checkbox.setAttribute(\"checked\", \"\");\n      }\n\n      const changeHandler = () => {\n        if (!editor.isEditable) {\n          // This seems like the most effective way of blocking the checkbox\n          // from being toggled, as event.preventDefault() does not stop it for\n          // \"click\" or \"change\" events.\n          checkbox.checked = !checkbox.checked;\n          return;\n        }\n\n        if (typeof getPos !== \"boolean\") {\n          this.editor.commands.BNUpdateBlock(getPos(), {\n            type: \"checkListItem\",\n            props: {\n              checked: checkbox.checked as any,\n            },\n          });\n        }\n      };\n      checkbox.addEventListener(\"change\", changeHandler);\n\n      const { dom, contentDOM } = createDefaultBlockDOMOutputSpec(\n        this.name,\n        \"p\",\n        {\n          ...(this.options.domAttributes?.blockContent || {}),\n          ...HTMLAttributes,\n        },\n        this.options.domAttributes?.inlineContent || {}\n      );\n\n      if (typeof getPos !== \"boolean\") {\n        // Since `node` is a blockContent node, we have to get the block ID from\n        // the parent blockContainer node. This means we can't add the label in\n        // `renderHTML` as we can't use `getPos` and therefore can't get the\n        // parent blockContainer node.\n        const blockID = this.editor.state.doc.resolve(getPos()).node().attrs.id;\n        const label = \"label-\" + blockID;\n        checkbox.setAttribute(\"aria-labelledby\", label);\n        contentDOM.id = label;\n      }\n\n      dom.removeChild(contentDOM);\n      dom.appendChild(wrapper);\n      wrapper.appendChild(checkboxWrapper);\n      wrapper.appendChild(contentDOM);\n      checkboxWrapper.appendChild(checkbox);\n\n      return {\n        dom,\n        contentDOM,\n        destroy: () => {\n          checkbox.removeEventListener(\"change\", changeHandler);\n        },\n      };\n    };\n  },\n});\n\nexport const CheckListItem = createBlockSpecFromStronglyTypedTiptapNode(\n  checkListItemBlockContent,\n  checkListItemPropSchema\n);\n","import {\n  createBlockSpecFromStronglyTypedTiptapNode,\n  createStronglyTypedTiptapNode,\n} from \"../../schema\";\nimport { createDefaultBlockDOMOutputSpec } from \"../defaultBlockHelpers\";\nimport { defaultProps } from \"../defaultProps\";\nimport { getCurrentBlockContentType } from \"../../api/getCurrentBlockContentType\";\n\nexport const paragraphPropSchema = {\n  ...defaultProps,\n};\n\nexport const ParagraphBlockContent = createStronglyTypedTiptapNode({\n  name: \"paragraph\",\n  content: \"inline*\",\n  group: \"blockContent\",\n\n  addKeyboardShortcuts() {\n    return {\n      \"Mod-Alt-0\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"paragraph\",\n            props: {},\n          }\n        );\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      { tag: \"div[data-content-type=\" + this.name + \"]\" },\n      {\n        tag: \"p\",\n        priority: 200,\n        getAttrs: (element) => {\n          if (typeof element === \"string\" || !element.textContent?.trim()) {\n            return false;\n          }\n\n          return {};\n        },\n        node: \"paragraph\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return createDefaultBlockDOMOutputSpec(\n      this.name,\n      \"p\",\n      {\n        ...(this.options.domAttributes?.blockContent || {}),\n        ...HTMLAttributes,\n      },\n      this.options.domAttributes?.inlineContent || {}\n    );\n  },\n});\n\nexport const Paragraph = createBlockSpecFromStronglyTypedTiptapNode(\n  ParagraphBlockContent,\n  paragraphPropSchema\n);\n","import { callOrReturn, Extension, getExtensionField } from \"@tiptap/core\";\nimport { columnResizing, tableEditing } from \"prosemirror-tables\";\n\nexport const TableExtension = Extension.create({\n  name: \"BlockNoteTableExtension\",\n\n  addProseMirrorPlugins: () => {\n    return [\n      columnResizing({\n        cellMinWidth: 100,\n      }),\n      tableEditing(),\n    ];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      // Makes enter create a new line within the cell.\n      Enter: () => {\n        if (\n          this.editor.state.selection.empty &&\n          this.editor.state.selection.$head.parent.type.name ===\n            \"tableParagraph\"\n        ) {\n          this.editor.commands.setHardBreak();\n\n          return true;\n        }\n\n        return false;\n      },\n      // Ensures that backspace won't delete the table if the text cursor is at\n      // the start of a cell and the selection is empty.\n      Backspace: () => {\n        const selection = this.editor.state.selection;\n        const selectionIsEmpty = selection.empty;\n        const selectionIsAtStartOfNode = selection.$head.parentOffset === 0;\n        const selectionIsInTableParagraphNode =\n          selection.$head.node().type.name === \"tableParagraph\";\n\n        return (\n          selectionIsEmpty &&\n          selectionIsAtStartOfNode &&\n          selectionIsInTableParagraphNode\n        );\n      },\n    };\n  },\n\n  extendNodeSchema(extension) {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    };\n\n    return {\n      tableRole: callOrReturn(\n        getExtensionField(extension, \"tableRole\", context)\n      ),\n    };\n  },\n});\n","import { mergeAttributes, Node } from \"@tiptap/core\";\nimport { TableCell } from \"@tiptap/extension-table-cell\";\nimport { TableHeader } from \"@tiptap/extension-table-header\";\nimport { TableRow } from \"@tiptap/extension-table-row\";\nimport {\n  createBlockSpecFromStronglyTypedTiptapNode,\n  createStronglyTypedTiptapNode,\n} from \"../../schema\";\nimport { createDefaultBlockDOMOutputSpec } from \"../defaultBlockHelpers\";\nimport { defaultProps } from \"../defaultProps\";\nimport { TableExtension } from \"./TableExtension\";\n\nexport const tablePropSchema = {\n  ...defaultProps,\n};\n\nexport const TableBlockContent = createStronglyTypedTiptapNode({\n  name: \"table\",\n  content: \"tableRow+\",\n  group: \"blockContent\",\n  tableRole: \"table\",\n\n  isolating: true,\n\n  parseHTML() {\n    return [{ tag: \"table\" }];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return createDefaultBlockDOMOutputSpec(\n      this.name,\n      \"table\",\n      {\n        ...(this.options.domAttributes?.blockContent || {}),\n        ...HTMLAttributes,\n      },\n      this.options.domAttributes?.inlineContent || {}\n    );\n  },\n});\n\nconst TableParagraph = Node.create({\n  name: \"tableParagraph\",\n  group: \"tableContent\",\n  content: \"inline*\",\n\n  parseHTML() {\n    return [\n      {\n        tag: \"p\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\" || !element.textContent) {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (parent.tagName === \"TD\") {\n            return {};\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\n      \"p\",\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n      0,\n    ];\n  },\n});\n\nexport const Table = createBlockSpecFromStronglyTypedTiptapNode(\n  TableBlockContent,\n  tablePropSchema,\n  [\n    TableExtension,\n    TableParagraph,\n    TableHeader.extend({\n      content: \"tableContent\",\n    }),\n    TableCell.extend({\n      content: \"tableContent\",\n    }),\n    TableRow,\n  ]\n);\n","import Bold from \"@tiptap/extension-bold\";\nimport Code from \"@tiptap/extension-code\";\nimport Italic from \"@tiptap/extension-italic\";\nimport Strike from \"@tiptap/extension-strike\";\nimport Underline from \"@tiptap/extension-underline\";\nimport { BackgroundColor } from \"../extensions/BackgroundColor/BackgroundColorMark\";\nimport { TextColor } from \"../extensions/TextColor/TextColorMark\";\nimport {\n  BlockNoDefaults,\n  BlockSchema,\n  BlockSpecs,\n  InlineContentSchema,\n  InlineContentSpecs,\n  PartialBlockNoDefaults,\n  StyleSchema,\n  StyleSpecs,\n  createStyleSpecFromTipTapMark,\n  getBlockSchemaFromSpecs,\n  getInlineContentSchemaFromSpecs,\n  getStyleSchemaFromSpecs,\n} from \"../schema\";\n\nimport { Heading } from \"./HeadingBlockContent/HeadingBlockContent\";\nimport { BulletListItem } from \"./ListItemBlockContent/BulletListItemBlockContent/BulletListItemBlockContent\";\nimport { NumberedListItem } from \"./ListItemBlockContent/NumberedListItemBlockContent/NumberedListItemBlockContent\";\nimport { CheckListItem } from \"./ListItemBlockContent/CheckListItemBlockContent/CheckListItemBlockContent\";\nimport { Paragraph } from \"./ParagraphBlockContent/ParagraphBlockContent\";\nimport { Table } from \"./TableBlockContent/TableBlockContent\";\nimport { FileBlock } from \"./FileBlockContent/FileBlockContent\";\nimport { ImageBlock } from \"./ImageBlockContent/ImageBlockContent\";\nimport { VideoBlock } from \"./VideoBlockContent/VideoBlockContent\";\nimport { AudioBlock } from \"./AudioBlockContent/AudioBlockContent\";\n\nexport const defaultBlockSpecs = {\n  paragraph: Paragraph,\n  heading: Heading,\n  bulletListItem: BulletListItem,\n  numberedListItem: NumberedListItem,\n  checkListItem: CheckListItem,\n  table: Table,\n  file: FileBlock,\n  image: ImageBlock,\n  video: VideoBlock,\n  audio: AudioBlock,\n} satisfies BlockSpecs;\n\nexport const defaultBlockSchema = getBlockSchemaFromSpecs(defaultBlockSpecs);\n\n// underscore is used that in case a user overrides DefaultBlockSchema,\n// they can still access the original default block schema\nexport type _DefaultBlockSchema = typeof defaultBlockSchema;\nexport type DefaultBlockSchema = _DefaultBlockSchema;\n\nexport const defaultStyleSpecs = {\n  bold: createStyleSpecFromTipTapMark(Bold, \"boolean\"),\n  italic: createStyleSpecFromTipTapMark(Italic, \"boolean\"),\n  underline: createStyleSpecFromTipTapMark(Underline, \"boolean\"),\n  strike: createStyleSpecFromTipTapMark(Strike, \"boolean\"),\n  code: createStyleSpecFromTipTapMark(Code, \"boolean\"),\n  textColor: TextColor,\n  backgroundColor: BackgroundColor,\n} satisfies StyleSpecs;\n\nexport const defaultStyleSchema = getStyleSchemaFromSpecs(defaultStyleSpecs);\n\n// underscore is used that in case a user overrides DefaultStyleSchema,\n// they can still access the original default style schema\nexport type _DefaultStyleSchema = typeof defaultStyleSchema;\nexport type DefaultStyleSchema = _DefaultStyleSchema;\n\nexport const defaultInlineContentSpecs = {\n  text: { config: \"text\", implementation: {} as any },\n  link: { config: \"link\", implementation: {} as any },\n} satisfies InlineContentSpecs;\n\nexport const defaultInlineContentSchema = getInlineContentSchemaFromSpecs(\n  defaultInlineContentSpecs\n);\n\n// underscore is used that in case a user overrides DefaultInlineContentSchema,\n// they can still access the original default inline content schema\nexport type _DefaultInlineContentSchema = typeof defaultInlineContentSchema;\nexport type DefaultInlineContentSchema = _DefaultInlineContentSchema;\n\nexport type PartialBlock<\n  BSchema extends BlockSchema = DefaultBlockSchema,\n  I extends InlineContentSchema = DefaultInlineContentSchema,\n  S extends StyleSchema = DefaultStyleSchema\n> = PartialBlockNoDefaults<BSchema, I, S>;\n\nexport type Block<\n  BSchema extends BlockSchema = DefaultBlockSchema,\n  I extends InlineContentSchema = DefaultInlineContentSchema,\n  S extends StyleSchema = DefaultStyleSchema\n> = BlockNoDefaults<BSchema, I, S>;\n","import type { BlockNoteEditor } from \"../editor/BlockNoteEditor\";\nimport {\n  BlockFromConfig,\n  BlockSchema,\n  FileBlockConfig,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../schema\";\nimport {\n  Block,\n  DefaultBlockSchema,\n  defaultBlockSchema,\n  defaultInlineContentSchema,\n  DefaultInlineContentSchema,\n} from \"./defaultBlocks\";\nimport { defaultProps } from \"./defaultProps\";\n\nexport function checkDefaultBlockTypeInSchema<\n  BlockType extends keyof DefaultBlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blockType: BlockType,\n  editor: BlockNoteEditor<any, I, S>\n): editor is BlockNoteEditor<{ Type: DefaultBlockSchema[BlockType] }, I, S> {\n  return (\n    blockType in editor.schema.blockSchema &&\n    editor.schema.blockSchema[blockType] === defaultBlockSchema[blockType]\n  );\n}\n\nexport function checkDefaultInlineContentTypeInSchema<\n  InlineContentType extends keyof DefaultInlineContentSchema,\n  B extends BlockSchema,\n  S extends StyleSchema\n>(\n  inlineContentType: InlineContentType,\n  editor: BlockNoteEditor<B, any, S>\n): editor is BlockNoteEditor<\n  B,\n  { Type: DefaultInlineContentSchema[InlineContentType] },\n  S\n> {\n  return (\n    inlineContentType in editor.schema.inlineContentSchema &&\n    editor.schema.inlineContentSchema[inlineContentType] ===\n      defaultInlineContentSchema[inlineContentType]\n  );\n}\n\nexport function checkBlockIsDefaultType<\n  BlockType extends keyof DefaultBlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blockType: BlockType,\n  block: Block<any, I, S>,\n  editor: BlockNoteEditor<any, I, S>\n): block is BlockFromConfig<DefaultBlockSchema[BlockType], I, S> {\n  return (\n    block.type === blockType &&\n    block.type in editor.schema.blockSchema &&\n    checkDefaultBlockTypeInSchema(block.type, editor)\n  );\n}\n\nexport function checkBlockIsFileBlock<\n  B extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  block: Block<any, I, S>,\n  editor: BlockNoteEditor<B, I, S>\n): block is BlockFromConfig<FileBlockConfig, I, S> {\n  return (\n    (block.type in editor.schema.blockSchema &&\n      editor.schema.blockSchema[block.type].isFileBlock) ||\n    false\n  );\n}\n\nexport function checkBlockIsFileBlockWithPreview<\n  B extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  block: Block<any, I, S>,\n  editor: BlockNoteEditor<B, I, S>\n): block is BlockFromConfig<\n  FileBlockConfig & {\n    propSchema: Required<FileBlockConfig[\"propSchema\"]>;\n  },\n  I,\n  S\n> {\n  return (\n    (block.type in editor.schema.blockSchema &&\n      editor.schema.blockSchema[block.type].isFileBlock &&\n      \"showPreview\" in editor.schema.blockSchema[block.type].propSchema) ||\n    false\n  );\n}\n\nexport function checkBlockIsFileBlockWithPlaceholder<\n  B extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(block: Block<B, I, S>, editor: BlockNoteEditor<B, I, S>) {\n  const config = editor.schema.blockSchema[block.type];\n  return config.isFileBlock && !block.props.url;\n}\n\nexport function checkBlockTypeHasDefaultProp<\n  Prop extends keyof typeof defaultProps,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  prop: Prop,\n  blockType: string,\n  editor: BlockNoteEditor<any, I, S>\n): editor is BlockNoteEditor<\n  {\n    [BT in string]: {\n      type: BT;\n      propSchema: {\n        [P in Prop]: (typeof defaultProps)[P];\n      };\n      content: \"table\" | \"inline\" | \"none\";\n    };\n  },\n  I,\n  S\n> {\n  return (\n    blockType in editor.schema.blockSchema &&\n    prop in editor.schema.blockSchema[blockType].propSchema &&\n    editor.schema.blockSchema[blockType].propSchema[prop] === defaultProps[prop]\n  );\n}\n\nexport function checkBlockHasDefaultProp<\n  Prop extends keyof typeof defaultProps,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  prop: Prop,\n  block: Block<any, I, S>,\n  editor: BlockNoteEditor<any, I, S>\n): block is BlockFromConfig<\n  {\n    type: string;\n    propSchema: {\n      [P in Prop]: (typeof defaultProps)[P];\n    };\n    content: \"table\" | \"inline\" | \"none\";\n  },\n  I,\n  S\n> {\n  return checkBlockTypeHasDefaultProp(prop, block.type, editor);\n}\n","import { Node } from \"prosemirror-model\";\n\n/**\n * Get a TipTap node by id\n */\nexport function getNodeById(\n  id: string,\n  doc: Node\n): { node: Node; posBeforeNode: number } {\n  let targetNode: Node | undefined = undefined;\n  let posBeforeNode: number | undefined = undefined;\n\n  doc.firstChild!.descendants((node, pos) => {\n    // Skips traversing nodes after node with target ID has been found.\n    if (targetNode) {\n      return false;\n    }\n\n    // Keeps traversing nodes if block with target ID has not been found.\n    if (node.type.name !== \"blockContainer\" || node.attrs.id !== id) {\n      return true;\n    }\n\n    targetNode = node;\n    posBeforeNode = pos + 1;\n\n    return false;\n  });\n\n  if (targetNode === undefined || posBeforeNode === undefined) {\n    throw Error(\"Could not find block in the editor with matching ID.\");\n  }\n\n  return {\n    node: targetNode,\n    posBeforeNode: posBeforeNode,\n  };\n}\n","import { Node } from \"prosemirror-model\";\n\nimport { selectionToInsertionEnd } from \"@tiptap/core\";\nimport { Transaction } from \"prosemirror-state\";\nimport { Block, PartialBlock } from \"../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport {\n  BlockIdentifier,\n  BlockSchema,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../../schema\";\nimport { blockToNode, nodeToBlock } from \"../nodeConversions/nodeConversions\";\nimport { getNodeById } from \"../nodeUtil\";\n\nexport function insertBlocks<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blocksToInsert: PartialBlock<BSchema, I, S>[],\n  referenceBlock: BlockIdentifier,\n  placement: \"before\" | \"after\" | \"nested\" = \"before\",\n  editor: BlockNoteEditor<BSchema, I, S>\n): Block<BSchema, I, S>[] {\n  const id =\n    typeof referenceBlock === \"string\" ? referenceBlock : referenceBlock.id;\n\n  const nodesToInsert: Node[] = [];\n  for (const blockSpec of blocksToInsert) {\n    nodesToInsert.push(\n      blockToNode(blockSpec, editor.pmSchema, editor.schema.styleSchema)\n    );\n  }\n\n  const { node, posBeforeNode } = getNodeById(\n    id,\n    editor._tiptapEditor.state.doc\n  );\n\n  if (placement === \"before\") {\n    editor.dispatch(\n      editor._tiptapEditor.state.tr.insert(posBeforeNode, nodesToInsert)\n    );\n  }\n\n  if (placement === \"after\") {\n    editor.dispatch(\n      editor._tiptapEditor.state.tr.insert(\n        posBeforeNode + node.nodeSize,\n        nodesToInsert\n      )\n    );\n  }\n\n  if (placement === \"nested\") {\n    // Case if block doesn't already have children.\n    if (node.childCount < 2) {\n      const blockGroupNode = editor._tiptapEditor.state.schema.nodes[\n        \"blockGroup\"\n      ].create({}, nodesToInsert);\n\n      editor.dispatch(\n        editor._tiptapEditor.state.tr.insert(\n          posBeforeNode + node.firstChild!.nodeSize + 1,\n          blockGroupNode\n        )\n      );\n    }\n  }\n\n  // Now that the `PartialBlock`s have been converted to nodes, we can\n  // re-convert them into full `Block`s.\n  const insertedBlocks: Block<BSchema, I, S>[] = [];\n  for (const node of nodesToInsert) {\n    insertedBlocks.push(\n      nodeToBlock(\n        node,\n        editor.schema.blockSchema,\n        editor.schema.inlineContentSchema,\n        editor.schema.styleSchema,\n        editor.blockCache\n      )\n    );\n  }\n\n  return insertedBlocks;\n}\n\nexport function updateBlock<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blockToUpdate: BlockIdentifier,\n  update: PartialBlock<BSchema, I, S>,\n  editor: BlockNoteEditor<BSchema, I, S>\n): Block<BSchema, I, S> {\n  const ttEditor = editor._tiptapEditor;\n\n  const id =\n    typeof blockToUpdate === \"string\" ? blockToUpdate : blockToUpdate.id;\n  const { posBeforeNode } = getNodeById(id, ttEditor.state.doc);\n\n  ttEditor.commands.BNUpdateBlock(posBeforeNode + 1, update);\n\n  const blockContainerNode = ttEditor.state.doc\n    .resolve(posBeforeNode + 1)\n    .node();\n\n  return nodeToBlock(\n    blockContainerNode,\n    editor.schema.blockSchema,\n    editor.schema.inlineContentSchema,\n    editor.schema.styleSchema,\n    editor.blockCache\n  );\n}\n\nfunction removeBlocksWithCallback<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blocksToRemove: BlockIdentifier[],\n  editor: BlockNoteEditor<BSchema, I, S>,\n  // Should return new removedSize.\n  callback?: (\n    node: Node,\n    pos: number,\n    tr: Transaction,\n    removedSize: number\n  ) => number\n): Block<BSchema, I, S>[] {\n  const ttEditor = editor._tiptapEditor;\n  const tr = ttEditor.state.tr;\n\n  const idsOfBlocksToRemove = new Set<string>(\n    blocksToRemove.map((block) =>\n      typeof block === \"string\" ? block : block.id\n    )\n  );\n  const removedBlocks: Block<BSchema, I, S>[] = [];\n  let removedSize = 0;\n\n  ttEditor.state.doc.descendants((node, pos) => {\n    // Skips traversing nodes after all target blocks have been removed.\n    if (idsOfBlocksToRemove.size === 0) {\n      return false;\n    }\n\n    // Keeps traversing nodes if block with target ID has not been found.\n    if (\n      node.type.name !== \"blockContainer\" ||\n      !idsOfBlocksToRemove.has(node.attrs.id)\n    ) {\n      return true;\n    }\n\n    // Saves the block that is being deleted.\n    removedBlocks.push(\n      nodeToBlock(\n        node,\n        editor.schema.blockSchema,\n        editor.schema.inlineContentSchema,\n        editor.schema.styleSchema,\n        editor.blockCache\n      )\n    );\n    idsOfBlocksToRemove.delete(node.attrs.id);\n\n    // Removes the block and calculates the change in document size.\n    removedSize = callback?.(node, pos, tr, removedSize) || removedSize;\n    const oldDocSize = tr.doc.nodeSize;\n    tr.delete(pos - removedSize - 1, pos - removedSize + node.nodeSize + 1);\n    const newDocSize = tr.doc.nodeSize;\n    removedSize += oldDocSize - newDocSize;\n\n    return false;\n  });\n\n  // Throws an error if now all blocks could be found.\n  if (idsOfBlocksToRemove.size > 0) {\n    const notFoundIds = [...idsOfBlocksToRemove].join(\"\\n\");\n\n    throw Error(\n      \"Blocks with the following IDs could not be found in the editor: \" +\n        notFoundIds\n    );\n  }\n\n  editor.dispatch(tr);\n\n  return removedBlocks;\n}\n\nexport function removeBlocks<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blocksToRemove: BlockIdentifier[],\n  editor: BlockNoteEditor<BSchema, I, S>\n): Block<BSchema, I, S>[] {\n  return removeBlocksWithCallback(blocksToRemove, editor);\n}\n\nexport function replaceBlocks<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blocksToRemove: BlockIdentifier[],\n  blocksToInsert: PartialBlock<BSchema, I, S>[],\n  editor: BlockNoteEditor<BSchema, I, S>\n): {\n  insertedBlocks: Block<BSchema, I, S>[];\n  removedBlocks: Block<BSchema, I, S>[];\n} {\n  const nodesToInsert: Node[] = [];\n  for (const block of blocksToInsert) {\n    nodesToInsert.push(\n      blockToNode(block, editor.pmSchema, editor.schema.styleSchema)\n    );\n  }\n\n  const idOfFirstBlock =\n    typeof blocksToRemove[0] === \"string\"\n      ? blocksToRemove[0]\n      : blocksToRemove[0].id;\n  const removedBlocks = removeBlocksWithCallback(\n    blocksToRemove,\n    editor,\n    (node, pos, tr, removedSize) => {\n      if (node.attrs.id === idOfFirstBlock) {\n        const oldDocSize = tr.doc.nodeSize;\n        tr.insert(pos, nodesToInsert);\n        const newDocSize = tr.doc.nodeSize;\n\n        return removedSize + oldDocSize - newDocSize;\n      }\n\n      return removedSize;\n    }\n  );\n\n  // Now that the `PartialBlock`s have been converted to nodes, we can\n  // re-convert them into full `Block`s.\n  const insertedBlocks: Block<BSchema, I, S>[] = [];\n  for (const node of nodesToInsert) {\n    insertedBlocks.push(\n      nodeToBlock(\n        node,\n        editor.schema.blockSchema,\n        editor.schema.inlineContentSchema,\n        editor.schema.styleSchema,\n        editor.blockCache\n      )\n    );\n  }\n\n  return { insertedBlocks, removedBlocks };\n}\n\n// similar to tiptap insertContentAt\nexport function insertContentAt<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  position: any,\n  nodes: Node[],\n  editor: BlockNoteEditor<BSchema, I, S>,\n  options: {\n    updateSelection: boolean;\n  } = { updateSelection: true }\n) {\n  const tr = editor._tiptapEditor.state.tr;\n\n  // don’t dispatch an empty fragment because this can lead to strange errors\n  // if (content.toString() === \"<>\") {\n  //   return true;\n  // }\n\n  let { from, to } =\n    typeof position === \"number\"\n      ? { from: position, to: position }\n      : { from: position.from, to: position.to };\n\n  let isOnlyTextContent = true;\n  let isOnlyBlockContent = true;\n  // const nodes = isFragment(content) ? content : [content];\n\n  let text = \"\";\n\n  nodes.forEach((node) => {\n    // check if added node is valid\n    node.check();\n\n    if (isOnlyTextContent && node.isText && node.marks.length === 0) {\n      text += node.text;\n    } else {\n      isOnlyTextContent = false;\n    }\n\n    isOnlyBlockContent = isOnlyBlockContent ? node.isBlock : false;\n  });\n\n  // check if we can replace the wrapping node by\n  // the newly inserted content\n  // example:\n  // replace an empty paragraph by an inserted image\n  // instead of inserting the image below the paragraph\n  if (from === to && isOnlyBlockContent) {\n    const { parent } = tr.doc.resolve(from);\n    const isEmptyTextBlock =\n      parent.isTextblock && !parent.type.spec.code && !parent.childCount;\n\n    if (isEmptyTextBlock) {\n      from -= 1;\n      to += 1;\n    }\n  }\n\n  // if there is only plain text we have to use `insertText`\n  // because this will keep the current marks\n  if (isOnlyTextContent) {\n    // if value is string, we can use it directly\n    // otherwise if it is an array, we have to join it\n    // if (Array.isArray(value)) {\n    //   tr.insertText(value.map((v) => v.text || \"\").join(\"\"), from, to);\n    // } else if (typeof value === \"object\" && !!value && !!value.text) {\n    //   tr.insertText(value.text, from, to);\n    // } else {\n    //   tr.insertText(value as string, from, to);\n    // }\n    tr.insertText(text, from, to);\n  } else {\n    tr.replaceWith(from, to, nodes);\n  }\n\n  // set cursor at end of inserted content\n  if (options.updateSelection) {\n    selectionToInsertionEnd(tr, tr.steps.length - 1, -1);\n  }\n\n  editor.dispatch(tr);\n\n  return true;\n}\n","import { Element as HASTElement, Parent as HASTParent } from \"hast\";\n\n/**\n * Rehype plugin which removes <u> tags. Used to remove underlines before converting HTML to markdown, as Markdown\n * doesn't support underlines.\n */\nexport function removeUnderlines() {\n  const removeUnderlinesHelper = (tree: HASTParent) => {\n    let numChildElements = tree.children.length;\n\n    for (let i = 0; i < numChildElements; i++) {\n      const node = tree.children[i];\n\n      if (node.type === \"element\") {\n        // Recursively removes underlines from child elements.\n        removeUnderlinesHelper(node);\n\n        if ((node as HASTElement).tagName === \"u\") {\n          // Lifts child nodes outside underline element, deletes the underline element, and updates current index &\n          // the number of child elements.\n          if (node.children.length > 0) {\n            tree.children.splice(i, 1, ...node.children);\n\n            const numElementsAdded = node.children.length - 1;\n            numChildElements += numElementsAdded;\n            i += numElementsAdded;\n          } else {\n            tree.children.splice(i, 1);\n\n            numChildElements--;\n            i--;\n          }\n        }\n      }\n    }\n  };\n\n  return removeUnderlinesHelper;\n}\n","import { Element as HASTElement, Parent as HASTParent } from \"hast\";\nimport { esmDependencies } from \"../../../../util/esmDependencies\";\n\n/**\n * Rehype plugin which adds a space after each checkbox input element. This is\n * because remark doesn't add any spaces between the checkbox input and the text\n * itself, but these are needed for correct Markdown syntax.\n */\nexport function addSpacesToCheckboxes() {\n  const deps = esmDependencies;\n\n  if (!deps) {\n    throw new Error(\n      \"simplifyBlocks requires ESM dependencies to be initialized\"\n    );\n  }\n\n  const helper = (tree: HASTParent) => {\n    if (tree.children && \"length\" in tree.children && tree.children.length) {\n      for (let i = tree.children.length - 1; i >= 0; i--) {\n        const child = tree.children[i];\n        const nextChild =\n          i + 1 < tree.children.length ? tree.children[i + 1] : undefined;\n\n        // Checks for paragraph element after checkbox input element.\n        if (\n          child.type === \"element\" &&\n          child.tagName === \"input\" &&\n          child.properties?.type === \"checkbox\" &&\n          nextChild?.type === \"element\" &&\n          nextChild.tagName === \"p\"\n        ) {\n          // Converts paragraph to span, otherwise remark will think it needs to\n          // be on a new line.\n          nextChild.tagName = \"span\";\n          // Adds a space after the checkbox input element.\n          nextChild.children.splice(\n            0,\n            0,\n            deps.hastUtilFromDom.fromDom(\n              document.createTextNode(\" \")\n            ) as HASTElement\n          );\n        } else {\n          helper(child as HASTParent);\n        }\n      }\n    }\n  };\n\n  return helper;\n}\n","import { Schema } from \"prosemirror-model\";\nimport { PartialBlock } from \"../../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../../schema\";\nimport {\n  esmDependencies,\n  initializeESMDependencies,\n} from \"../../../util/esmDependencies\";\nimport { createExternalHTMLExporter } from \"../html/externalHTMLExporter\";\nimport { removeUnderlines } from \"./removeUnderlinesRehypePlugin\";\nimport { addSpacesToCheckboxes } from \"./util/addSpacesToCheckboxesRehypePlugin\";\n\n// Needs to be sync because it's used in drag handler event (SideMenuPlugin)\n// Ideally, call `await initializeESMDependencies()` before calling this function\nexport function cleanHTMLToMarkdown(cleanHTMLString: string) {\n  const deps = esmDependencies;\n\n  if (!deps) {\n    throw new Error(\n      \"cleanHTMLToMarkdown requires ESM dependencies to be initialized\"\n    );\n  }\n\n  const markdownString = deps.unified\n    .unified()\n    .use(deps.rehypeParse.default, { fragment: true })\n    .use(removeUnderlines)\n    .use(addSpacesToCheckboxes)\n    .use(deps.rehypeRemark.default)\n    .use(deps.remarkGfm.default)\n    .use(deps.remarkStringify.default, {\n      handlers: { text: (node) => node.value },\n    })\n    .processSync(cleanHTMLString);\n\n  return markdownString.value as string;\n}\n\nexport async function blocksToMarkdown<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blocks: PartialBlock<BSchema, I, S>[],\n  schema: Schema,\n  editor: BlockNoteEditor<BSchema, I, S>,\n  options: { document?: Document }\n): Promise<string> {\n  await initializeESMDependencies();\n  const exporter = createExternalHTMLExporter(schema, editor);\n  const externalHTML = exporter.exportBlocks(blocks, options);\n\n  return cleanHTMLToMarkdown(externalHTML);\n}\n","function getChildIndex(node: Element) {\n  return Array.prototype.indexOf.call(node.parentElement!.childNodes, node);\n}\n\nfunction isWhitespaceNode(node: Node) {\n  return node.nodeType === 3 && !/\\S/.test(node.nodeValue || \"\");\n}\n\n/**\n * Step 1, Turns:\n *\n * <ul>\n *  <li>item</li>\n *  <li>\n *   <ul>\n *      <li>...</li>\n *      <li>...</li>\n *   </ul>\n * </li>\n *\n * Into:\n * <ul>\n *  <li>item</li>\n *  <ul>\n *      <li>...</li>\n *      <li>...</li>\n *  </ul>\n * </ul>\n *\n */\nfunction liftNestedListsToParent(element: HTMLElement) {\n  element.querySelectorAll(\"li > ul, li > ol\").forEach((list) => {\n    const index = getChildIndex(list);\n    const parentListItem = list.parentElement!;\n    const siblingsAfter = Array.from(parentListItem.childNodes).slice(\n      index + 1\n    );\n    list.remove();\n    siblingsAfter.forEach((sibling) => {\n      sibling.remove();\n    });\n\n    parentListItem.insertAdjacentElement(\"afterend\", list);\n\n    siblingsAfter.reverse().forEach((sibling) => {\n      if (isWhitespaceNode(sibling)) {\n        return;\n      }\n      const siblingContainer = document.createElement(\"li\");\n      siblingContainer.append(sibling);\n      list.insertAdjacentElement(\"afterend\", siblingContainer);\n    });\n    if (parentListItem.childNodes.length === 0) {\n      parentListItem.remove();\n    }\n  });\n}\n\n/**\n * Step 2, Turns (output of liftNestedListsToParent):\n *\n * <li>item</li>\n * <ul>\n *   <li>...</li>\n *   <li>...</li>\n * </ul>\n *\n * Into:\n * <div>\n *  <li>item</li>\n *  <div data-node-type=\"blockGroup\">\n *      <ul>\n *          <li>...</li>\n *          <li>...</li>\n *      </ul>\n *  </div>\n * </div>\n *\n * This resulting format is parsed\n */\nfunction createGroups(element: HTMLElement) {\n  element.querySelectorAll(\"li + ul, li + ol\").forEach((list) => {\n    const listItem = list.previousElementSibling as HTMLElement;\n    const blockContainer = document.createElement(\"div\");\n\n    listItem.insertAdjacentElement(\"afterend\", blockContainer);\n    blockContainer.append(listItem);\n\n    const blockGroup = document.createElement(\"div\");\n    blockGroup.setAttribute(\"data-node-type\", \"blockGroup\");\n    blockContainer.append(blockGroup);\n\n    while (\n      blockContainer.nextElementSibling?.nodeName === \"UL\" ||\n      blockContainer.nextElementSibling?.nodeName === \"OL\"\n    ) {\n      blockGroup.append(blockContainer.nextElementSibling);\n    }\n  });\n}\n\n// prevent XSS, similar to https://github.com/ProseMirror/prosemirror-view/blob/1251b2b412656a2a06263e4187574beb43651273/src/clipboard.ts#L204\n// https://github.com/TypeCellOS/BlockNote/issues/601\nlet _detachedDoc: Document | null = null;\nfunction detachedDoc() {\n  return (\n    _detachedDoc ||\n    (_detachedDoc = document.implementation.createHTMLDocument(\"title\"))\n  );\n}\n\nexport function nestedListsToBlockNoteStructure(\n  elementOrHTML: HTMLElement | string\n) {\n  if (typeof elementOrHTML === \"string\") {\n    const element = detachedDoc().createElement(\"div\");\n    element.innerHTML = elementOrHTML;\n    elementOrHTML = element;\n  }\n  liftNestedListsToParent(elementOrHTML);\n  createGroups(elementOrHTML);\n  return elementOrHTML;\n}\n","import { DOMParser, Schema } from \"prosemirror-model\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../../schema\";\n\nimport { Block } from \"../../../blocks/defaultBlocks\";\nimport { nodeToBlock } from \"../../nodeConversions/nodeConversions\";\nimport { nestedListsToBlockNoteStructure } from \"./util/nestedLists\";\nexport async function HTMLToBlocks<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  html: string,\n  blockSchema: BSchema,\n  icSchema: I,\n  styleSchema: S,\n  pmSchema: Schema\n): Promise<Block<BSchema, I, S>[]> {\n  const htmlNode = nestedListsToBlockNoteStructure(html);\n  const parser = DOMParser.fromSchema(pmSchema);\n\n  // Other approach might be to use\n  // const doc = pmSchema.nodes[\"doc\"].createAndFill()!;\n  // and context: doc.resolve(3),\n\n  const parentNode = parser.parse(htmlNode, {\n    topNode: pmSchema.nodes[\"blockGroup\"].create(),\n  });\n\n  const blocks: Block<BSchema, I, S>[] = [];\n\n  for (let i = 0; i < parentNode.childCount; i++) {\n    blocks.push(\n      nodeToBlock(parentNode.child(i), blockSchema, icSchema, styleSchema)\n    );\n  }\n\n  return blocks;\n}\n","import { Schema } from \"prosemirror-model\";\n\nimport { Block } from \"../../../blocks/defaultBlocks\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../../schema\";\nimport { initializeESMDependencies } from \"../../../util/esmDependencies\";\nimport { HTMLToBlocks } from \"../html/parseHTML\";\n\n// modified version of https://github.com/syntax-tree/mdast-util-to-hast/blob/main/lib/handlers/code.js\n// that outputs a data-language attribute instead of a CSS class (e.g.: language-typescript)\nfunction code(state: any, node: any) {\n  const value = node.value ? node.value + \"\\n\" : \"\";\n  /** @type {Properties} */\n  const properties: any = {};\n\n  if (node.lang) {\n    // changed line\n    properties[\"data-language\"] = node.lang;\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result: any = {\n    type: \"element\",\n    tagName: \"code\",\n    properties,\n    children: [{ type: \"text\", value }],\n  };\n\n  if (node.meta) {\n    result.data = { meta: node.meta };\n  }\n\n  state.patch(node, result);\n  result = state.applyData(node, result);\n\n  // Create `<pre>`.\n  result = {\n    type: \"element\",\n    tagName: \"pre\",\n    properties: {},\n    children: [result],\n  };\n  state.patch(node, result);\n  return result;\n}\n\nexport async function markdownToBlocks<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  markdown: string,\n  blockSchema: BSchema,\n  icSchema: I,\n  styleSchema: S,\n  pmSchema: Schema\n): Promise<Block<BSchema, I, S>[]> {\n  const deps = await initializeESMDependencies();\n  const htmlString = deps.unified\n    .unified()\n    .use(deps.remarkParse.default)\n    .use(deps.remarkGfm.default)\n    .use(deps.remarkRehype.default, {\n      handlers: {\n        ...(deps.remarkRehype.defaultHandlers as any),\n        code,\n      },\n    })\n    .use(deps.rehypeStringify.default)\n    .processSync(markdown);\n\n  return HTMLToBlocks(\n    htmlString.value as string,\n    blockSchema,\n    icSchema,\n    styleSchema,\n    pmSchema\n  );\n}\n","// from https://raw.githubusercontent.com/ueberdosis/tiptap/develop/packages/core/src/EventEmitter.ts (MIT)\n\ntype StringKeyOf<T> = Extract<keyof T, string>;\ntype CallbackType<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>\n> = T[EventName] extends any[] ? T[EventName] : [T[EventName]];\ntype CallbackFunction<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>\n> = (...props: CallbackType<T, EventName>) => any;\n\nexport class EventEmitter<T extends Record<string, any>> {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private callbacks: { [key: string]: Function[] } = {};\n\n  public on<EventName extends StringKeyOf<T>>(\n    event: EventName,\n    fn: CallbackFunction<T, EventName>\n  ) {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = [];\n    }\n\n    this.callbacks[event].push(fn);\n\n    return () => this.off(event, fn);\n  }\n\n  protected emit<EventName extends StringKeyOf<T>>(\n    event: EventName,\n    ...args: CallbackType<T, EventName>\n  ) {\n    const callbacks = this.callbacks[event];\n\n    if (callbacks) {\n      callbacks.forEach((callback) => callback.apply(this, args));\n    }\n  }\n\n  public off<EventName extends StringKeyOf<T>>(\n    event: EventName,\n    fn?: CallbackFunction<T, EventName>\n  ) {\n    const callbacks = this.callbacks[event];\n\n    if (callbacks) {\n      if (fn) {\n        this.callbacks[event] = callbacks.filter((callback) => callback !== fn);\n      } else {\n        delete this.callbacks[event];\n      }\n    }\n  }\n\n  protected removeAllListeners(): void {\n    this.callbacks = {};\n  }\n}\n","import { EditorState, Plugin, PluginKey, PluginView } from \"prosemirror-state\";\nimport { EditorView } from \"prosemirror-view\";\n\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { UiElementPosition } from \"../../extensions-shared/UiElementPosition\";\nimport type {\n  BlockFromConfig,\n  FileBlockConfig,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../../schema\";\nimport { EventEmitter } from \"../../util/EventEmitter\";\n\nexport type FilePanelState<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> = UiElementPosition & {\n  // TODO: This typing is not quite right (children should be from BSchema)\n  block: BlockFromConfig<FileBlockConfig, I, S>;\n};\n\nexport class FilePanelView<I extends InlineContentSchema, S extends StyleSchema>\n  implements PluginView\n{\n  public state?: FilePanelState<I, S>;\n  public emitUpdate: () => void;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<\n      Record<string, FileBlockConfig>,\n      I,\n      S\n    >,\n    private readonly pluginKey: PluginKey,\n    private readonly pmView: EditorView,\n    emitUpdate: (state: FilePanelState<I, S>) => void\n  ) {\n    this.emitUpdate = () => {\n      if (!this.state) {\n        throw new Error(\"Attempting to update uninitialized file panel\");\n      }\n\n      emitUpdate(this.state);\n    };\n\n    pmView.dom.addEventListener(\"mousedown\", this.mouseDownHandler);\n    pmView.dom.addEventListener(\"dragstart\", this.dragstartHandler);\n\n    // Setting capture=true ensures that any parent container of the editor that\n    // gets scrolled will trigger the scroll event. Scroll events do not bubble\n    // and so won't propagate to the document by default.\n    pmView.root.addEventListener(\"scroll\", this.scrollHandler, true);\n  }\n\n  mouseDownHandler = () => {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  // For dragging the whole editor.\n  dragstartHandler = () => {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  scrollHandler = () => {\n    if (this.state?.show) {\n      const blockElement = this.pmView.root.querySelector(\n        `[data-node-type=\"blockContainer\"][data-id=\"${this.state.block.id}\"]`\n      );\n      if (!blockElement) {\n        return;\n      }\n      this.state.referencePos = blockElement.getBoundingClientRect();\n      this.emitUpdate();\n    }\n  };\n\n  update(view: EditorView, prevState: EditorState) {\n    const pluginState: {\n      block: BlockFromConfig<FileBlockConfig, I, S>;\n    } = this.pluginKey.getState(view.state);\n\n    if (!this.state?.show && pluginState.block && this.editor.isEditable) {\n      const blockElement = this.pmView.root.querySelector(\n        `[data-node-type=\"blockContainer\"][data-id=\"${pluginState.block.id}\"]`\n      );\n      if (!blockElement) {\n        return;\n      }\n      this.state = {\n        show: true,\n        referencePos: blockElement.getBoundingClientRect(),\n        block: pluginState.block,\n      };\n\n      this.emitUpdate();\n\n      return;\n    }\n\n    if (\n      !view.state.selection.eq(prevState.selection) ||\n      !view.state.doc.eq(prevState.doc) ||\n      !this.editor.isEditable\n    ) {\n      if (this.state?.show) {\n        this.state.show = false;\n\n        this.emitUpdate();\n      }\n    }\n  }\n\n  closeMenu = () => {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mousedown\", this.mouseDownHandler);\n\n    this.pmView.dom.removeEventListener(\"dragstart\", this.dragstartHandler);\n\n    this.pmView.root.removeEventListener(\"scroll\", this.scrollHandler, true);\n  }\n}\n\nconst filePanelPluginKey = new PluginKey(\"FilePanelPlugin\");\n\nexport class FilePanelProsemirrorPlugin<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> extends EventEmitter<any> {\n  private view: FilePanelView<I, S> | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(editor: BlockNoteEditor<Record<string, FileBlockConfig>, I, S>) {\n    super();\n    this.plugin = new Plugin<{\n      block: BlockFromConfig<FileBlockConfig, I, S> | undefined;\n    }>({\n      key: filePanelPluginKey,\n      view: (editorView) => {\n        this.view = new FilePanelView<I, S>(\n          editor,\n          filePanelPluginKey,\n          editorView,\n          (state) => {\n            this.emit(\"update\", state);\n          }\n        );\n        return this.view;\n      },\n      props: {\n        handleKeyDown: (_view, event: KeyboardEvent) => {\n          if (event.key === \"Escape\" && this.shown) {\n            this.view?.closeMenu();\n            return true;\n          }\n          return false;\n        },\n      },\n      state: {\n        init: () => {\n          return {\n            block: undefined,\n          };\n        },\n        apply: (transaction) => {\n          const block: BlockFromConfig<FileBlockConfig, I, S> | undefined =\n            transaction.getMeta(filePanelPluginKey)?.block;\n\n          return {\n            block,\n          };\n        },\n      },\n    });\n  }\n\n  public get shown() {\n    return this.view?.state?.show || false;\n  }\n\n  public onUpdate(callback: (state: FilePanelState<I, S>) => void) {\n    return this.on(\"update\", callback);\n  }\n\n  public closeMenu = () => this.view?.closeMenu();\n}\n","import { isNodeSelection, isTextSelection, posToDOMRect } from \"@tiptap/core\";\nimport { EditorState, Plugin, PluginKey, PluginView } from \"prosemirror-state\";\nimport { EditorView } from \"prosemirror-view\";\n\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { UiElementPosition } from \"../../extensions-shared/UiElementPosition\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../schema\";\nimport { EventEmitter } from \"../../util/EventEmitter\";\n\nexport type FormattingToolbarState = UiElementPosition;\n\nexport class FormattingToolbarView implements PluginView {\n  public state?: FormattingToolbarState;\n  public emitUpdate: () => void;\n\n  public preventHide = false;\n  public preventShow = false;\n\n  public shouldShow: (props: {\n    view: EditorView;\n    state: EditorState;\n    from: number;\n    to: number;\n  }) => boolean = ({ state, from, to, view }) => {\n    const { doc, selection } = state;\n    const { empty } = selection;\n\n    // Sometime check for `empty` is not enough.\n    // Doubleclick an empty paragraph returns a node size of 2.\n    // So we check also for an empty text size.\n    const isEmptyTextBlock =\n      !doc.textBetween(from, to).length && isTextSelection(state.selection);\n\n    // check view.hasFocus so that the toolbar doesn't show up when the editor is not focused or when for example a code block is focused\n    return !(!view.hasFocus() || empty || isEmptyTextBlock);\n  };\n\n  constructor(\n    private readonly editor: BlockNoteEditor<\n      BlockSchema,\n      InlineContentSchema,\n      StyleSchema\n    >,\n    private readonly pmView: EditorView,\n    emitUpdate: (state: FormattingToolbarState) => void\n  ) {\n    this.emitUpdate = () => {\n      if (!this.state) {\n        throw new Error(\n          \"Attempting to update uninitialized formatting toolbar\"\n        );\n      }\n\n      emitUpdate(this.state);\n    };\n\n    pmView.dom.addEventListener(\"mousedown\", this.viewMousedownHandler);\n    pmView.dom.addEventListener(\"mouseup\", this.viewMouseupHandler);\n    pmView.dom.addEventListener(\"dragstart\", this.dragHandler);\n    pmView.dom.addEventListener(\"dragover\", this.dragHandler);\n    pmView.dom.addEventListener(\"blur\", this.blurHandler);\n\n    // Setting capture=true ensures that any parent container of the editor that\n    // gets scrolled will trigger the scroll event. Scroll events do not bubble\n    // and so won't propagate to the document by default.\n    pmView.root.addEventListener(\"scroll\", this.scrollHandler, true);\n  }\n\n  blurHandler = (event: FocusEvent) => {\n    if (this.preventHide) {\n      this.preventHide = false;\n\n      return;\n    }\n\n    const editorWrapper = this.pmView.dom.parentElement!;\n\n    // Checks if the focus is moving to an element outside the editor. If it is,\n    // the toolbar is hidden.\n    if (\n      // An element is clicked.\n      event &&\n      event.relatedTarget &&\n      // Element is inside the editor.\n      (editorWrapper === (event.relatedTarget as Node) ||\n        editorWrapper.contains(event.relatedTarget as Node) ||\n        (event.relatedTarget as HTMLElement).matches(\n          \".bn-ui-container, .bn-ui-container *\"\n        ))\n    ) {\n      return;\n    }\n\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  viewMousedownHandler = () => {\n    this.preventShow = true;\n  };\n\n  viewMouseupHandler = () => {\n    this.preventShow = false;\n    setTimeout(() => this.update(this.pmView));\n  };\n\n  // For dragging the whole editor.\n  dragHandler = () => {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  scrollHandler = () => {\n    if (this.state?.show) {\n      this.state.referencePos = this.getSelectionBoundingBox();\n      this.emitUpdate();\n    }\n  };\n\n  update(view: EditorView, oldState?: EditorState) {\n    // Delays the update to handle edge case with drag and drop, where the view\n    // is blurred asynchronously and happens only after the state update.\n    // Wrapping in a setTimeout gives enough time to wait for the blur event to\n    // occur before updating the toolbar.\n    const { state, composing } = view;\n    const { doc, selection } = state;\n    const isSame =\n      oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection);\n\n    if (composing || isSame) {\n      return;\n    }\n\n    // support for CellSelections\n    const { ranges } = selection;\n    const from = Math.min(...ranges.map((range) => range.$from.pos));\n    const to = Math.max(...ranges.map((range) => range.$to.pos));\n\n    const shouldShow = this.shouldShow?.({\n      view,\n      state,\n      from,\n      to,\n    });\n\n    // Checks if menu should be shown/updated.\n    if (!this.preventShow && (shouldShow || this.preventHide)) {\n      // Unlike other UI elements, we don't prevent the formatting toolbar from\n      // showing when the editor is not editable. This is because some buttons,\n      // e.g. the download file button, should still be accessible. Therefore,\n      // logic for hiding when the editor is non-editable is handled\n      // individually in each button.\n      this.state = {\n        show: true,\n        referencePos: this.getSelectionBoundingBox(),\n      };\n\n      this.emitUpdate();\n\n      return;\n    }\n\n    // Checks if menu should be hidden.\n    if (\n      this.state?.show &&\n      !this.preventHide &&\n      (!shouldShow || this.preventShow || !this.editor.isEditable)\n    ) {\n      this.state.show = false;\n      this.emitUpdate();\n\n      return;\n    }\n  }\n\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mousedown\", this.viewMousedownHandler);\n    this.pmView.dom.removeEventListener(\"mouseup\", this.viewMouseupHandler);\n    this.pmView.dom.removeEventListener(\"dragstart\", this.dragHandler);\n    this.pmView.dom.removeEventListener(\"dragover\", this.dragHandler);\n    this.pmView.dom.removeEventListener(\"blur\", this.blurHandler);\n\n    this.pmView.root.removeEventListener(\"scroll\", this.scrollHandler, true);\n  }\n\n  closeMenu = () => {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  getSelectionBoundingBox() {\n    const { state } = this.pmView;\n    const { selection } = state;\n\n    // support for CellSelections\n    const { ranges } = selection;\n    const from = Math.min(...ranges.map((range) => range.$from.pos));\n    const to = Math.max(...ranges.map((range) => range.$to.pos));\n\n    if (isNodeSelection(selection)) {\n      const node = this.pmView.nodeDOM(from) as HTMLElement;\n      if (node) {\n        return node.getBoundingClientRect();\n      }\n    }\n\n    return posToDOMRect(this.pmView, from, to);\n  }\n}\n\nexport const formattingToolbarPluginKey = new PluginKey(\n  \"FormattingToolbarPlugin\"\n);\n\nexport class FormattingToolbarProsemirrorPlugin extends EventEmitter<any> {\n  private view: FormattingToolbarView | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(editor: BlockNoteEditor<any, any, any>) {\n    super();\n    this.plugin = new Plugin({\n      key: formattingToolbarPluginKey,\n      view: (editorView) => {\n        this.view = new FormattingToolbarView(editor, editorView, (state) => {\n          this.emit(\"update\", state);\n        });\n        return this.view;\n      },\n      props: {\n        handleKeyDown: (_view, event: KeyboardEvent) => {\n          if (event.key === \"Escape\" && this.shown) {\n            this.view!.closeMenu();\n            return true;\n          }\n          return false;\n        },\n      },\n    });\n  }\n\n  public get shown() {\n    return this.view?.state?.show || false;\n  }\n\n  public onUpdate(callback: (state: FormattingToolbarState) => void) {\n    return this.on(\"update\", callback);\n  }\n\n  public closeMenu = () => this.view!.closeMenu();\n}\n","import { getMarkRange, posToDOMRect, Range } from \"@tiptap/core\";\nimport { EditorView } from \"@tiptap/pm/view\";\nimport { Mark } from \"prosemirror-model\";\nimport { Plugin, PluginKey, PluginView } from \"prosemirror-state\";\n\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { UiElementPosition } from \"../../extensions-shared/UiElementPosition\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../schema\";\nimport { EventEmitter } from \"../../util/EventEmitter\";\n\nexport type LinkToolbarState = UiElementPosition & {\n  // The hovered link's URL, and the text it's displayed with in the\n  // editor.\n  url: string;\n  text: string;\n};\n\nclass LinkToolbarView implements PluginView {\n  public state?: LinkToolbarState;\n  public emitUpdate: () => void;\n\n  menuUpdateTimer: ReturnType<typeof setTimeout> | undefined;\n  startMenuUpdateTimer: () => void;\n  stopMenuUpdateTimer: () => void;\n\n  mouseHoveredLinkMark: Mark | undefined;\n  mouseHoveredLinkMarkRange: Range | undefined;\n\n  keyboardHoveredLinkMark: Mark | undefined;\n  keyboardHoveredLinkMarkRange: Range | undefined;\n\n  linkMark: Mark | undefined;\n  linkMarkRange: Range | undefined;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<any, any, any>,\n    private readonly pmView: EditorView,\n    emitUpdate: (state: LinkToolbarState) => void\n  ) {\n    this.emitUpdate = () => {\n      if (!this.state) {\n        throw new Error(\"Attempting to update uninitialized link toolbar\");\n      }\n\n      emitUpdate(this.state);\n    };\n\n    this.startMenuUpdateTimer = () => {\n      this.menuUpdateTimer = setTimeout(() => {\n        this.update();\n      }, 250);\n    };\n\n    this.stopMenuUpdateTimer = () => {\n      if (this.menuUpdateTimer) {\n        clearTimeout(this.menuUpdateTimer);\n        this.menuUpdateTimer = undefined;\n      }\n\n      return false;\n    };\n\n    this.pmView.dom.addEventListener(\"mouseover\", this.mouseOverHandler);\n    this.pmView.root.addEventListener(\n      \"click\",\n      this.clickHandler as EventListener,\n      true\n    );\n\n    // Setting capture=true ensures that any parent container of the editor that\n    // gets scrolled will trigger the scroll event. Scroll events do not bubble\n    // and so won't propagate to the document by default.\n    this.pmView.root.addEventListener(\"scroll\", this.scrollHandler, true);\n  }\n\n  mouseOverHandler = (event: MouseEvent) => {\n    // Resets the link mark currently hovered by the mouse cursor.\n    this.mouseHoveredLinkMark = undefined;\n    this.mouseHoveredLinkMarkRange = undefined;\n\n    this.stopMenuUpdateTimer();\n\n    if (\n      event.target instanceof HTMLAnchorElement &&\n      event.target.nodeName === \"A\"\n    ) {\n      // Finds link mark at the hovered element's position to update mouseHoveredLinkMark and\n      // mouseHoveredLinkMarkRange.\n      const hoveredLinkElement = event.target;\n      const posInHoveredLinkMark =\n        this.pmView.posAtDOM(hoveredLinkElement, 0) + 1;\n      const resolvedPosInHoveredLinkMark =\n        this.pmView.state.doc.resolve(posInHoveredLinkMark);\n      const marksAtPos = resolvedPosInHoveredLinkMark.marks();\n\n      for (const mark of marksAtPos) {\n        if (\n          mark.type.name === this.pmView.state.schema.mark(\"link\").type.name\n        ) {\n          this.mouseHoveredLinkMark = mark;\n          this.mouseHoveredLinkMarkRange =\n            getMarkRange(resolvedPosInHoveredLinkMark, mark.type, mark.attrs) ||\n            undefined;\n\n          break;\n        }\n      }\n    }\n\n    this.startMenuUpdateTimer();\n\n    return false;\n  };\n\n  clickHandler = (event: MouseEvent) => {\n    const editorWrapper = this.pmView.dom.parentElement!;\n\n    if (\n      // Toolbar is open.\n      this.linkMark &&\n      // An element is clicked.\n      event &&\n      event.target &&\n      // The clicked element is not the editor.\n      !(\n        editorWrapper === (event.target as Node) ||\n        editorWrapper.contains(event.target as Node)\n      )\n    ) {\n      if (this.state?.show) {\n        this.state.show = false;\n        this.emitUpdate();\n      }\n    }\n  };\n\n  scrollHandler = () => {\n    if (this.linkMark !== undefined) {\n      if (this.state?.show) {\n        this.state.referencePos = posToDOMRect(\n          this.pmView,\n          this.linkMarkRange!.from,\n          this.linkMarkRange!.to\n        );\n        this.emitUpdate();\n      }\n    }\n  };\n\n  editLink(url: string, text: string) {\n    const tr = this.pmView.state.tr.insertText(\n      text,\n      this.linkMarkRange!.from,\n      this.linkMarkRange!.to\n    );\n    tr.addMark(\n      this.linkMarkRange!.from,\n      this.linkMarkRange!.from + text.length,\n      this.pmView.state.schema.mark(\"link\", { href: url })\n    );\n    this.editor.dispatch(tr);\n    this.pmView.focus();\n\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  }\n\n  deleteLink() {\n    this.editor.dispatch(\n      this.pmView.state.tr\n        .removeMark(\n          this.linkMarkRange!.from,\n          this.linkMarkRange!.to,\n          this.linkMark!.type\n        )\n        .setMeta(\"preventAutolink\", true)\n    );\n    this.pmView.focus();\n\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  }\n\n  update() {\n    if (!this.pmView.hasFocus()) {\n      return;\n    }\n\n    // Saves the currently hovered link mark before it's updated.\n    const prevLinkMark = this.linkMark;\n\n    // Resets the currently hovered link mark.\n    this.linkMark = undefined;\n    this.linkMarkRange = undefined;\n\n    // Resets the link mark currently hovered by the keyboard cursor.\n    this.keyboardHoveredLinkMark = undefined;\n    this.keyboardHoveredLinkMarkRange = undefined;\n\n    // Finds link mark at the editor selection's position to update keyboardHoveredLinkMark and\n    // keyboardHoveredLinkMarkRange.\n    if (this.pmView.state.selection.empty) {\n      const marksAtPos = this.pmView.state.selection.$from.marks();\n\n      for (const mark of marksAtPos) {\n        if (\n          mark.type.name === this.pmView.state.schema.mark(\"link\").type.name\n        ) {\n          this.keyboardHoveredLinkMark = mark;\n          this.keyboardHoveredLinkMarkRange =\n            getMarkRange(\n              this.pmView.state.selection.$from,\n              mark.type,\n              mark.attrs\n            ) || undefined;\n\n          break;\n        }\n      }\n    }\n\n    if (this.mouseHoveredLinkMark) {\n      this.linkMark = this.mouseHoveredLinkMark;\n      this.linkMarkRange = this.mouseHoveredLinkMarkRange;\n    }\n\n    // Keyboard cursor position takes precedence over mouse hovered link.\n    if (this.keyboardHoveredLinkMark) {\n      this.linkMark = this.keyboardHoveredLinkMark;\n      this.linkMarkRange = this.keyboardHoveredLinkMarkRange;\n    }\n\n    if (this.linkMark && this.editor.isEditable) {\n      this.state = {\n        show: true,\n        referencePos: posToDOMRect(\n          this.pmView,\n          this.linkMarkRange!.from,\n          this.linkMarkRange!.to\n        ),\n        url: this.linkMark!.attrs.href,\n        text: this.pmView.state.doc.textBetween(\n          this.linkMarkRange!.from,\n          this.linkMarkRange!.to\n        ),\n      };\n      this.emitUpdate();\n\n      return;\n    }\n\n    // Hides menu.\n    if (\n      this.state?.show &&\n      prevLinkMark &&\n      (!this.linkMark || !this.editor.isEditable)\n    ) {\n      this.state.show = false;\n      this.emitUpdate();\n\n      return;\n    }\n  }\n\n  closeMenu = () => {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mouseover\", this.mouseOverHandler);\n    this.pmView.root.removeEventListener(\"scroll\", this.scrollHandler, true);\n    this.pmView.root.removeEventListener(\n      \"click\",\n      this.clickHandler as EventListener,\n      true\n    );\n  }\n}\n\nexport const linkToolbarPluginKey = new PluginKey(\"LinkToolbarPlugin\");\n\nexport class LinkToolbarProsemirrorPlugin<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> extends EventEmitter<any> {\n  private view: LinkToolbarView | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(editor: BlockNoteEditor<BSchema, I, S>) {\n    super();\n    this.plugin = new Plugin({\n      key: linkToolbarPluginKey,\n      view: (editorView) => {\n        this.view = new LinkToolbarView(editor, editorView, (state) => {\n          this.emit(\"update\", state);\n        });\n        return this.view;\n      },\n      props: {\n        handleKeyDown: (_view, event: KeyboardEvent) => {\n          if (event.key === \"Escape\" && this.shown) {\n            this.view!.closeMenu();\n            return true;\n          }\n          return false;\n        },\n      },\n    });\n  }\n\n  public onUpdate(callback: (state: LinkToolbarState) => void) {\n    return this.on(\"update\", callback);\n  }\n\n  /**\n   * Edit the currently hovered link.\n   */\n  public editLink = (url: string, text: string) => {\n    this.view!.editLink(url, text);\n  };\n\n  /**\n   * Delete the currently hovered link.\n   */\n  public deleteLink = () => {\n    this.view!.deleteLink();\n  };\n\n  /**\n   * When hovering on/off links using the mouse cursor, the link toolbar will\n   * open & close with a delay.\n   *\n   * This function starts the delay timer, and should be used for when the mouse\n   * cursor enters the link toolbar.\n   */\n  public startHideTimer = () => {\n    this.view!.startMenuUpdateTimer();\n  };\n\n  /**\n   * When hovering on/off links using the mouse cursor, the link toolbar will\n   * open & close with a delay.\n   *\n   * This function stops the delay timer, and should be used for when the mouse\n   * cursor exits the link toolbar.\n   */\n  public stopHideTimer = () => {\n    this.view!.stopMenuUpdateTimer();\n  };\n\n  public get shown() {\n    return this.view?.state?.show || false;\n  }\n\n  public closeMenu = () => this.view!.closeMenu();\n}\n","import { Fragment, Node, ResolvedPos, Slice } from \"prosemirror-model\";\nimport { Selection } from \"prosemirror-state\";\nimport { Mappable } from \"prosemirror-transform\";\n\n/**\n * This class represents an editor selection which spans multiple nodes/blocks. It's currently only used to allow users\n * to drag multiple blocks at the same time. Expects the selection anchor and head to be between nodes, i.e. just before\n * the first target node and just after the last, and that anchor and head are at the same nesting level.\n *\n * Partially based on ProseMirror's NodeSelection implementation:\n * (https://github.com/ProseMirror/prosemirror-state/blob/master/src/selection.ts)\n * MultipleNodeSelection differs from NodeSelection in the following ways:\n * 1. Stores which nodes are included in the selection instead of just a single node.\n * 2. Already expects the selection to start just before the first target node and ends just after the last, while a\n * NodeSelection automatically sets both anchor and head to just before the single target node.\n */\nexport class MultipleNodeSelection extends Selection {\n  nodes: Array<Node>;\n\n  constructor($anchor: ResolvedPos, $head: ResolvedPos) {\n    super($anchor, $head);\n\n    // Parent is at the same nesting level as anchor/head since they are just before/ just after target nodes.\n    const parentNode = $anchor.node();\n\n    this.nodes = [];\n    $anchor.doc.nodesBetween($anchor.pos, $head.pos, (node, _pos, parent) => {\n      if (parent !== null && parent.eq(parentNode)) {\n        this.nodes.push(node);\n        return false;\n      }\n      return;\n    });\n  }\n\n  static create(doc: Node, from: number, to = from): MultipleNodeSelection {\n    return new MultipleNodeSelection(doc.resolve(from), doc.resolve(to));\n  }\n\n  content(): Slice {\n    return new Slice(Fragment.from(this.nodes), 0, 0);\n  }\n\n  eq(selection: Selection): boolean {\n    if (!(selection instanceof MultipleNodeSelection)) {\n      return false;\n    }\n\n    if (this.nodes.length !== selection.nodes.length) {\n      return false;\n    }\n\n    if (this.from !== selection.from || this.to !== selection.to) {\n      return false;\n    }\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      if (!this.nodes[i].eq(selection.nodes[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  map(doc: Node, mapping: Mappable): Selection {\n    const fromResult = mapping.mapResult(this.from);\n    const toResult = mapping.mapResult(this.to);\n\n    if (toResult.deleted) {\n      return Selection.near(doc.resolve(fromResult.pos));\n    }\n\n    if (fromResult.deleted) {\n      return Selection.near(doc.resolve(toResult.pos));\n    }\n\n    return new MultipleNodeSelection(\n      doc.resolve(fromResult.pos),\n      doc.resolve(toResult.pos)\n    );\n  }\n\n  toJSON(): any {\n    return { type: \"node\", anchor: this.anchor, head: this.head };\n  }\n}\n","import { PluginView } from \"@tiptap/pm/state\";\nimport { Node } from \"prosemirror-model\";\nimport { NodeSelection, Plugin, PluginKey, Selection } from \"prosemirror-state\";\nimport { EditorView } from \"prosemirror-view\";\nimport * as pmView from \"prosemirror-view\";\n\nimport { createExternalHTMLExporter } from \"../../api/exporters/html/externalHTMLExporter\";\nimport { cleanHTMLToMarkdown } from \"../../api/exporters/markdown/markdownExporter\";\nimport { getBlockInfoFromPos } from \"../../api/getBlockInfoFromPos\";\nimport { Block } from \"../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { UiElementPosition } from \"../../extensions-shared/UiElementPosition\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../schema\";\nimport { EventEmitter } from \"../../util/EventEmitter\";\nimport { initializeESMDependencies } from \"../../util/esmDependencies\";\nimport { MultipleNodeSelection } from \"./MultipleNodeSelection\";\n\nlet dragImageElement: Element | undefined;\n\nexport type SideMenuState<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> = UiElementPosition & {\n  // The block that the side menu is attached to.\n  block: Block<BSchema, I, S>;\n};\n\nexport function getDraggableBlockFromElement(\n  element: Element,\n  view: EditorView\n) {\n  while (\n    element &&\n    element.parentElement &&\n    element.parentElement !== view.dom &&\n    element.getAttribute?.(\"data-node-type\") !== \"blockContainer\"\n  ) {\n    element = element.parentElement;\n  }\n  if (element.getAttribute?.(\"data-node-type\") !== \"blockContainer\") {\n    return undefined;\n  }\n  return { node: element as HTMLElement, id: element.getAttribute(\"data-id\")! };\n}\n\nfunction blockPositionFromElement(element: Element, view: EditorView) {\n  const block = getDraggableBlockFromElement(element, view);\n\n  if (block && block.node.nodeType === 1) {\n    // TODO: this uses undocumented PM APIs? do we need this / let's add docs?\n    const docView = (view as any).docView;\n    const desc = docView.nearestDesc(block.node, true);\n    if (!desc || desc === docView) {\n      return null;\n    }\n    return desc.posBefore;\n  }\n  return null;\n}\n\nfunction blockPositionsFromSelection(selection: Selection, doc: Node) {\n  // Absolute positions just before the first block spanned by the selection, and just after the last block. Having the\n  // selection start and end just before and just after the target blocks ensures no whitespace/line breaks are left\n  // behind after dragging & dropping them.\n  let beforeFirstBlockPos: number;\n  let afterLastBlockPos: number;\n\n  // Even the user starts dragging blocks but drops them in the same place, the selection will still be moved just\n  // before & just after the blocks spanned by the selection, and therefore doesn't need to change if they try to drag\n  // the same blocks again. If this happens, the anchor & head move out of the block content node they were originally\n  // in. If the anchor should update but the head shouldn't and vice versa, it means the user selection is outside a\n  // block content node, which should never happen.\n  const selectionStartInBlockContent =\n    doc.resolve(selection.from).node().type.spec.group === \"blockContent\";\n  const selectionEndInBlockContent =\n    doc.resolve(selection.to).node().type.spec.group === \"blockContent\";\n\n  // Ensures that entire outermost nodes are selected if the selection spans multiple nesting levels.\n  const minDepth = Math.min(selection.$anchor.depth, selection.$head.depth);\n\n  if (selectionStartInBlockContent && selectionEndInBlockContent) {\n    // Absolute positions at the start of the first block in the selection and at the end of the last block. User\n    // selections will always start and end in block content nodes, but we want the start and end positions of their\n    // parent block nodes, which is why minDepth - 1 is used.\n    const startFirstBlockPos = selection.$from.start(minDepth - 1);\n    const endLastBlockPos = selection.$to.end(minDepth - 1);\n\n    // Shifting start and end positions by one moves them just outside the first and last selected blocks.\n    beforeFirstBlockPos = doc.resolve(startFirstBlockPos - 1).pos;\n    afterLastBlockPos = doc.resolve(endLastBlockPos + 1).pos;\n  } else {\n    beforeFirstBlockPos = selection.from;\n    afterLastBlockPos = selection.to;\n  }\n\n  return { from: beforeFirstBlockPos, to: afterLastBlockPos };\n}\n\nfunction setDragImage(view: EditorView, from: number, to = from) {\n  if (from === to) {\n    // Moves to position to be just after the first (and only) selected block.\n    to += view.state.doc.resolve(from + 1).node().nodeSize;\n  }\n\n  // Parent element is cloned to remove all unselected children without affecting the editor content.\n  const parentClone = view.domAtPos(from).node.cloneNode(true) as Element;\n  const parent = view.domAtPos(from).node as Element;\n\n  const getElementIndex = (parentElement: Element, targetElement: Element) =>\n    Array.prototype.indexOf.call(parentElement.children, targetElement);\n\n  const firstSelectedBlockIndex = getElementIndex(\n    parent,\n    // Expects from position to be just before the first selected block.\n    view.domAtPos(from + 1).node.parentElement!\n  );\n  const lastSelectedBlockIndex = getElementIndex(\n    parent,\n    // Expects to position to be just after the last selected block.\n    view.domAtPos(to - 1).node.parentElement!\n  );\n\n  for (let i = parent.childElementCount - 1; i >= 0; i--) {\n    if (i > lastSelectedBlockIndex || i < firstSelectedBlockIndex) {\n      parentClone.removeChild(parentClone.children[i]);\n    }\n  }\n\n  // dataTransfer.setDragImage(element) only works if element is attached to the DOM.\n  unsetDragImage(view.root);\n  dragImageElement = parentClone;\n\n  // TODO: This is hacky, need a better way of assigning classes to the editor so that they can also be applied to the\n  //  drag preview.\n  const classes = view.dom.className.split(\" \");\n  const inheritedClasses = classes\n    .filter(\n      (className) =>\n        className !== \"ProseMirror\" &&\n        className !== \"bn-root\" &&\n        className !== \"bn-editor\"\n    )\n    .join(\" \");\n\n  dragImageElement.className =\n    dragImageElement.className + \" bn-drag-preview \" + inheritedClasses;\n\n  if (view.root instanceof ShadowRoot) {\n    view.root.appendChild(dragImageElement);\n  } else {\n    view.root.body.appendChild(dragImageElement);\n  }\n}\n\nfunction unsetDragImage(rootEl: Document | ShadowRoot) {\n  if (dragImageElement !== undefined) {\n    if (rootEl instanceof ShadowRoot) {\n      rootEl.removeChild(dragImageElement);\n    } else {\n      rootEl.body.removeChild(dragImageElement);\n    }\n\n    dragImageElement = undefined;\n  }\n}\n\nfunction dragStart<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  e: { dataTransfer: DataTransfer | null; clientY: number },\n  editor: BlockNoteEditor<BSchema, I, S>\n) {\n  if (!e.dataTransfer) {\n    return;\n  }\n\n  const view = editor.prosemirrorView;\n\n  const editorBoundingBox = view.dom.getBoundingClientRect();\n\n  const coords = {\n    left: editorBoundingBox.left + editorBoundingBox.width / 2, // take middle of editor\n    top: e.clientY,\n  };\n\n  const elements = view.root.elementsFromPoint(coords.left, coords.top);\n  let blockEl = undefined;\n\n  for (const element of elements) {\n    if (view.dom.contains(element)) {\n      blockEl = getDraggableBlockFromElement(element, view);\n      break;\n    }\n  }\n\n  if (!blockEl) {\n    return;\n  }\n\n  const pos = blockPositionFromElement(blockEl.node, view);\n  if (pos != null) {\n    const selection = view.state.selection;\n    const doc = view.state.doc;\n\n    const { from, to } = blockPositionsFromSelection(selection, doc);\n\n    const draggedBlockInSelection = from <= pos && pos < to;\n    const multipleBlocksSelected =\n      selection.$anchor.node() !== selection.$head.node() ||\n      selection instanceof MultipleNodeSelection;\n\n    if (draggedBlockInSelection && multipleBlocksSelected) {\n      view.dispatch(\n        view.state.tr.setSelection(MultipleNodeSelection.create(doc, from, to))\n      );\n      setDragImage(view, from, to);\n    } else {\n      view.dispatch(\n        view.state.tr.setSelection(NodeSelection.create(view.state.doc, pos))\n      );\n      setDragImage(view, pos);\n    }\n\n    const selectedSlice = view.state.selection.content();\n    const schema = editor.pmSchema;\n\n    const clipboardHML = (pmView as any).__serializeForClipboard(\n      view,\n      selectedSlice\n    ).dom.innerHTML;\n\n    const externalHTMLExporter = createExternalHTMLExporter(schema, editor);\n    const externalHTML = externalHTMLExporter.exportProseMirrorFragment(\n      selectedSlice.content,\n      {}\n    );\n\n    const plainText = cleanHTMLToMarkdown(externalHTML);\n\n    e.dataTransfer.clearData();\n    e.dataTransfer.setData(\"blocknote/html\", clipboardHML);\n    e.dataTransfer.setData(\"text/html\", externalHTML);\n    e.dataTransfer.setData(\"text/plain\", plainText);\n    e.dataTransfer.effectAllowed = \"move\";\n    e.dataTransfer.setDragImage(dragImageElement!, 0, 0);\n    view.dragging = { slice: selectedSlice, move: true };\n  }\n}\n\nexport class SideMenuView<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> implements PluginView\n{\n  public state?: SideMenuState<BSchema, I, S>;\n  public readonly emitUpdate: (state: SideMenuState<BSchema, I, S>) => void;\n\n  private needUpdate = false;\n  private mousePos: { x: number; y: number } | undefined;\n\n  // When true, the drag handle with be anchored at the same level as root elements\n  // When false, the drag handle with be just to the left of the element\n  // TODO: Is there any case where we want this to be false?\n  private horizontalPosAnchoredAtRoot: boolean;\n  private horizontalPosAnchor: number | undefined;\n\n  private hoveredBlock: HTMLElement | undefined;\n\n  // Used to check if currently dragged content comes from this editor instance.\n  public isDragging = false;\n\n  public menuFrozen = false;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<BSchema, I, S>,\n    private readonly pmView: EditorView,\n    emitUpdate: (state: SideMenuState<BSchema, I, S>) => void\n  ) {\n    this.emitUpdate = () => {\n      if (!this.state) {\n        throw new Error(\"Attempting to update uninitialized side menu\");\n      }\n\n      emitUpdate(this.state);\n    };\n\n    this.horizontalPosAnchoredAtRoot = true;\n\n    if (this.pmView.dom.firstChild) {\n      this.horizontalPosAnchor = (\n        this.pmView.dom.firstChild as HTMLElement\n      ).getBoundingClientRect().x;\n    }\n\n    this.pmView.root.addEventListener(\n      \"drop\",\n      this.onDrop as EventListener,\n      true\n    );\n    this.pmView.root.addEventListener(\n      \"dragover\",\n      this.onDragOver as EventListener\n    );\n    initializeESMDependencies();\n    this.pmView.dom.addEventListener(\"dragstart\", this.onDragStart);\n\n    // Shows or updates menu position whenever the cursor moves, if the menu isn't frozen.\n    this.pmView.root.addEventListener(\n      \"mousemove\",\n      this.onMouseMove as EventListener,\n      true\n    );\n\n    // Unfreezes the menu whenever the user clicks.\n    this.pmView.dom.addEventListener(\"mousedown\", this.onMouseDown);\n    // Hides and unfreezes the menu whenever the user presses a key.\n    this.pmView.root.addEventListener(\n      \"keydown\",\n      this.onKeyDown as EventListener,\n      true\n    );\n\n    // Setting capture=true ensures that any parent container of the editor that\n    // gets scrolled will trigger the scroll event. Scroll events do not bubble\n    // and so won't propagate to the document by default.\n    this.pmView.root.addEventListener(\"scroll\", this.onScroll, true);\n  }\n\n  updateState = () => {\n    if (this.menuFrozen || !this.mousePos) {\n      return;\n    }\n\n    // Editor itself may have padding or other styling which affects\n    // size/position, so we get the boundingRect of the first child (i.e. the\n    // blockGroup that wraps all blocks in the editor) for more accurate side\n    // menu placement.\n    if (!this.pmView.dom.firstChild) {\n      return;\n    }\n\n    const editorBoundingBox = (\n      this.pmView.dom.firstChild as HTMLElement\n    ).getBoundingClientRect();\n\n    this.horizontalPosAnchor = editorBoundingBox.x;\n\n    // Gets block at mouse cursor's vertical position.\n    const coords = {\n      left: editorBoundingBox.left + editorBoundingBox.width / 2, // take middle of editor\n      top: this.mousePos.y,\n    };\n\n    const elements = this.pmView.root.elementsFromPoint(\n      coords.left,\n      coords.top\n    );\n    let block = undefined;\n\n    for (const element of elements) {\n      if (this.pmView.dom.contains(element)) {\n        block = getDraggableBlockFromElement(element, this.pmView);\n        break;\n      }\n    }\n\n    // Closes the menu if the mouse cursor is beyond the editor vertically.\n    if (!block || !this.editor.isEditable) {\n      if (this.state?.show) {\n        this.state.show = false;\n        this.needUpdate = true;\n      }\n\n      return;\n    }\n\n    // Doesn't update if the menu is already open and the mouse cursor is still hovering the same block.\n    if (\n      this.state?.show &&\n      this.hoveredBlock?.hasAttribute(\"data-id\") &&\n      this.hoveredBlock?.getAttribute(\"data-id\") === block.id\n    ) {\n      return;\n    }\n\n    this.hoveredBlock = block.node;\n\n    // Gets the block's content node, which lets to ignore child blocks when determining the block menu's position.\n    const blockContent = block.node.firstChild as HTMLElement;\n\n    if (!blockContent) {\n      return;\n    }\n\n    // Shows or updates elements.\n    if (this.editor.isEditable) {\n      const blockContentBoundingBox = blockContent.getBoundingClientRect();\n\n      this.state = {\n        show: true,\n        referencePos: new DOMRect(\n          this.horizontalPosAnchoredAtRoot\n            ? this.horizontalPosAnchor\n            : blockContentBoundingBox.x,\n          blockContentBoundingBox.y,\n          blockContentBoundingBox.width,\n          blockContentBoundingBox.height\n        ),\n        block: this.editor.getBlock(\n          this.hoveredBlock!.getAttribute(\"data-id\")!\n        )!,\n      };\n      this.needUpdate = true;\n    }\n  };\n\n  /**\n   * Sets isDragging when dragging text.\n   */\n  onDragStart = () => {\n    this.isDragging = true;\n  };\n\n  /**\n   * If the event is outside the editor contents,\n   * we dispatch a fake event, so that we can still drop the content\n   * when dragging / dropping to the side of the editor\n   */\n  onDrop = (event: DragEvent) => {\n    this.editor._tiptapEditor.commands.blur();\n\n    if ((event as any).synthetic || !this.isDragging) {\n      return;\n    }\n\n    const pos = this.pmView.posAtCoords({\n      left: event.clientX,\n      top: event.clientY,\n    });\n\n    this.isDragging = false;\n\n    if (!pos || pos.inside === -1) {\n      const evt = new Event(\"drop\", event) as any;\n      const editorBoundingBox = (\n        this.pmView.dom.firstChild as HTMLElement\n      ).getBoundingClientRect();\n      evt.clientX =\n        event.clientX < editorBoundingBox.left ||\n        event.clientX > editorBoundingBox.left + editorBoundingBox.width\n          ? editorBoundingBox.left + editorBoundingBox.width / 2\n          : event.clientX;\n      evt.clientY = Math.min(\n        Math.max(event.clientY, editorBoundingBox.top),\n        editorBoundingBox.top + editorBoundingBox.height\n      );\n      evt.dataTransfer = event.dataTransfer;\n      evt.preventDefault = () => event.preventDefault();\n      evt.synthetic = true; // prevent recursion\n      // console.log(\"dispatch fake drop\");\n      this.pmView.dom.dispatchEvent(evt);\n    }\n  };\n\n  /**\n   * If the event is outside the editor contents,\n   * we dispatch a fake event, so that we can still drop the content\n   * when dragging / dropping to the side of the editor\n   */\n  onDragOver = (event: DragEvent) => {\n    if ((event as any).synthetic || !this.isDragging) {\n      return;\n    }\n    const pos = this.pmView.posAtCoords({\n      left: event.clientX,\n      top: event.clientY,\n    });\n\n    if (!pos || (pos.inside === -1 && this.pmView.dom.firstChild)) {\n      const evt = new Event(\"dragover\", event) as any;\n      const editorBoundingBox = (\n        this.pmView.dom.firstChild as HTMLElement\n      ).getBoundingClientRect();\n      evt.clientX = editorBoundingBox.left + editorBoundingBox.width / 2;\n      evt.clientY = event.clientY;\n      evt.dataTransfer = event.dataTransfer;\n      evt.preventDefault = () => event.preventDefault();\n      evt.synthetic = true; // prevent recursion\n      // console.log(\"dispatch fake dragover\");\n      this.pmView.dom.dispatchEvent(evt);\n    }\n  };\n\n  onKeyDown = (_event: KeyboardEvent) => {\n    if (this.state?.show && this.editor.isFocused()) {\n      // Typing in editor should hide side menu\n      this.state.show = false;\n      this.emitUpdate(this.state);\n      this.menuFrozen = false;\n    }\n  };\n\n  onMouseDown = () => {\n    if (this.state && this.state.show && this.menuFrozen) {\n      this.menuFrozen = false;\n      this.state.show = false;\n      this.emitUpdate(this.state);\n    }\n  };\n\n  onMouseMove = (event: MouseEvent) => {\n    if (this.menuFrozen) {\n      return;\n    }\n\n    this.mousePos = { x: event.clientX, y: event.clientY };\n\n    // We want the full area of the editor to check if the cursor is hovering\n    // above it though.\n    const editorOuterBoundingBox = this.pmView.dom.getBoundingClientRect();\n    const cursorWithinEditor =\n      this.mousePos.x > editorOuterBoundingBox.left &&\n      this.mousePos.x < editorOuterBoundingBox.right &&\n      this.mousePos.y > editorOuterBoundingBox.top &&\n      this.mousePos.y < editorOuterBoundingBox.bottom;\n\n    const editorWrapper = this.pmView.dom.parentElement!;\n\n    // Doesn't update if the mouse hovers an element that's over the editor but\n    // isn't a part of it or the side menu.\n    if (\n      // Cursor is within the editor area\n      cursorWithinEditor &&\n      // An element is hovered\n      event &&\n      event.target &&\n      // Element is outside the editor\n      !(\n        editorWrapper === event.target ||\n        editorWrapper.contains(event.target as HTMLElement)\n      )\n    ) {\n      if (this.state?.show) {\n        this.state.show = false;\n        this.emitUpdate(this.state);\n      }\n\n      return;\n    }\n\n    this.updateState();\n\n    if (this.needUpdate) {\n      this.emitUpdate(this.state!);\n      this.needUpdate = false;\n    }\n  };\n\n  onScroll = () => {\n    if (this.state?.show && this.hoveredBlock?.firstChild) {\n      const blockContent = this.hoveredBlock.firstChild as HTMLElement;\n      const blockContentBoundingBox = blockContent.getBoundingClientRect();\n\n      this.state.referencePos = new DOMRect(\n        this.horizontalPosAnchoredAtRoot\n          ? this.horizontalPosAnchor\n          : blockContentBoundingBox.x,\n        blockContentBoundingBox.y,\n        blockContentBoundingBox.width,\n        blockContentBoundingBox.height\n      );\n      this.emitUpdate(this.state);\n    }\n  };\n\n  // Needed in cases where the editor state updates without the mouse cursor\n  // moving, as some state updates can require a side menu update. For example,\n  // adding a button to the side menu which removes the block can cause the\n  // block below to jump up into the place of the removed block when clicked,\n  // allowing the user to click the button again without moving the cursor. This\n  // would otherwise not update the side menu, and so clicking the button again\n  // would attempt to remove the same block again, causing an error.\n  update() {\n    const prevBlockId = this.state?.block.id;\n\n    this.updateState();\n\n    if (this.needUpdate && this.state && prevBlockId !== this.state.block.id) {\n      this.emitUpdate(this.state);\n      this.needUpdate = false;\n    }\n  }\n\n  destroy() {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate(this.state);\n    }\n    this.pmView.root.removeEventListener(\n      \"mousemove\",\n      this.onMouseMove as EventListener,\n      true\n    );\n    this.pmView.root.removeEventListener(\n      \"dragover\",\n      this.onDragOver as EventListener\n    );\n    this.pmView.dom.removeEventListener(\"dragstart\", this.onDragStart);\n    this.pmView.root.removeEventListener(\n      \"drop\",\n      this.onDrop as EventListener,\n      true\n    );\n    this.pmView.root.removeEventListener(\"scroll\", this.onScroll, true);\n    this.pmView.dom.removeEventListener(\"mousedown\", this.onMouseDown);\n    this.pmView.root.removeEventListener(\n      \"keydown\",\n      this.onKeyDown as EventListener,\n      true\n    );\n  }\n\n  addBlock() {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate(this.state);\n    }\n\n    if (!this.hoveredBlock?.firstChild) {\n      return;\n    }\n\n    const blockContent = this.hoveredBlock.firstChild as HTMLElement;\n    const blockContentBoundingBox = blockContent.getBoundingClientRect();\n\n    const pos = this.pmView.posAtCoords({\n      left: blockContentBoundingBox.left + blockContentBoundingBox.width / 2,\n      top: blockContentBoundingBox.top + blockContentBoundingBox.height / 2,\n    });\n    if (!pos) {\n      return;\n    }\n\n    const blockInfo = getBlockInfoFromPos(\n      this.editor._tiptapEditor.state.doc,\n      pos.pos\n    );\n    if (blockInfo === undefined) {\n      return;\n    }\n\n    const { contentNode, startPos, endPos } = blockInfo;\n\n    // Creates a new block if current one is not empty for the suggestion menu to open in.\n    if (\n      contentNode.type.spec.content !== \"inline*\" ||\n      contentNode.textContent.length !== 0\n    ) {\n      const newBlockInsertionPos = endPos + 1;\n      const newBlockContentPos = newBlockInsertionPos + 2;\n\n      this.editor._tiptapEditor\n        .chain()\n        .BNCreateBlock(newBlockInsertionPos)\n        // .BNUpdateBlock(newBlockContentPos, { type: \"paragraph\", props: {} })\n        .setTextSelection(newBlockContentPos)\n        .run();\n    } else {\n      this.editor._tiptapEditor.commands.setTextSelection(startPos + 1);\n    }\n\n    // Focuses and activates the slash menu.\n    this.editor.openSuggestionMenu(\"/\");\n  }\n}\n\nexport const sideMenuPluginKey = new PluginKey(\"SideMenuPlugin\");\n\nexport class SideMenuProsemirrorPlugin<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> extends EventEmitter<any> {\n  public view: SideMenuView<BSchema, I, S> | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(private readonly editor: BlockNoteEditor<BSchema, I, S>) {\n    super();\n    this.plugin = new Plugin({\n      key: sideMenuPluginKey,\n      view: (editorView) => {\n        this.view = new SideMenuView(editor, editorView, (state) => {\n          this.emit(\"update\", state);\n        });\n        return this.view;\n      },\n    });\n  }\n\n  public onUpdate(callback: (state: SideMenuState<BSchema, I, S>) => void) {\n    return this.on(\"update\", callback);\n  }\n\n  /**\n   * If the block is empty, opens the slash menu. If the block has content,\n   * creates a new block below and opens the slash menu in it.\n   */\n  addBlock = () => this.view!.addBlock();\n\n  /**\n   * Handles drag & drop events for blocks.\n   */\n  blockDragStart = (event: {\n    dataTransfer: DataTransfer | null;\n    clientY: number;\n  }) => {\n    this.view!.isDragging = true;\n    dragStart(event, this.editor);\n  };\n\n  /**\n   * Handles drag & drop events for blocks.\n   */\n  blockDragEnd = () => unsetDragImage(this.editor.prosemirrorView.root);\n  /**\n   * Freezes the side menu. When frozen, the side menu will stay\n   * attached to the same block regardless of which block is hovered by the\n   * mouse cursor.\n   */\n  freezeMenu = () => (this.view!.menuFrozen = true);\n  /**\n   * Unfreezes the side menu. When frozen, the side menu will stay\n   * attached to the same block regardless of which block is hovered by the\n   * mouse cursor.\n   */\n  unfreezeMenu = () => {\n    this.view!.menuFrozen = false;\n    this.view!.state!.show = false;\n    this.view!.emitUpdate(this.view!.state!);\n  };\n}\n","import { findParentNode } from \"@tiptap/core\";\nimport { EditorState, Plugin, PluginKey } from \"prosemirror-state\";\nimport { Decoration, DecorationSet, EditorView } from \"prosemirror-view\";\n\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { UiElementPosition } from \"../../extensions-shared/UiElementPosition\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../schema\";\nimport { EventEmitter } from \"../../util/EventEmitter\";\n\nconst findBlock = findParentNode((node) => node.type.name === \"blockContainer\");\n\nexport type SuggestionMenuState = UiElementPosition & {\n  query: string;\n  ignoreQueryLength?: boolean;\n};\n\nclass SuggestionMenuView<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> {\n  public state?: SuggestionMenuState;\n  public emitUpdate: (triggerCharacter: string) => void;\n  private rootEl?: Document | ShadowRoot;\n  pluginState: SuggestionPluginState;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<BSchema, I, S>,\n    emitUpdate: (menuName: string, state: SuggestionMenuState) => void\n  ) {\n    this.pluginState = undefined;\n\n    this.emitUpdate = (menuName: string) => {\n      if (!this.state) {\n        throw new Error(\"Attempting to update uninitialized suggestions menu\");\n      }\n\n      emitUpdate(menuName, {\n        ...this.state,\n        ignoreQueryLength: this.pluginState?.ignoreQueryLength,\n      });\n    };\n\n    this.rootEl = this.editor._tiptapEditor.view.root;\n\n    // Setting capture=true ensures that any parent container of the editor that\n    // gets scrolled will trigger the scroll event. Scroll events do not bubble\n    // and so won't propagate to the document by default.\n    this.rootEl.addEventListener(\"scroll\", this.handleScroll, true);\n  }\n\n  handleScroll = () => {\n    if (this.state?.show) {\n      const decorationNode = this.rootEl?.querySelector(\n        `[data-decoration-id=\"${this.pluginState!.decorationId}\"]`\n      );\n      if (!decorationNode) {\n        return;\n      }\n      this.state.referencePos = decorationNode.getBoundingClientRect();\n      this.emitUpdate(this.pluginState!.triggerCharacter!);\n    }\n  };\n\n  update(view: EditorView, prevState: EditorState) {\n    const prev: SuggestionPluginState =\n      suggestionMenuPluginKey.getState(prevState);\n    const next: SuggestionPluginState = suggestionMenuPluginKey.getState(\n      view.state\n    );\n\n    // See how the state changed\n    const started = prev === undefined && next !== undefined;\n    const stopped = prev !== undefined && next === undefined;\n    const changed = prev !== undefined && next !== undefined;\n\n    // Cancel when suggestion isn't active\n    if (!started && !changed && !stopped) {\n      return;\n    }\n\n    this.pluginState = stopped ? prev : next;\n\n    if (stopped || !this.editor.isEditable) {\n      this.state!.show = false;\n      this.emitUpdate(this.pluginState!.triggerCharacter);\n\n      return;\n    }\n\n    const decorationNode = this.rootEl?.querySelector(\n      `[data-decoration-id=\"${this.pluginState!.decorationId}\"]`\n    );\n\n    if (this.editor.isEditable && decorationNode) {\n      this.state = {\n        show: true,\n        referencePos: decorationNode.getBoundingClientRect(),\n        query: this.pluginState!.query,\n      };\n\n      this.emitUpdate(this.pluginState!.triggerCharacter!);\n    }\n  }\n\n  destroy() {\n    this.rootEl?.removeEventListener(\"scroll\", this.handleScroll, true);\n  }\n\n  closeMenu = () => {\n    this.editor.dispatch(\n      this.editor._tiptapEditor.view.state.tr.setMeta(\n        suggestionMenuPluginKey,\n        null\n      )\n    );\n  };\n\n  clearQuery = () => {\n    if (this.pluginState === undefined) {\n      return;\n    }\n\n    this.editor._tiptapEditor\n      .chain()\n      .focus()\n      .deleteRange({\n        from:\n          this.pluginState.queryStartPos! -\n          (this.pluginState.deleteTriggerCharacter\n            ? this.pluginState.triggerCharacter!.length\n            : 0),\n        to: this.editor._tiptapEditor.state.selection.from,\n      })\n      .run();\n  };\n}\n\ntype SuggestionPluginState =\n  | {\n      triggerCharacter: string;\n      deleteTriggerCharacter: boolean;\n      queryStartPos: number;\n      query: string;\n      decorationId: string;\n      ignoreQueryLength?: boolean;\n    }\n  | undefined;\n\nconst suggestionMenuPluginKey = new PluginKey(\"SuggestionMenuPlugin\");\n\n/**\n * A ProseMirror plugin for suggestions, designed to make '/'-commands possible as well as mentions.\n *\n * This is basically a simplified version of TipTap's [Suggestions](https://github.com/ueberdosis/tiptap/tree/db92a9b313c5993b723c85cd30256f1d4a0b65e1/packages/suggestion) plugin.\n *\n * This version is adapted from the aforementioned version in the following ways:\n * - This version supports generic items instead of only strings (to allow for more advanced filtering for example)\n * - This version hides some unnecessary complexity from the user of the plugin.\n * - This version handles key events differently\n */\nexport class SuggestionMenuProseMirrorPlugin<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> extends EventEmitter<any> {\n  private view: SuggestionMenuView<BSchema, I, S> | undefined;\n  public readonly plugin: Plugin;\n\n  private triggerCharacters: string[] = [];\n\n  constructor(editor: BlockNoteEditor<BSchema, I, S>) {\n    super();\n    const triggerCharacters = this.triggerCharacters;\n    this.plugin = new Plugin({\n      key: suggestionMenuPluginKey,\n\n      view: () => {\n        this.view = new SuggestionMenuView<BSchema, I, S>(\n          editor,\n          (triggerCharacter, state) => {\n            this.emit(`update ${triggerCharacter}`, state);\n          }\n        );\n        return this.view;\n      },\n\n      state: {\n        // Initialize the plugin's internal state.\n        init(): SuggestionPluginState {\n          return undefined;\n        },\n\n        // Apply changes to the plugin state from an editor transaction.\n        apply(transaction, prev, _oldState, newState): SuggestionPluginState {\n          // TODO: More clearly define which transactions should be ignored.\n          if (transaction.getMeta(\"orderedListIndexing\") !== undefined) {\n            return prev;\n          }\n\n          // Either contains the trigger character if the menu should be shown,\n          // or null if it should be hidden.\n          const suggestionPluginTransactionMeta: {\n            triggerCharacter: string;\n            deleteTriggerCharacter?: boolean;\n            ignoreQueryLength?: boolean;\n          } | null = transaction.getMeta(suggestionMenuPluginKey);\n\n          // Only opens a menu of no menu is already open\n          if (\n            typeof suggestionPluginTransactionMeta === \"object\" &&\n            suggestionPluginTransactionMeta !== null &&\n            prev === undefined\n          ) {\n            return {\n              triggerCharacter:\n                suggestionPluginTransactionMeta.triggerCharacter,\n              deleteTriggerCharacter:\n                suggestionPluginTransactionMeta.deleteTriggerCharacter !==\n                false,\n              queryStartPos: newState.selection.from,\n              query: \"\",\n              decorationId: `id_${Math.floor(Math.random() * 0xffffffff)}`,\n              ignoreQueryLength:\n                suggestionPluginTransactionMeta?.ignoreQueryLength,\n            };\n          }\n\n          // Checks if the menu is hidden, in which case it doesn't need to be hidden or updated.\n          if (prev === undefined) {\n            return prev;\n          }\n\n          // Checks if the menu should be hidden.\n          if (\n            // Highlighting text should hide the menu.\n            newState.selection.from !== newState.selection.to ||\n            // Transactions with plugin metadata should hide the menu.\n            suggestionPluginTransactionMeta === null ||\n            // Certain mouse events should hide the menu.\n            // TODO: Change to global mousedown listener.\n            transaction.getMeta(\"focus\") ||\n            transaction.getMeta(\"blur\") ||\n            transaction.getMeta(\"pointer\") ||\n            // Moving the caret before the character which triggered the menu should hide it.\n            (prev.triggerCharacter !== undefined &&\n              newState.selection.from < prev.queryStartPos!)\n          ) {\n            return undefined;\n          }\n\n          const next = { ...prev };\n\n          // Updates the current query.\n          next.query = newState.doc.textBetween(\n            prev.queryStartPos!,\n            newState.selection.from\n          );\n\n          return next;\n        },\n      },\n\n      props: {\n        handleTextInput(view, _from, _to, text) {\n          const suggestionPluginState: SuggestionPluginState = (\n            this as Plugin\n          ).getState(view.state);\n\n          if (\n            triggerCharacters.includes(text) &&\n            suggestionPluginState === undefined\n          ) {\n            view.dispatch(\n              view.state.tr\n                .insertText(text)\n                .scrollIntoView()\n                .setMeta(suggestionMenuPluginKey, {\n                  triggerCharacter: text,\n                })\n            );\n\n            return true;\n          }\n          return false;\n        },\n\n        // Setup decorator on the currently active suggestion.\n        decorations(state) {\n          const suggestionPluginState: SuggestionPluginState = (\n            this as Plugin\n          ).getState(state);\n\n          if (suggestionPluginState === undefined) {\n            return null;\n          }\n\n          // If the menu was opened programmatically by another extension, it may not use a trigger character. In this\n          // case, the decoration is set on the whole block instead, as the decoration range would otherwise be empty.\n          if (!suggestionPluginState.deleteTriggerCharacter) {\n            const blockNode = findBlock(state.selection);\n            if (blockNode) {\n              return DecorationSet.create(state.doc, [\n                Decoration.node(\n                  blockNode.pos,\n                  blockNode.pos + blockNode.node.nodeSize,\n                  {\n                    nodeName: \"span\",\n                    class: \"bn-suggestion-decorator\",\n                    \"data-decoration-id\": suggestionPluginState.decorationId,\n                  }\n                ),\n              ]);\n            }\n          }\n          // Creates an inline decoration around the trigger character.\n          return DecorationSet.create(state.doc, [\n            Decoration.inline(\n              suggestionPluginState.queryStartPos! -\n                suggestionPluginState.triggerCharacter!.length,\n              suggestionPluginState.queryStartPos!,\n              {\n                nodeName: \"span\",\n                class: \"bn-suggestion-decorator\",\n                \"data-decoration-id\": suggestionPluginState.decorationId,\n              }\n            ),\n          ]);\n        },\n      },\n    });\n  }\n\n  public onUpdate(\n    triggerCharacter: string,\n    callback: (state: SuggestionMenuState) => void\n  ) {\n    if (!this.triggerCharacters.includes(triggerCharacter)) {\n      this.addTriggerCharacter(triggerCharacter);\n    }\n    // TODO: be able to remove the triggerCharacter\n    return this.on(`update ${triggerCharacter}`, callback);\n  }\n\n  addTriggerCharacter = (triggerCharacter: string) => {\n    this.triggerCharacters.push(triggerCharacter);\n  };\n\n  // TODO: Should this be called automatically when listeners are removed?\n  removeTriggerCharacter = (triggerCharacter: string) => {\n    this.triggerCharacters = this.triggerCharacters.filter(\n      (c) => c !== triggerCharacter\n    );\n  };\n\n  closeMenu = () => this.view!.closeMenu();\n\n  clearQuery = () => this.view!.clearQuery();\n\n  public get shown() {\n    return this.view?.state?.show || false;\n  }\n}\n\nexport function createSuggestionMenu<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(editor: BlockNoteEditor<BSchema, I, S>, triggerCharacter: string) {\n  editor.suggestionMenus.addTriggerCharacter(triggerCharacter);\n}\n","import { Plugin, PluginKey, PluginView } from \"prosemirror-state\";\nimport { Decoration, DecorationSet, EditorView } from \"prosemirror-view\";\nimport { nodeToBlock } from \"../../api/nodeConversions/nodeConversions\";\nimport { checkBlockIsDefaultType } from \"../../blocks/defaultBlockTypeGuards\";\nimport { Block, DefaultBlockSchema } from \"../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport {\n  BlockFromConfigNoChildren,\n  BlockSchemaWithBlock,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../../schema\";\nimport { EventEmitter } from \"../../util/EventEmitter\";\nimport { getDraggableBlockFromElement } from \"../SideMenu/SideMenuPlugin\";\n\nlet dragImageElement: HTMLElement | undefined;\n\nexport type TableHandlesState<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> = {\n  show: boolean;\n  referencePosCell: DOMRect;\n  referencePosTable: DOMRect;\n\n  block: BlockFromConfigNoChildren<DefaultBlockSchema[\"table\"], I, S>;\n  colIndex: number;\n  rowIndex: number;\n\n  draggingState:\n    | {\n        draggedCellOrientation: \"row\" | \"col\";\n        originalIndex: number;\n        mousePos: number;\n      }\n    | undefined;\n};\n\nfunction setHiddenDragImage(rootEl: Document | ShadowRoot) {\n  if (dragImageElement) {\n    return;\n  }\n\n  dragImageElement = document.createElement(\"div\");\n  dragImageElement.innerHTML = \"_\";\n  dragImageElement.style.opacity = \"0\";\n  dragImageElement.style.height = \"1px\";\n  dragImageElement.style.width = \"1px\";\n  if (rootEl instanceof Document) {\n    rootEl.body.appendChild(dragImageElement);\n  } else {\n    rootEl.appendChild(dragImageElement);\n  }\n}\n\nfunction unsetHiddenDragImage(rootEl: Document | ShadowRoot) {\n  if (dragImageElement) {\n    if (rootEl instanceof Document) {\n      rootEl.body.removeChild(dragImageElement);\n    } else {\n      rootEl.removeChild(dragImageElement);\n    }\n    dragImageElement = undefined;\n  }\n}\n\nfunction getChildIndex(node: Element) {\n  return Array.prototype.indexOf.call(node.parentElement!.childNodes, node);\n}\n\n// Finds the DOM element corresponding to the table cell that the target element\n// is currently in. If the target element is not in a table cell, returns null.\nfunction domCellAround(target: Element | null): Element | null {\n  while (target && target.nodeName !== \"TD\" && target.nodeName !== \"TH\") {\n    target =\n      target.classList && target.classList.contains(\"ProseMirror\")\n        ? null\n        : (target.parentNode as Element);\n  }\n  return target;\n}\n\n// Hides elements in the DOMwith the provided class names.\nfunction hideElementsWithClassNames(\n  classNames: string[],\n  rootEl: Document | ShadowRoot\n) {\n  classNames.forEach((className) => {\n    const elementsToHide = rootEl.querySelectorAll(className);\n\n    for (let i = 0; i < elementsToHide.length; i++) {\n      (elementsToHide[i] as HTMLElement).style.visibility = \"hidden\";\n    }\n  });\n}\n\nexport class TableHandlesView<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> implements PluginView\n{\n  public state?: TableHandlesState<I, S>;\n  public emitUpdate: () => void;\n\n  public tableId: string | undefined;\n  public tablePos: number | undefined;\n\n  public menuFrozen = false;\n\n  public mouseState: \"up\" | \"down\" | \"selecting\" = \"up\";\n\n  public prevWasEditable: boolean | null = null;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<\n      BlockSchemaWithBlock<\"table\", DefaultBlockSchema[\"table\"]>,\n      I,\n      S\n    >,\n    private readonly pmView: EditorView,\n    emitUpdate: (state: TableHandlesState<I, S>) => void\n  ) {\n    this.emitUpdate = () => {\n      if (!this.state) {\n        throw new Error(\"Attempting to update uninitialized image toolbar\");\n      }\n\n      emitUpdate(this.state);\n    };\n\n    pmView.dom.addEventListener(\"mousemove\", this.mouseMoveHandler);\n    pmView.dom.addEventListener(\"mousedown\", this.viewMousedownHandler);\n    pmView.dom.addEventListener(\"mouseup\", this.viewMouseupHandler);\n\n    pmView.root.addEventListener(\n      \"dragover\",\n      this.dragOverHandler as EventListener\n    );\n    pmView.root.addEventListener(\"drop\", this.dropHandler as EventListener);\n\n    // Setting capture=true ensures that any parent container of the editor that\n    // gets scrolled will trigger the scroll event. Scroll events do not bubble\n    // and so won't propagate to the document by default.\n    pmView.root.addEventListener(\"scroll\", this.scrollHandler, true);\n  }\n\n  viewMousedownHandler = () => {\n    this.mouseState = \"down\";\n  };\n\n  viewMouseupHandler = (event: MouseEvent) => {\n    this.mouseState = \"up\";\n    this.mouseMoveHandler(event);\n  };\n\n  mouseMoveHandler = (event: MouseEvent) => {\n    if (this.menuFrozen) {\n      return;\n    }\n\n    if (this.mouseState === \"down\") {\n      this.mouseState = \"selecting\";\n\n      if (this.state?.show) {\n        this.state.show = false;\n        this.emitUpdate();\n      }\n    }\n\n    if (this.mouseState === \"selecting\") {\n      return;\n    }\n\n    const target = domCellAround(event.target as HTMLElement);\n\n    if (!target || !this.editor.isEditable) {\n      if (this.state?.show) {\n        this.state.show = false;\n        this.emitUpdate();\n      }\n      return;\n    }\n\n    const colIndex = getChildIndex(target);\n    const rowIndex = getChildIndex(target.parentElement!);\n    const cellRect = target.getBoundingClientRect();\n    const tableRect =\n      target.parentElement?.parentElement?.getBoundingClientRect();\n\n    if (!tableRect) {\n      return;\n    }\n\n    const blockEl = getDraggableBlockFromElement(target, this.pmView);\n    if (!blockEl) {\n      return;\n    }\n\n    let tableBlock: Block<any, any, any> | undefined = undefined;\n\n    // Copied from `getBlock`. We don't use `getBlock` since we also need the PM\n    // node for the table, so we would effectively be doing the same work twice.\n    this.editor._tiptapEditor.state.doc.descendants((node, pos) => {\n      if (typeof tableBlock !== \"undefined\") {\n        return false;\n      }\n\n      if (node.type.name !== \"blockContainer\" || node.attrs.id !== blockEl.id) {\n        return true;\n      }\n\n      const block = nodeToBlock(\n        node,\n        this.editor.schema.blockSchema,\n        this.editor.schema.inlineContentSchema,\n        this.editor.schema.styleSchema,\n        this.editor.blockCache\n      );\n\n      if (checkBlockIsDefaultType(\"table\", block, this.editor)) {\n        this.tablePos = pos + 1;\n        tableBlock = block;\n      }\n\n      return false;\n    });\n\n    if (!tableBlock) {\n      return;\n    }\n\n    this.tableId = blockEl.id;\n\n    if (\n      this.state !== undefined &&\n      this.state.show &&\n      this.tableId === blockEl.id &&\n      this.state.rowIndex === rowIndex &&\n      this.state.colIndex === colIndex\n    ) {\n      return;\n    }\n\n    this.state = {\n      show: true,\n      referencePosCell: cellRect,\n      referencePosTable: tableRect,\n\n      block: tableBlock,\n      colIndex: colIndex,\n      rowIndex: rowIndex,\n\n      draggingState: undefined,\n    };\n    this.emitUpdate();\n\n    return false;\n  };\n\n  dragOverHandler = (event: DragEvent) => {\n    if (this.state?.draggingState === undefined) {\n      return;\n    }\n\n    event.preventDefault();\n    event.dataTransfer!.dropEffect = \"move\";\n\n    hideElementsWithClassNames(\n      [\n        \"column-resize-handle\",\n        \"prosemirror-dropcursor-block\",\n        \"prosemirror-dropcursor-inline\",\n      ],\n      this.pmView.root\n    );\n\n    // The mouse cursor coordinates, bounded to the table's bounding box. The\n    // bounding box is shrunk by 1px on each side to ensure that the bounded\n    // coordinates are always inside a table cell.\n    const boundedMouseCoords = {\n      left: Math.min(\n        Math.max(event.clientX, this.state.referencePosTable.left + 1),\n        this.state.referencePosTable.right - 1\n      ),\n      top: Math.min(\n        Math.max(event.clientY, this.state.referencePosTable.top + 1),\n        this.state.referencePosTable.bottom - 1\n      ),\n    };\n\n    // Gets the table cell element that the bounded mouse cursor coordinates lie\n    // in.\n    const tableCellElements = this.pmView.root\n      .elementsFromPoint(boundedMouseCoords.left, boundedMouseCoords.top)\n      .filter(\n        (element) => element.tagName === \"TD\" || element.tagName === \"TH\"\n      );\n    if (tableCellElements.length === 0) {\n      throw new Error(\n        \"Could not find table cell element that the mouse cursor is hovering over.\"\n      );\n    }\n    const tableCellElement = tableCellElements[0];\n\n    let emitStateUpdate = false;\n\n    // Gets current row and column index.\n    const rowIndex = getChildIndex(tableCellElement.parentElement!);\n    const colIndex = getChildIndex(tableCellElement);\n\n    // Checks if the drop cursor needs to be updated. This affects decorations\n    // only so it doesn't trigger a state update.\n    const oldIndex =\n      this.state.draggingState.draggedCellOrientation === \"row\"\n        ? this.state.rowIndex\n        : this.state.colIndex;\n    const newIndex =\n      this.state.draggingState.draggedCellOrientation === \"row\"\n        ? rowIndex\n        : colIndex;\n    const dispatchDecorationsTransaction = newIndex !== oldIndex;\n\n    // Checks if either the hovered cell has changed and updates the row and\n    // column index. Also updates the reference DOMRect.\n    if (this.state.rowIndex !== rowIndex || this.state.colIndex !== colIndex) {\n      this.state.rowIndex = rowIndex;\n      this.state.colIndex = colIndex;\n\n      this.state.referencePosCell = tableCellElement.getBoundingClientRect();\n\n      emitStateUpdate = true;\n    }\n\n    // Checks if the mouse cursor position along the axis that the user is\n    // dragging on has changed and updates it.\n    const mousePos =\n      this.state.draggingState.draggedCellOrientation === \"row\"\n        ? boundedMouseCoords.top\n        : boundedMouseCoords.left;\n    if (this.state.draggingState.mousePos !== mousePos) {\n      this.state.draggingState.mousePos = mousePos;\n\n      emitStateUpdate = true;\n    }\n\n    // Emits a state update if any of the fields have changed.\n    if (emitStateUpdate) {\n      this.emitUpdate();\n    }\n\n    // Dispatches a dummy transaction to force a decorations update if\n    // necessary.\n    if (dispatchDecorationsTransaction) {\n      this.editor.dispatch(\n        this.pmView.state.tr.setMeta(tableHandlesPluginKey, true)\n      );\n    }\n  };\n\n  dropHandler = (event: DragEvent) => {\n    if (this.state === undefined || this.state.draggingState === undefined) {\n      return;\n    }\n\n    event.preventDefault();\n\n    const rows = this.state.block.content.rows;\n\n    if (this.state.draggingState.draggedCellOrientation === \"row\") {\n      const rowToMove = rows[this.state.draggingState.originalIndex];\n      rows.splice(this.state.draggingState.originalIndex, 1);\n      rows.splice(this.state.rowIndex, 0, rowToMove);\n    } else {\n      const cellsToMove = rows.map(\n        (row) => row.cells[this.state!.draggingState!.originalIndex]\n      );\n      rows.forEach((row, rowIndex) => {\n        row.cells.splice(this.state!.draggingState!.originalIndex, 1);\n        row.cells.splice(this.state!.colIndex, 0, cellsToMove[rowIndex]);\n      });\n    }\n\n    this.editor.updateBlock(this.state.block, {\n      type: \"table\",\n      content: {\n        type: \"tableContent\",\n        rows: rows,\n      },\n    });\n  };\n\n  scrollHandler = () => {\n    if (this.state?.show) {\n      const tableElement = this.pmView.root.querySelector(\n        `[data-node-type=\"blockContainer\"][data-id=\"${this.tableId}\"] table`\n      )!;\n      const cellElement = tableElement.querySelector(\n        `tr:nth-child(${this.state.rowIndex + 1}) > td:nth-child(${\n          this.state.colIndex + 1\n        })`\n      )!;\n\n      this.state.referencePosTable = tableElement.getBoundingClientRect();\n      this.state.referencePosCell = cellElement.getBoundingClientRect();\n      this.emitUpdate();\n    }\n  };\n\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mousemove\", this.mouseMoveHandler);\n    this.pmView.root.removeEventListener(\n      \"dragover\",\n      this.dragOverHandler as EventListener\n    );\n    this.pmView.root.removeEventListener(\n      \"drop\",\n      this.dropHandler as EventListener\n    );\n    this.pmView.root.removeEventListener(\"scroll\", this.scrollHandler, true);\n  }\n}\n\nexport const tableHandlesPluginKey = new PluginKey(\"TableHandlesPlugin\");\n\nexport class TableHandlesProsemirrorPlugin<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> extends EventEmitter<any> {\n  private view: TableHandlesView<I, S> | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<\n      BlockSchemaWithBlock<\"table\", DefaultBlockSchema[\"table\"]>,\n      I,\n      S\n    >\n  ) {\n    super();\n    this.plugin = new Plugin({\n      key: tableHandlesPluginKey,\n      view: (editorView) => {\n        this.view = new TableHandlesView(editor, editorView, (state) => {\n          this.emit(\"update\", state);\n        });\n        return this.view;\n      },\n      // We use decorations to render the drop cursor when dragging a table row\n      // or column. The decorations are updated in the `dragOverHandler` method.\n      props: {\n        decorations: (state) => {\n          if (\n            this.view === undefined ||\n            this.view.state === undefined ||\n            this.view.state.draggingState === undefined ||\n            this.view.tablePos === undefined\n          ) {\n            return;\n          }\n\n          const newIndex =\n            this.view.state.draggingState.draggedCellOrientation === \"row\"\n              ? this.view.state.rowIndex\n              : this.view.state.colIndex;\n\n          const decorations: Decoration[] = [];\n\n          if (newIndex === this.view.state.draggingState.originalIndex) {\n            return DecorationSet.create(state.doc, decorations);\n          }\n\n          // Gets the table to show the drop cursor in.\n          const tableResolvedPos = state.doc.resolve(this.view.tablePos + 1);\n          const tableNode = tableResolvedPos.node();\n\n          if (this.view.state.draggingState.draggedCellOrientation === \"row\") {\n            // Gets the row at the new index.\n            const rowResolvedPos = state.doc.resolve(\n              tableResolvedPos.posAtIndex(newIndex) + 1\n            );\n            const rowNode = rowResolvedPos.node();\n\n            // Iterates over all cells in the row.\n            for (let i = 0; i < rowNode.childCount; i++) {\n              // Gets each cell in the row.\n              const cellResolvedPos = state.doc.resolve(\n                rowResolvedPos.posAtIndex(i) + 1\n              );\n              const cellNode = cellResolvedPos.node();\n\n              // Creates a decoration at the start or end of each cell,\n              // depending on whether the new index is before or after the\n              // original index.\n              const decorationPos =\n                cellResolvedPos.pos +\n                (newIndex > this.view.state.draggingState.originalIndex\n                  ? cellNode.nodeSize - 2\n                  : 0);\n              decorations.push(\n                // The widget is a small bar which spans the width of the cell.\n                Decoration.widget(decorationPos, () => {\n                  const widget = document.createElement(\"div\");\n                  widget.className = \"bn-table-drop-cursor\";\n                  widget.style.left = \"0\";\n                  widget.style.right = \"0\";\n                  // This is only necessary because the drop indicator's height\n                  // is an even number of pixels, whereas the border between\n                  // table cells is an odd number of pixels. So this makes the\n                  // positioning slightly more consistent regardless of where\n                  // the row is being dropped.\n                  if (\n                    newIndex > this.view!.state!.draggingState!.originalIndex\n                  ) {\n                    widget.style.bottom = \"-2px\";\n                  } else {\n                    widget.style.top = \"-3px\";\n                  }\n                  widget.style.height = \"4px\";\n\n                  return widget;\n                })\n              );\n            }\n          } else {\n            // Iterates over all rows in the table.\n            for (let i = 0; i < tableNode.childCount; i++) {\n              // Gets each row in the table.\n              const rowResolvedPos = state.doc.resolve(\n                tableResolvedPos.posAtIndex(i) + 1\n              );\n\n              // Gets the cell at the new index in the row.\n              const cellResolvedPos = state.doc.resolve(\n                rowResolvedPos.posAtIndex(newIndex) + 1\n              );\n              const cellNode = cellResolvedPos.node();\n\n              // Creates a decoration at the start or end of each cell,\n              // depending on whether the new index is before or after the\n              // original index.\n              const decorationPos =\n                cellResolvedPos.pos +\n                (newIndex > this.view.state.draggingState.originalIndex\n                  ? cellNode.nodeSize - 2\n                  : 0);\n              decorations.push(\n                // The widget is a small bar which spans the height of the cell.\n                Decoration.widget(decorationPos, () => {\n                  const widget = document.createElement(\"div\");\n                  widget.className = \"bn-table-drop-cursor\";\n                  widget.style.top = \"0\";\n                  widget.style.bottom = \"0\";\n                  // This is only necessary because the drop indicator's width\n                  // is an even number of pixels, whereas the border between\n                  // table cells is an odd number of pixels. So this makes the\n                  // positioning slightly more consistent regardless of where\n                  // the column is being dropped.\n                  if (\n                    newIndex > this.view!.state!.draggingState!.originalIndex\n                  ) {\n                    widget.style.right = \"-2px\";\n                  } else {\n                    widget.style.left = \"-3px\";\n                  }\n                  widget.style.width = \"4px\";\n\n                  return widget;\n                })\n              );\n            }\n          }\n\n          return DecorationSet.create(state.doc, decorations);\n        },\n      },\n    });\n  }\n\n  public onUpdate(callback: (state: TableHandlesState<I, S>) => void) {\n    return this.on(\"update\", callback);\n  }\n\n  /**\n   * Callback that should be set on the `dragStart` event for whichever element\n   * is used as the column drag handle.\n   */\n  colDragStart = (event: {\n    dataTransfer: DataTransfer | null;\n    clientX: number;\n  }) => {\n    if (this.view!.state === undefined) {\n      throw new Error(\n        \"Attempted to drag table column, but no table block was hovered prior.\"\n      );\n    }\n\n    this.view!.state.draggingState = {\n      draggedCellOrientation: \"col\",\n      originalIndex: this.view!.state.colIndex,\n      mousePos: event.clientX,\n    };\n    this.view!.emitUpdate();\n\n    this.editor.dispatch(\n      this.editor._tiptapEditor.state.tr.setMeta(tableHandlesPluginKey, {\n        draggedCellOrientation:\n          this.view!.state.draggingState.draggedCellOrientation,\n        originalIndex: this.view!.state.colIndex,\n        newIndex: this.view!.state.colIndex,\n        tablePos: this.view!.tablePos,\n      })\n    );\n\n    setHiddenDragImage(this.editor._tiptapEditor.view.root);\n    event.dataTransfer!.setDragImage(dragImageElement!, 0, 0);\n    event.dataTransfer!.effectAllowed = \"move\";\n  };\n\n  /**\n   * Callback that should be set on the `dragStart` event for whichever element\n   * is used as the row drag handle.\n   */\n  rowDragStart = (event: {\n    dataTransfer: DataTransfer | null;\n    clientY: number;\n  }) => {\n    if (this.view!.state === undefined) {\n      throw new Error(\n        \"Attempted to drag table row, but no table block was hovered prior.\"\n      );\n    }\n\n    this.view!.state.draggingState = {\n      draggedCellOrientation: \"row\",\n      originalIndex: this.view!.state.rowIndex,\n      mousePos: event.clientY,\n    };\n    this.view!.emitUpdate();\n\n    this.editor.dispatch(\n      this.editor._tiptapEditor.state.tr.setMeta(tableHandlesPluginKey, {\n        draggedCellOrientation:\n          this.view!.state.draggingState.draggedCellOrientation,\n        originalIndex: this.view!.state.rowIndex,\n        newIndex: this.view!.state.rowIndex,\n        tablePos: this.view!.tablePos,\n      })\n    );\n\n    setHiddenDragImage(this.editor._tiptapEditor.view.root);\n    event.dataTransfer!.setDragImage(dragImageElement!, 0, 0);\n    event.dataTransfer!.effectAllowed = \"copyMove\";\n  };\n\n  /**\n   * Callback that should be set on the `dragEnd` event for both the element\n   * used as the row drag handle, and the one used as the column drag handle.\n   */\n  dragEnd = () => {\n    if (this.view!.state === undefined) {\n      throw new Error(\n        \"Attempted to drag table row, but no table block was hovered prior.\"\n      );\n    }\n\n    this.view!.state.draggingState = undefined;\n    this.view!.emitUpdate();\n\n    this.editor.dispatch(\n      this.editor._tiptapEditor.state.tr.setMeta(tableHandlesPluginKey, null)\n    );\n\n    unsetHiddenDragImage(this.editor._tiptapEditor.view.root);\n  };\n\n  /**\n   * Freezes the drag handles. When frozen, they will stay attached to the same\n   * cell regardless of which cell is hovered by the mouse cursor.\n   */\n  freezeHandles = () => {\n    this.view!.menuFrozen = true;\n  };\n\n  /**\n   * Unfreezes the drag handles. When frozen, they will stay attached to the\n   * same cell regardless of which cell is hovered by the mouse cursor.\n   */\n  unfreezeHandles = () => {\n    this.view!.menuFrozen = false;\n  };\n}\n","import { Extension } from \"@tiptap/core\";\nimport { Node } from \"prosemirror-model\";\nimport { NodeSelection, Plugin } from \"prosemirror-state\";\nimport { CellSelection } from \"prosemirror-tables\";\nimport * as pmView from \"prosemirror-view\";\n\nimport { EditorView } from \"prosemirror-view\";\nimport type { BlockNoteEditor } from \"../../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../../schema\";\nimport { initializeESMDependencies } from \"../../../util/esmDependencies\";\nimport { createExternalHTMLExporter } from \"../../exporters/html/externalHTMLExporter\";\nimport { cleanHTMLToMarkdown } from \"../../exporters/markdown/markdownExporter\";\n\nexport async function selectedFragmentToHTML<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  view: EditorView,\n  editor: BlockNoteEditor<BSchema, I, S>\n): Promise<{\n  clipboardHTML: string;\n  externalHTML: string;\n  markdown: string;\n}> {\n  // Checks if a `blockContent` node is being copied and expands\n  // the selection to the parent `blockContainer` node. This is\n  // for the use-case in which only a block without content is\n  // selected, e.g. an image block.\n  if (\n    \"node\" in view.state.selection &&\n    (view.state.selection.node as Node).type.spec.group === \"blockContent\"\n  ) {\n    editor.dispatch(\n      editor._tiptapEditor.state.tr.setSelection(\n        new NodeSelection(view.state.doc.resolve(view.state.selection.from - 1))\n      )\n    );\n  }\n\n  // Uses default ProseMirror clipboard serialization.\n  const clipboardHTML: string = (pmView as any).__serializeForClipboard(\n    view,\n    view.state.selection.content()\n  ).dom.innerHTML;\n\n  let selectedFragment = view.state.selection.content().content;\n\n  // Checks whether block ancestry should be included when creating external\n  // HTML. If the selection is within a block content node, the block ancestry\n  // is excluded as we only care about the inline content.\n  let isWithinBlockContent = false;\n  const isWithinTable = view.state.selection instanceof CellSelection;\n  if (!isWithinTable) {\n    const fragmentWithoutParents = view.state.doc.slice(\n      view.state.selection.from,\n      view.state.selection.to,\n      false\n    ).content;\n\n    const children = [];\n    for (let i = 0; i < fragmentWithoutParents.childCount; i++) {\n      children.push(fragmentWithoutParents.child(i));\n    }\n\n    isWithinBlockContent =\n      children.find(\n        (child) =>\n          child.type.name === \"blockContainer\" ||\n          child.type.name === \"blockGroup\" ||\n          child.type.spec.group === \"blockContent\"\n      ) === undefined;\n    if (isWithinBlockContent) {\n      selectedFragment = fragmentWithoutParents;\n    }\n  }\n\n  await initializeESMDependencies();\n  const externalHTMLExporter = createExternalHTMLExporter(\n    view.state.schema,\n    editor\n  );\n  const externalHTML = externalHTMLExporter.exportProseMirrorFragment(\n    selectedFragment,\n    { simplifyBlocks: !isWithinBlockContent && !isWithinTable }\n  );\n\n  const markdown = cleanHTMLToMarkdown(externalHTML);\n\n  return { clipboardHTML, externalHTML, markdown };\n}\n\nconst copyToClipboard = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  editor: BlockNoteEditor<BSchema, I, S>,\n  view: EditorView,\n  event: ClipboardEvent\n) => {\n  // Stops the default browser copy behaviour.\n  event.preventDefault();\n  event.clipboardData!.clearData();\n\n  (async () => {\n    const { clipboardHTML, externalHTML, markdown } =\n      await selectedFragmentToHTML(view, editor);\n\n    // TODO: Writing to other MIME types not working in Safari for\n    //  some reason.\n    event.clipboardData!.setData(\"blocknote/html\", clipboardHTML);\n    event.clipboardData!.setData(\"text/html\", externalHTML);\n    event.clipboardData!.setData(\"text/plain\", markdown);\n  })();\n};\n\nexport const createCopyToClipboardExtension = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  editor: BlockNoteEditor<BSchema, I, S>\n) =>\n  Extension.create<{ editor: BlockNoteEditor<BSchema, I, S> }, undefined>({\n    name: \"copyToClipboard\",\n    addProseMirrorPlugins() {\n      return [\n        new Plugin({\n          props: {\n            handleDOMEvents: {\n              copy(view, event) {\n                copyToClipboard(editor, view, event);\n                // Prevent default PM handler to be called\n                return true;\n              },\n              cut(view, event) {\n                copyToClipboard(editor, view, event);\n                view.dispatch(view.state.tr.deleteSelection());\n                // Prevent default PM handler to be called\n                return true;\n              },\n              // This is for the use-case in which only a block without content\n              // is selected, e.g. an image block, and dragged (not using the\n              // drag handle).\n              dragstart(view, event) {\n                // Checks if a `NodeSelection` is active.\n                if (!(\"node\" in view.state.selection)) {\n                  return;\n                }\n\n                // Checks if a `blockContent` node is being dragged.\n                if (\n                  (view.state.selection.node as Node).type.spec.group !==\n                  \"blockContent\"\n                ) {\n                  return;\n                }\n\n                // Expands the selection to the parent `blockContainer` node.\n                editor.dispatch(\n                  editor._tiptapEditor.state.tr.setSelection(\n                    new NodeSelection(\n                      view.state.doc.resolve(view.state.selection.from - 1)\n                    )\n                  )\n                );\n\n                // Stops the default browser drag start behaviour.\n                event.preventDefault();\n                event.dataTransfer!.clearData();\n\n                (async () => {\n                  const { clipboardHTML, externalHTML, markdown } =\n                    await selectedFragmentToHTML(view, editor);\n\n                  // TODO: Writing to other MIME types not working in Safari for\n                  //  some reason.\n                  event.dataTransfer!.setData(\"blocknote/html\", clipboardHTML);\n                  event.dataTransfer!.setData(\"text/html\", externalHTML);\n                  event.dataTransfer!.setData(\"text/plain\", markdown);\n                })();\n                // Prevent default PM handler to be called\n                return true;\n              },\n            },\n          },\n        }),\n      ];\n    },\n  });\n","export const acceptedMIMETypes = [\n  \"blocknote/html\",\n  \"Files\",\n  \"text/html\",\n  \"text/plain\",\n] as const;\n","import type { BlockNoteEditor } from \"../../../editor/BlockNoteEditor\";\nimport { PartialBlock } from \"../../../blocks/defaultBlocks\";\nimport {\n  BlockSchema,\n  FileBlockConfig,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../../../schema\";\nimport { getBlockInfoFromPos } from \"../../getBlockInfoFromPos\";\nimport { acceptedMIMETypes } from \"./acceptedMIMETypes\";\n\nfunction checkFileExtensionsMatch(\n  fileExtension1: string,\n  fileExtension2: string\n) {\n  if (!fileExtension1.startsWith(\".\") || !fileExtension2.startsWith(\".\")) {\n    throw new Error(`The strings provided are not valid file extensions.`);\n  }\n\n  return fileExtension1 === fileExtension2;\n}\n\nfunction checkMIMETypesMatch(mimeType1: string, mimeType2: string) {\n  const types1 = mimeType1.split(\"/\");\n  const types2 = mimeType2.split(\"/\");\n\n  if (types1.length !== 2) {\n    throw new Error(`The string ${mimeType1} is not a valid MIME type.`);\n  }\n  if (types2.length !== 2) {\n    throw new Error(`The string ${mimeType2} is not a valid MIME type.`);\n  }\n\n  if (types1[1] === \"*\" || types2[1] === \"*\") {\n    return types1[0] === types2[0];\n  }\n  if (types1[0] === \"*\" || types2[0] === \"*\") {\n    return types1[1] === types2[1];\n  }\n\n  return types1[0] === types2[0] && types1[1] === types2[1];\n}\n\nexport async function handleFileInsertion<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(event: DragEvent | ClipboardEvent, editor: BlockNoteEditor<BSchema, I, S>) {\n  if (!editor.uploadFile) {\n    return;\n  }\n\n  const dataTransfer =\n    \"dataTransfer\" in event ? event.dataTransfer : event.clipboardData;\n  if (dataTransfer === null) {\n    return;\n  }\n\n  let format: (typeof acceptedMIMETypes)[number] | null = null;\n  for (const mimeType of acceptedMIMETypes) {\n    if (dataTransfer.types.includes(mimeType)) {\n      format = mimeType;\n      break;\n    }\n  }\n  if (format !== \"Files\") {\n    return;\n  }\n\n  const items = dataTransfer.items;\n  if (!items) {\n    return;\n  }\n\n  event.preventDefault();\n\n  const fileBlockConfigs = Object.values(editor.schema.blockSchema).filter(\n    (blockConfig) => blockConfig.isFileBlock\n  ) as FileBlockConfig[];\n\n  for (let i = 0; i < items.length; i++) {\n    // Gets file block corresponding to MIME type.\n    let fileBlockType = \"file\";\n    for (const fileBlockConfig of fileBlockConfigs) {\n      for (const mimeType of fileBlockConfig.fileBlockAccept || []) {\n        const isFileExtension = mimeType.startsWith(\".\");\n        const file = items[i].getAsFile();\n\n        if (file) {\n          if (\n            (!isFileExtension &&\n              file.type &&\n              checkMIMETypesMatch(items[i].type, mimeType)) ||\n            (isFileExtension &&\n              checkFileExtensionsMatch(\n                \".\" + file.name.split(\".\").pop(),\n                mimeType\n              ))\n          ) {\n            fileBlockType = fileBlockConfig.type;\n            break;\n          }\n        }\n      }\n    }\n\n    const file = items[i].getAsFile();\n    if (file) {\n      const fileBlock = {\n        type: fileBlockType,\n        props: {\n          name: file.name,\n        },\n      } as PartialBlock<BSchema, I, S>;\n\n      let insertedBlockId: string | undefined = undefined;\n\n      if (event.type === \"paste\") {\n        insertedBlockId = editor.insertBlocks(\n          [fileBlock],\n          editor.getTextCursorPosition().block,\n          \"after\"\n        )[0].id;\n      } else if (event.type === \"drop\") {\n        const coords = {\n          left: (event as DragEvent).clientX,\n          top: (event as DragEvent).clientY,\n        };\n\n        const pos = editor._tiptapEditor.view.posAtCoords(coords);\n        if (!pos) {\n          return;\n        }\n\n        const blockInfo = getBlockInfoFromPos(\n          editor._tiptapEditor.state.doc,\n          pos.pos\n        );\n\n        insertedBlockId = editor.insertBlocks(\n          [fileBlock],\n          blockInfo.id,\n          \"after\"\n        )[0].id;\n      } else {\n        return;\n      }\n\n      const updateData = await editor.uploadFile(file, insertedBlockId);\n\n      const updatedFileBlock =\n        typeof updateData === \"string\"\n          ? ({\n              props: {\n                url: updateData,\n              },\n            } as PartialBlock<BSchema, I, S>)\n          : { ...updateData };\n\n      editor.updateBlock(insertedBlockId, updatedFileBlock);\n    }\n  }\n}\n","import { Extension } from \"@tiptap/core\";\nimport { Plugin } from \"prosemirror-state\";\n\nimport type { BlockNoteEditor } from \"../../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../../schema\";\nimport { handleFileInsertion } from \"./handleFileInsertion\";\nimport { acceptedMIMETypes } from \"./acceptedMIMETypes\";\n\nexport const createDropFileExtension = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  editor: BlockNoteEditor<BSchema, I, S>\n) =>\n  Extension.create<{ editor: BlockNoteEditor<BSchema, I, S> }, undefined>({\n    name: \"dropFile\",\n    addProseMirrorPlugins() {\n      return [\n        new Plugin({\n          props: {\n            handleDOMEvents: {\n              drop(_view, event) {\n                if (!editor.isEditable) {\n                  return;\n                }\n\n                let format: (typeof acceptedMIMETypes)[number] | null = null;\n                for (const mimeType of acceptedMIMETypes) {\n                  if (event.dataTransfer!.types.includes(mimeType)) {\n                    format = mimeType;\n                    break;\n                  }\n                }\n                if (format === null) {\n                  return true;\n                }\n\n                if (format === \"Files\") {\n                  handleFileInsertion(event, editor);\n                  return true;\n                }\n\n                return false;\n              },\n            },\n          },\n        }),\n      ];\n    },\n  });\n","import { Extension } from \"@tiptap/core\";\nimport { Plugin } from \"prosemirror-state\";\n\nimport type { BlockNoteEditor } from \"../../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../../schema\";\nimport { nestedListsToBlockNoteStructure } from \"../../parsers/html/util/nestedLists\";\nimport { acceptedMIMETypes } from \"./acceptedMIMETypes\";\nimport { handleFileInsertion } from \"./handleFileInsertion\";\n\nexport const createPasteFromClipboardExtension = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  editor: BlockNoteEditor<BSchema, I, S>\n) =>\n  Extension.create<{ editor: BlockNoteEditor<BSchema, I, S> }, undefined>({\n    name: \"pasteFromClipboard\",\n    addProseMirrorPlugins() {\n      return [\n        new Plugin({\n          props: {\n            handleDOMEvents: {\n              paste(_view, event) {\n                event.preventDefault();\n\n                if (!editor.isEditable) {\n                  return;\n                }\n\n                let format: (typeof acceptedMIMETypes)[number] | undefined;\n                for (const mimeType of acceptedMIMETypes) {\n                  if (event.clipboardData!.types.includes(mimeType)) {\n                    format = mimeType;\n                    break;\n                  }\n                }\n                if (!format) {\n                  return true;\n                }\n\n                if (format === \"Files\") {\n                  handleFileInsertion(event, editor);\n                  return true;\n                }\n\n                let data = event.clipboardData!.getData(format);\n\n                if (format === \"blocknote/html\") {\n                  editor._tiptapEditor.view.pasteHTML(data);\n                  return true;\n                }\n\n                if (format === \"text/html\") {\n                  const htmlNode = nestedListsToBlockNoteStructure(data.trim());\n                  data = htmlNode.innerHTML;\n                  editor._tiptapEditor.view.pasteHTML(data);\n                  return true;\n                }\n\n                editor._tiptapEditor.view.pasteText(data);\n\n                return true;\n              },\n            },\n          },\n        }),\n      ];\n    },\n  });\n","import { Extension } from \"@tiptap/core\";\nimport { defaultProps } from \"../../blocks/defaultProps\";\n\nexport const BackgroundColorExtension = Extension.create({\n  name: \"blockBackgroundColor\",\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: [\"blockContainer\"],\n        attributes: {\n          backgroundColor: {\n            default: defaultProps.backgroundColor.default,\n            parseHTML: (element) =>\n              element.hasAttribute(\"data-background-color\")\n                ? element.getAttribute(\"data-background-color\")\n                : defaultProps.backgroundColor.default,\n            renderHTML: (attributes) => {\n              if (\n                attributes.backgroundColor ===\n                defaultProps.backgroundColor.default\n              ) {\n                return {};\n              }\n              return {\n                \"data-background-color\": attributes.backgroundColor,\n              };\n            },\n          },\n        },\n      },\n    ];\n  },\n});\n","import { Extension } from \"@tiptap/core\";\n\nexport const TextAlignmentExtension = Extension.create({\n  name: \"textAlignment\",\n\n  addGlobalAttributes() {\n    return [\n      {\n        // Attribute is applied to block content instead of container so that child blocks don't inherit the text\n        // alignment styling.\n        types: [\n          \"paragraph\",\n          \"heading\",\n          \"bulletListItem\",\n          \"numberedListItem\",\n          \"checkListItem\",\n        ],\n        attributes: {\n          textAlignment: {\n            default: \"left\",\n            parseHTML: (element) => {\n              return element.getAttribute(\"data-text-alignment\");\n            },\n            renderHTML: (attributes) => {\n              if (attributes.textAlignment === \"left\") {\n                return {};\n              }\n              return {\n                \"data-text-alignment\": attributes.textAlignment,\n              };\n            },\n          },\n        },\n      },\n    ];\n  },\n});\n","import { Extension } from \"@tiptap/core\";\nimport { defaultProps } from \"../../blocks/defaultProps\";\n\nexport const TextColorExtension = Extension.create({\n  name: \"blockTextColor\",\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: [\"blockContainer\"],\n        attributes: {\n          textColor: {\n            default: defaultProps.textColor.default,\n            parseHTML: (element) =>\n              element.hasAttribute(\"data-text-color\")\n                ? element.getAttribute(\"data-text-color\")\n                : defaultProps.textColor.default,\n            renderHTML: (attributes) => {\n              if (attributes.textColor === defaultProps.textColor.default) {\n                return {};\n              }\n              return {\n                \"data-text-color\": attributes.textColor,\n              };\n            },\n          },\n        },\n      },\n    ];\n  },\n});\n","import { Extension } from \"@tiptap/core\";\nimport { Plugin, PluginKey } from \"prosemirror-state\";\n\n// based on https://github.com/ueberdosis/tiptap/blob/40a9404c94c7fef7900610c195536384781ae101/demos/src/Experiments/TrailingNode/Vue/trailing-node.ts\n\n/**\n * Extension based on:\n * - https://github.com/ueberdosis/tiptap/blob/v1/packages/tiptap-extensions/src/extensions/TrailingNode.js\n * - https://github.com/remirror/remirror/blob/e0f1bec4a1e8073ce8f5500d62193e52321155b9/packages/prosemirror-trailing-node/src/trailing-node-plugin.ts\n */\n\nexport interface TrailingNodeOptions {\n  node: string;\n}\n\n/**\n * Add a trailing node to the document so the user can always click at the bottom of the document and start typing\n */\nexport const TrailingNode = Extension.create<TrailingNodeOptions>({\n  name: \"trailingNode\",\n\n  addProseMirrorPlugins() {\n    const plugin = new PluginKey(this.name);\n    // const disabledNodes = Object.entries(this.editor.schema.nodes)\n    //   .map(([, value]) => value)\n    //   .filter((node) => this.options.notAfter.includes(node.name));\n\n    return [\n      new Plugin({\n        key: plugin,\n        appendTransaction: (_, __, state) => {\n          const { doc, tr, schema } = state;\n          const shouldInsertNodeAtEnd = plugin.getState(state);\n          const endPosition = doc.content.size - 2;\n          const type = schema.nodes[\"blockContainer\"];\n          const contentType = schema.nodes[\"paragraph\"];\n          if (!shouldInsertNodeAtEnd) {\n            return;\n          }\n\n          return tr.insert(\n            endPosition,\n            type.create(undefined, contentType.create())\n          );\n        },\n        state: {\n          init: (_, _state) => {\n            // (maybe fix): use same logic as apply() here\n            // so it works when initializing\n          },\n          apply: (tr, value) => {\n            if (!tr.docChanged) {\n              return value;\n            }\n\n            let lastNode = tr.doc.lastChild;\n\n            if (!lastNode || lastNode.type.name !== \"blockGroup\") {\n              throw new Error(\"Expected blockGroup\");\n            }\n\n            lastNode = lastNode.lastChild;\n\n            if (!lastNode || lastNode.type.name !== \"blockContainer\") {\n              throw new Error(\"Expected blockContainer\");\n            }\n\n            const lastContentNode = lastNode.firstChild;\n\n            if (!lastContentNode) {\n              throw new Error(\"Expected blockContent\");\n            }\n\n            // If last node is not empty (size > 4) or it doesn't contain\n            // inline content, we need to add a trailing node.\n            return (\n              lastNode.nodeSize > 4 ||\n              lastContentNode.type.spec.content !== \"inline*\"\n            );\n          },\n        },\n      }),\n    ];\n  },\n});\n","import { Plugin, PluginKey, TextSelection } from \"prosemirror-state\";\n\nconst PLUGIN_KEY = new PluginKey(\"non-editable-block\");\n// By default, typing with a node selection active will cause ProseMirror to\n// replace the node with one that contains editable content. This plugin blocks\n// this behaviour without also blocking things like keyboard shortcuts:\n//\n// - Lets through key presses that do not include alphanumeric characters. This\n// includes things like backspace/delete/home/end/etc.\n// - Lets through any key presses that include ctrl/meta keys. These will be\n// shortcuts of some kind like ctrl+C/mod+C.\n// - Special case for Enter key which creates a new paragraph block below and\n// sets the selection to it. This is just to bring the UX closer to Notion\n//\n// While a more elegant solution would probably process transactions instead of\n// keystrokes, this brings us most of the way to Notion's UX without much added\n// complexity.\nexport const NonEditableBlockPlugin = () => {\n  return new Plugin({\n    key: PLUGIN_KEY,\n    props: {\n      handleKeyDown: (view, event) => {\n        // Checks for node selection\n        if (\"node\" in view.state.selection) {\n          // Checks if key press uses ctrl/meta modifier\n          if (event.ctrlKey || event.metaKey) {\n            return false;\n          }\n          // Checks if key press is alphanumeric\n          if (event.key.length === 1) {\n            event.preventDefault();\n\n            return true;\n          }\n          // Checks if key press is Enter\n          if (\n            event.key === \"Enter\" &&\n            !event.shiftKey &&\n            !event.altKey &&\n            !event.ctrlKey &&\n            !event.metaKey\n          ) {\n            const tr = view.state.tr;\n            view.dispatch(\n              tr\n                .insert(\n                  view.state.tr.selection.$to.after(),\n                  view.state.schema.nodes[\"paragraph\"].create()\n                )\n                .setSelection(\n                  new TextSelection(\n                    tr.doc.resolve(view.state.tr.selection.$to.after() + 1)\n                  )\n                )\n            );\n\n            return true;\n          }\n        }\n\n        return false;\n      },\n    },\n  });\n};\n","import { Node } from \"@tiptap/core\";\nimport { Fragment, Node as PMNode, Slice } from \"prosemirror-model\";\nimport { NodeSelection, TextSelection } from \"prosemirror-state\";\n\nimport { getBlockInfoFromPos } from \"../api/getBlockInfoFromPos\";\nimport {\n  blockToNode,\n  inlineContentToNodes,\n  tableContentToNodes,\n} from \"../api/nodeConversions/nodeConversions\";\nimport { PartialBlock } from \"../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../editor/BlockNoteEditor\";\nimport { NonEditableBlockPlugin } from \"../extensions/NonEditableBlocks/NonEditableBlockPlugin\";\nimport {\n  BlockNoteDOMAttributes,\n  BlockSchema,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../schema\";\nimport { mergeCSSClasses } from \"../util/browser\";\nimport { UnreachableCaseError } from \"../util/typescript\";\n\n// Object containing all possible block attributes.\nconst BlockAttributes: Record<string, string> = {\n  blockColor: \"data-block-color\",\n  blockStyle: \"data-block-style\",\n  id: \"data-id\",\n  depth: \"data-depth\",\n  depthChange: \"data-depth-change\",\n};\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    block: {\n      BNCreateBlock: (pos: number) => ReturnType;\n      BNDeleteBlock: (posInBlock: number) => ReturnType;\n      BNMergeBlocks: (posBetweenBlocks: number) => ReturnType;\n      BNSplitBlock: (\n        posInBlock: number,\n        keepType?: boolean,\n        keepProps?: boolean\n      ) => ReturnType;\n      BNUpdateBlock: <\n        BSchema extends BlockSchema,\n        I extends InlineContentSchema,\n        S extends StyleSchema\n      >(\n        posInBlock: number,\n        block: PartialBlock<BSchema, I, S>\n      ) => ReturnType;\n      BNCreateOrUpdateBlock: <\n        BSchema extends BlockSchema,\n        I extends InlineContentSchema,\n        S extends StyleSchema\n      >(\n        posInBlock: number,\n        block: PartialBlock<BSchema, I, S>\n      ) => ReturnType;\n    };\n  }\n}\n\n/**\n * The main \"Block node\" documents consist of\n */\nexport const BlockContainer = Node.create<{\n  domAttributes?: BlockNoteDOMAttributes;\n  editor: BlockNoteEditor<any, any, any>;\n}>({\n  name: \"blockContainer\",\n  group: \"blockContainer\",\n  // A block always contains content, and optionally a blockGroup which contains nested blocks\n  content: \"blockContent blockGroup?\",\n  // Ensures content-specific keyboard handlers trigger first.\n  priority: 50,\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: \"div\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const attrs: Record<string, string> = {};\n          for (const [nodeAttr, HTMLAttr] of Object.entries(BlockAttributes)) {\n            if (element.getAttribute(HTMLAttr)) {\n              attrs[nodeAttr] = element.getAttribute(HTMLAttr)!;\n            }\n          }\n\n          if (element.getAttribute(\"data-node-type\") === \"blockContainer\") {\n            return attrs;\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const blockOuter = document.createElement(\"div\");\n    blockOuter.className = \"bn-block-outer\";\n    blockOuter.setAttribute(\"data-node-type\", \"blockOuter\");\n    for (const [attribute, value] of Object.entries(HTMLAttributes)) {\n      if (attribute !== \"class\") {\n        blockOuter.setAttribute(attribute, value);\n      }\n    }\n\n    const blockHTMLAttributes = {\n      ...(this.options.domAttributes?.block || {}),\n      ...HTMLAttributes,\n    };\n    const block = document.createElement(\"div\");\n    block.className = mergeCSSClasses(\"bn-block\", blockHTMLAttributes.class);\n    block.setAttribute(\"data-node-type\", this.name);\n    for (const [attribute, value] of Object.entries(blockHTMLAttributes)) {\n      if (attribute !== \"class\") {\n        block.setAttribute(attribute, value);\n      }\n    }\n\n    blockOuter.appendChild(block);\n\n    return {\n      dom: blockOuter,\n      contentDOM: block,\n    };\n  },\n\n  addCommands() {\n    return {\n      // Creates a new text block at a given position.\n      BNCreateBlock:\n        (pos) =>\n        ({ state, dispatch }) => {\n          const newBlock =\n            state.schema.nodes[\"blockContainer\"].createAndFill()!;\n\n          if (dispatch) {\n            state.tr.insert(pos, newBlock).scrollIntoView();\n          }\n\n          return true;\n        },\n      // Deletes a block at a given position.\n      BNDeleteBlock:\n        (posInBlock) =>\n        ({ state, dispatch }) => {\n          const blockInfo = getBlockInfoFromPos(state.doc, posInBlock);\n          if (blockInfo === undefined) {\n            return false;\n          }\n\n          const { startPos, endPos } = blockInfo;\n\n          if (dispatch) {\n            state.tr.deleteRange(startPos, endPos);\n          }\n\n          return true;\n        },\n      // Updates a block at a given position.\n      BNUpdateBlock:\n        (posInBlock, block) =>\n        ({ state, dispatch }) => {\n          const blockInfo = getBlockInfoFromPos(state.doc, posInBlock);\n          if (blockInfo === undefined) {\n            return false;\n          }\n\n          const { startPos, endPos, node, contentNode } = blockInfo;\n\n          if (dispatch) {\n            // Adds blockGroup node with child blocks if necessary.\n            if (block.children !== undefined) {\n              const childNodes = [];\n\n              // Creates ProseMirror nodes for each child block, including their descendants.\n              for (const child of block.children) {\n                childNodes.push(\n                  blockToNode(\n                    child,\n                    state.schema,\n                    this.options.editor.schema.styleSchema\n                  )\n                );\n              }\n\n              // Checks if a blockGroup node already exists.\n              if (node.childCount === 2) {\n                // Replaces all child nodes in the existing blockGroup with the ones created earlier.\n                state.tr.replace(\n                  startPos + contentNode.nodeSize + 1,\n                  endPos - 1,\n                  new Slice(Fragment.from(childNodes), 0, 0)\n                );\n              } else {\n                // Inserts a new blockGroup containing the child nodes created earlier.\n                state.tr.insert(\n                  startPos + contentNode.nodeSize,\n                  state.schema.nodes[\"blockGroup\"].create({}, childNodes)\n                );\n              }\n            }\n\n            const oldType = contentNode.type.name;\n            const newType = block.type || oldType;\n\n            // The code below determines the new content of the block.\n            // or \"keep\" to keep as-is\n            let content: PMNode[] | \"keep\" = \"keep\";\n\n            // Has there been any custom content provided?\n            if (block.content) {\n              if (typeof block.content === \"string\") {\n                // Adds a single text node with no marks to the content.\n                content = inlineContentToNodes(\n                  [block.content],\n                  state.schema,\n                  this.options.editor.schema.styleSchema\n                );\n              } else if (Array.isArray(block.content)) {\n                // Adds a text node with the provided styles converted into marks to the content,\n                // for each InlineContent object.\n                content = inlineContentToNodes(\n                  block.content,\n                  state.schema,\n                  this.options.editor.schema.styleSchema\n                );\n              } else if (block.content.type === \"tableContent\") {\n                content = tableContentToNodes(\n                  block.content,\n                  state.schema,\n                  this.options.editor.schema.styleSchema\n                );\n              } else {\n                throw new UnreachableCaseError(block.content.type);\n              }\n            } else {\n              // no custom content has been provided, use existing content IF possible\n\n              // Since some block types contain inline content and others don't,\n              // we either need to call setNodeMarkup to just update type &\n              // attributes, or replaceWith to replace the whole blockContent.\n              const oldContentType = state.schema.nodes[oldType].spec.content;\n              const newContentType = state.schema.nodes[newType].spec.content;\n\n              if (oldContentType === \"\") {\n                // keep old content, because it's empty anyway and should be compatible with\n                // any newContentType\n              } else if (newContentType !== oldContentType) {\n                // the content type changed, replace the previous content\n                content = [];\n              } else {\n                // keep old content, because the content type is the same and should be compatible\n              }\n            }\n\n            // Now, changes the blockContent node type and adds the provided props\n            // as attributes. Also preserves all existing attributes that are\n            // compatible with the new type.\n            //\n            // Use either setNodeMarkup or replaceWith depending on whether the\n            // content is being replaced or not.\n            if (content === \"keep\") {\n              // use setNodeMarkup to only update the type and attributes\n              state.tr.setNodeMarkup(\n                startPos,\n                block.type === undefined\n                  ? undefined\n                  : state.schema.nodes[block.type],\n                {\n                  ...contentNode.attrs,\n                  ...block.props,\n                }\n              );\n            } else {\n              // use replaceWith to replace the content and the block itself\n              // also  reset the selection since replacing the block content\n              // sets it to the next block.\n              state.tr\n                .replaceWith(\n                  startPos,\n                  endPos,\n                  state.schema.nodes[newType].create(\n                    {\n                      ...contentNode.attrs,\n                      ...block.props,\n                    },\n                    content\n                  )\n                )\n                // If the node doesn't contain editable content, we want to\n                // select the whole node. But if it does have editable content,\n                // we want to set the selection to the start of it.\n                .setSelection(\n                  state.schema.nodes[newType].spec.content === \"\"\n                    ? new NodeSelection(state.tr.doc.resolve(startPos))\n                    : state.schema.nodes[newType].spec.content === \"inline*\"\n                    ? new TextSelection(state.tr.doc.resolve(startPos))\n                    : // Need to offset the position as we have to get through the\n                      // `tableRow` and `tableCell` nodes to get to the\n                      // `tableParagraph` node we want to set the selection in.\n                      new TextSelection(state.tr.doc.resolve(startPos + 4))\n                );\n            }\n\n            // Adds all provided props as attributes to the parent blockContainer node too, and also preserves existing\n            // attributes.\n            state.tr.setNodeMarkup(startPos - 1, undefined, {\n              ...node.attrs,\n              ...block.props,\n            });\n          }\n\n          return true;\n        },\n      // Appends the text contents of a block to the nearest previous block, given a position between them. Children of\n      // the merged block are moved out of it first, rather than also being merged.\n      //\n      // In the example below, the position passed into the function is between Block1 and Block2.\n      //\n      // Block1\n      //    Block2\n      // Block3\n      //    Block4\n      //        Block5\n      //\n      // Becomes:\n      //\n      // Block1\n      //    Block2Block3\n      // Block4\n      //     Block5\n      BNMergeBlocks:\n        (posBetweenBlocks) =>\n        ({ state, dispatch }) => {\n          const nextNodeIsBlock =\n            state.doc.resolve(posBetweenBlocks + 1).node().type.name ===\n            \"blockContainer\";\n          const prevNodeIsBlock =\n            state.doc.resolve(posBetweenBlocks - 1).node().type.name ===\n            \"blockContainer\";\n\n          if (!nextNodeIsBlock || !prevNodeIsBlock) {\n            return false;\n          }\n\n          const nextBlockInfo = getBlockInfoFromPos(\n            state.doc,\n            posBetweenBlocks + 1\n          );\n\n          const { node, contentNode, startPos, endPos, depth } = nextBlockInfo!;\n\n          // Removes a level of nesting all children of the next block by 1 level, if it contains both content and block\n          // group nodes.\n          if (node.childCount === 2) {\n            const childBlocksStart = state.doc.resolve(\n              startPos + contentNode.nodeSize + 1\n            );\n            const childBlocksEnd = state.doc.resolve(endPos - 1);\n            const childBlocksRange =\n              childBlocksStart.blockRange(childBlocksEnd);\n\n            // Moves the block group node inside the block into the block group node that the current block is in.\n            if (dispatch) {\n              state.tr.lift(childBlocksRange!, depth - 1);\n            }\n          }\n\n          let prevBlockEndPos = posBetweenBlocks - 1;\n          let prevBlockInfo = getBlockInfoFromPos(state.doc, prevBlockEndPos);\n\n          // Finds the nearest previous block, regardless of nesting level.\n          while (prevBlockInfo!.numChildBlocks > 0) {\n            prevBlockEndPos--;\n            prevBlockInfo = getBlockInfoFromPos(state.doc, prevBlockEndPos);\n            if (prevBlockInfo === undefined) {\n              return false;\n            }\n          }\n\n          // Deletes next block and adds its text content to the nearest previous block.\n\n          if (dispatch) {\n            dispatch(\n              state.tr\n                .deleteRange(startPos, startPos + contentNode.nodeSize)\n                .replace(\n                  prevBlockEndPos - 1,\n                  startPos,\n                  new Slice(contentNode.content, 0, 0)\n                )\n                .scrollIntoView()\n            );\n\n            state.tr.setSelection(\n              new TextSelection(state.doc.resolve(prevBlockEndPos - 1))\n            );\n          }\n\n          return true;\n        },\n      // Splits a block at a given position. Content after the position is moved to a new block below, at the same\n      // nesting level.\n      // - `keepType` is usually false, unless the selection is at the start of\n      // a block.\n      // - `keepProps` is usually true when `keepType` is true, except for when\n      // creating new list item blocks with Enter.\n      BNSplitBlock:\n        (posInBlock, keepType, keepProps) =>\n        ({ state, dispatch }) => {\n          const blockInfo = getBlockInfoFromPos(state.doc, posInBlock);\n          if (blockInfo === undefined) {\n            return false;\n          }\n\n          const { contentNode, contentType, startPos, endPos, depth } =\n            blockInfo;\n\n          const originalBlockContent = state.doc.cut(startPos + 1, posInBlock);\n          const newBlockContent = state.doc.cut(posInBlock, endPos - 1);\n\n          const newBlock =\n            state.schema.nodes[\"blockContainer\"].createAndFill()!;\n\n          const newBlockInsertionPos = endPos + 1;\n          const newBlockContentPos = newBlockInsertionPos + 2;\n\n          if (dispatch) {\n            // Creates a new block. Since the schema requires it to have a content node, a paragraph node is created\n            // automatically, spanning newBlockContentPos to newBlockContentPos + 1.\n            state.tr.insert(newBlockInsertionPos, newBlock);\n\n            // Replaces the content of the newly created block's content node. Doesn't replace the whole content node so\n            // its type doesn't change.\n            state.tr.replace(\n              newBlockContentPos,\n              newBlockContentPos + 1,\n              newBlockContent.content.size > 0\n                ? new Slice(\n                    Fragment.from(newBlockContent),\n                    depth + 2,\n                    depth + 2\n                  )\n                : undefined\n            );\n\n            // Changes the type of the content node. The range doesn't matter as long as both from and to positions are\n            // within the content node.\n            if (keepType) {\n              state.tr.setBlockType(\n                newBlockContentPos,\n                newBlockContentPos,\n                state.schema.node(contentType).type,\n                keepProps ? contentNode.attrs : undefined\n              );\n            }\n\n            // Sets the selection to the start of the new block's content node.\n            state.tr.setSelection(\n              new TextSelection(state.doc.resolve(newBlockContentPos))\n            );\n\n            // Replaces the content of the original block's content node. Doesn't replace the whole content node so its\n            // type doesn't change.\n            state.tr.replace(\n              startPos + 1,\n              endPos - 1,\n              originalBlockContent.content.size > 0\n                ? new Slice(\n                    Fragment.from(originalBlockContent),\n                    depth + 2,\n                    depth + 2\n                  )\n                : undefined\n            );\n\n            state.tr.scrollIntoView();\n          }\n\n          return true;\n        },\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [NonEditableBlockPlugin()];\n  },\n\n  addKeyboardShortcuts() {\n    // handleBackspace is partially adapted from https://github.com/ueberdosis/tiptap/blob/ed56337470efb4fd277128ab7ef792b37cfae992/packages/core/src/extensions/keymap.ts\n    const handleBackspace = () =>\n      this.editor.commands.first(({ commands }) => [\n        // Deletes the selection if it's not empty.\n        () => commands.deleteSelection(),\n        // Undoes an input rule if one was triggered in the last editor state change.\n        () => commands.undoInputRule(),\n        // Reverts block content type to a paragraph if the selection is at the start of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { contentType, startPos } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart = state.selection.from === startPos + 1;\n            const isParagraph = contentType.name === \"paragraph\";\n\n            if (selectionAtBlockStart && !isParagraph) {\n              return commands.BNUpdateBlock(state.selection.from, {\n                type: \"paragraph\",\n                props: {},\n              });\n            }\n\n            return false;\n          }),\n        // Removes a level of nesting if the block is indented if the selection is at the start of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { startPos } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart = state.selection.from === startPos + 1;\n\n            if (selectionAtBlockStart) {\n              return commands.liftListItem(\"blockContainer\");\n            }\n\n            return false;\n          }),\n        // Merges block with the previous one if it isn't indented, isn't the first block in the doc, and the selection\n        // is at the start of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { depth, startPos } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart = state.selection.from === startPos + 1;\n            const selectionEmpty = state.selection.empty;\n            const blockAtDocStart = startPos === 2;\n\n            const posBetweenBlocks = startPos - 1;\n\n            if (\n              !blockAtDocStart &&\n              selectionAtBlockStart &&\n              selectionEmpty &&\n              depth === 2\n            ) {\n              return commands.BNMergeBlocks(posBetweenBlocks);\n            }\n\n            return false;\n          }),\n      ]);\n\n    const handleDelete = () =>\n      this.editor.commands.first(({ commands }) => [\n        // Deletes the selection if it's not empty.\n        () => commands.deleteSelection(),\n        // Merges block with the next one (at the same nesting level or lower),\n        // if one exists, the block has no children, and the selection is at the\n        // end of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { node, depth, endPos } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const blockAtDocEnd = endPos === state.doc.nodeSize - 4;\n            const selectionAtBlockEnd = state.selection.from === endPos - 1;\n            const selectionEmpty = state.selection.empty;\n            const hasChildBlocks = node.childCount === 2;\n\n            if (\n              !blockAtDocEnd &&\n              selectionAtBlockEnd &&\n              selectionEmpty &&\n              !hasChildBlocks\n            ) {\n              let oldDepth = depth;\n              let newPos = endPos + 2;\n              let newDepth = state.doc.resolve(newPos).depth;\n\n              while (newDepth < oldDepth) {\n                oldDepth = newDepth;\n                newPos += 2;\n                newDepth = state.doc.resolve(newPos).depth;\n              }\n\n              return commands.BNMergeBlocks(newPos - 1);\n            }\n\n            return false;\n          }),\n      ]);\n\n    const handleEnter = () =>\n      this.editor.commands.first(({ commands }) => [\n        // Removes a level of nesting if the block is empty & indented, while the selection is also empty & at the start\n        // of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { contentNode, depth } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart =\n              state.selection.$anchor.parentOffset === 0;\n            const selectionEmpty =\n              state.selection.anchor === state.selection.head;\n            const blockEmpty = contentNode.childCount === 0;\n            const blockIndented = depth > 2;\n\n            if (\n              selectionAtBlockStart &&\n              selectionEmpty &&\n              blockEmpty &&\n              blockIndented\n            ) {\n              return commands.liftListItem(\"blockContainer\");\n            }\n\n            return false;\n          }),\n        // Creates a new block and moves the selection to it if the current one is empty, while the selection is also\n        // empty & at the start of the block.\n        () =>\n          commands.command(({ state, chain }) => {\n            const { contentNode, endPos } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart =\n              state.selection.$anchor.parentOffset === 0;\n            const selectionEmpty =\n              state.selection.anchor === state.selection.head;\n            const blockEmpty = contentNode.childCount === 0;\n\n            if (selectionAtBlockStart && selectionEmpty && blockEmpty) {\n              const newBlockInsertionPos = endPos + 1;\n              const newBlockContentPos = newBlockInsertionPos + 2;\n\n              chain()\n                .BNCreateBlock(newBlockInsertionPos)\n                .setTextSelection(newBlockContentPos)\n                .run();\n\n              return true;\n            }\n\n            return false;\n          }),\n        // Splits the current block, moving content inside that's after the cursor to a new text block below. Also\n        // deletes the selection beforehand, if it's not empty.\n        () =>\n          commands.command(({ state, chain }) => {\n            const { contentNode } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart =\n              state.selection.$anchor.parentOffset === 0;\n            const blockEmpty = contentNode.childCount === 0;\n\n            if (!blockEmpty) {\n              chain()\n                .deleteSelection()\n                .BNSplitBlock(\n                  state.selection.from,\n                  selectionAtBlockStart,\n                  selectionAtBlockStart\n                )\n                .run();\n\n              return true;\n            }\n\n            return false;\n          }),\n      ]);\n\n    return {\n      Backspace: handleBackspace,\n      Delete: handleDelete,\n      Enter: handleEnter,\n      // Always returning true for tab key presses ensures they're not captured by the browser. Otherwise, they blur the\n      // editor since the browser will try to use tab for keyboard navigation.\n      Tab: () => {\n        if (\n          this.options.editor.formattingToolbar?.shown ||\n          this.options.editor.linkToolbar?.shown ||\n          this.options.editor.filePanel?.shown\n        ) {\n          // don't handle tabs if a toolbar is shown, so we can tab into / out of it\n          return false;\n        }\n        this.editor.commands.sinkListItem(\"blockContainer\");\n        return true;\n      },\n      \"Shift-Tab\": () => {\n        if (\n          this.options.editor.formattingToolbar?.shown ||\n          this.options.editor.linkToolbar?.shown ||\n          this.options.editor.filePanel?.shown\n        ) {\n          // don't handle tabs if a toolbar is shown, so we can tab into / out of it\n          return false;\n        }\n        this.editor.commands.liftListItem(\"blockContainer\");\n        return true;\n      },\n    };\n  },\n});\n","import { Node } from \"@tiptap/core\";\nimport { BlockNoteDOMAttributes } from \"../schema\";\nimport { mergeCSSClasses } from \"../util/browser\";\n\nexport const BlockGroup = Node.create<{\n  domAttributes?: BlockNoteDOMAttributes;\n}>({\n  name: \"blockGroup\",\n  group: \"blockGroup\",\n  content: \"blockContainer+\",\n\n  parseHTML() {\n    return [\n      {\n        tag: \"div\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          if (element.getAttribute(\"data-node-type\") === \"blockGroup\") {\n            // Null means the element matches, but we don't want to add any attributes to the node.\n            return null;\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const blockGroupHTMLAttributes = {\n      ...(this.options.domAttributes?.blockGroup || {}),\n      ...HTMLAttributes,\n    };\n    const blockGroup = document.createElement(\"div\");\n    blockGroup.className = mergeCSSClasses(\n      \"bn-block-group\",\n      blockGroupHTMLAttributes.class\n    );\n    blockGroup.setAttribute(\"data-node-type\", \"blockGroup\");\n    for (const [attribute, value] of Object.entries(blockGroupHTMLAttributes)) {\n      if (attribute !== \"class\") {\n        blockGroup.setAttribute(attribute, value);\n      }\n    }\n\n    return {\n      dom: blockGroup,\n      contentDOM: blockGroup,\n    };\n  },\n});\n","import {Node} from \"@tiptap/core\";\n\nexport const Doc = Node.create({\n    name: \"doc\",\n    topNode: true,\n    content: \"blockGroup\",\n});\n","import { Extension, Extensions, extensions } from \"@tiptap/core\";\n\nimport type { BlockNoteEditor } from \"./BlockNoteEditor\";\n\nimport Collaboration from \"@tiptap/extension-collaboration\";\nimport CollaborationCursor from \"@tiptap/extension-collaboration-cursor\";\nimport { Dropcursor } from \"@tiptap/extension-dropcursor\";\nimport { Gapcursor } from \"@tiptap/extension-gapcursor\";\nimport { HardBreak } from \"@tiptap/extension-hard-break\";\nimport { History } from \"@tiptap/extension-history\";\nimport { Link } from \"@tiptap/extension-link\";\nimport { Text } from \"@tiptap/extension-text\";\nimport * as Y from \"yjs\";\nimport { createCopyToClipboardExtension } from \"../api/clipboard/toClipboard/copyExtension\";\nimport { createDropFileExtension } from \"../api/clipboard/fromClipboard/fileDropExtension\";\nimport { createPasteFromClipboardExtension } from \"../api/clipboard/fromClipboard/pasteExtension\";\nimport { BackgroundColorExtension } from \"../extensions/BackgroundColor/BackgroundColorExtension\";\nimport { TextAlignmentExtension } from \"../extensions/TextAlignment/TextAlignmentExtension\";\nimport { TextColorExtension } from \"../extensions/TextColor/TextColorExtension\";\nimport { TrailingNode } from \"../extensions/TrailingNode/TrailingNodeExtension\";\nimport UniqueID from \"../extensions/UniqueID/UniqueID\";\nimport { BlockContainer, BlockGroup, Doc } from \"../pm-nodes\";\nimport {\n  BlockNoteDOMAttributes,\n  BlockSchema,\n  BlockSpecs,\n  InlineContentSchema,\n  InlineContentSpecs,\n  StyleSchema,\n  StyleSpecs,\n} from \"../schema\";\n\n/**\n * Get all the Tiptap extensions BlockNote is configured with by default\n */\nexport const getBlockNoteExtensions = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(opts: {\n  editor: BlockNoteEditor<BSchema, I, S>;\n  domAttributes: Partial<BlockNoteDOMAttributes>;\n  blockSpecs: BlockSpecs;\n  inlineContentSpecs: InlineContentSpecs;\n  styleSpecs: StyleSpecs;\n  trailingBlock: boolean | undefined;\n  collaboration?: {\n    fragment: Y.XmlFragment;\n    user: {\n      name: string;\n      color: string;\n      [key: string]: string;\n    };\n    provider: any;\n    renderCursor?: (user: any) => HTMLElement;\n  };\n  disableExtensions: string[] | undefined;\n  setIdAttribute?: boolean;\n}) => {\n  const ret: Extensions = [\n    extensions.ClipboardTextSerializer,\n    extensions.Commands,\n    extensions.Editable,\n    extensions.FocusEvents,\n    extensions.Tabindex,\n\n    // DevTools,\n    Gapcursor,\n\n    // DropCursor,\n    UniqueID.configure({\n      types: [\"blockContainer\"],\n      setIdAttribute: opts.setIdAttribute,\n    }),\n    HardBreak.extend({ priority: 10 }),\n    // Comments,\n\n    // basics:\n    Text,\n\n    // marks:\n    Link.extend({\n      addKeyboardShortcuts() {\n        return {\n          \"Mod-k\": () => {\n            this.editor.commands.toggleLink({ href: \"\" });\n            return true;\n          },\n        };\n      },\n    }),\n    ...Object.values(opts.styleSpecs).map((styleSpec) => {\n      return styleSpec.implementation.mark;\n    }),\n\n    TextColorExtension,\n\n    BackgroundColorExtension,\n    TextAlignmentExtension,\n\n    // make sure escape blurs editor, so that we can tab to other elements in the host page (accessibility)\n    Extension.create({\n      name: \"OverrideEscape\",\n      addKeyboardShortcuts() {\n        return {\n          Escape: () => {\n            if (opts.editor.suggestionMenus.shown) {\n              // escape is handled by suggestionmenu\n              return false;\n            }\n            return this.editor.commands.blur();\n          },\n        };\n      },\n    }),\n\n    // nodes\n    Doc,\n    BlockContainer.configure({\n      editor: opts.editor,\n      domAttributes: opts.domAttributes,\n    }),\n    BlockGroup.configure({\n      domAttributes: opts.domAttributes,\n    }),\n    ...Object.values(opts.inlineContentSpecs)\n      .filter((a) => a.config !== \"link\" && a.config !== \"text\")\n      .map((inlineContentSpec) => {\n        return inlineContentSpec.implementation!.node.configure({\n          editor: opts.editor as any,\n        });\n      }),\n\n    ...Object.values(opts.blockSpecs).flatMap((blockSpec) => {\n      return [\n        // dependent nodes (e.g.: tablecell / row)\n        ...(blockSpec.implementation.requiredExtensions || []).map((ext) =>\n          ext.configure({\n            editor: opts.editor,\n            domAttributes: opts.domAttributes,\n          })\n        ),\n        // the actual node itself\n        blockSpec.implementation.node.configure({\n          editor: opts.editor,\n          domAttributes: opts.domAttributes,\n        }),\n      ];\n    }),\n    createCopyToClipboardExtension(opts.editor),\n    createPasteFromClipboardExtension(opts.editor),\n    createDropFileExtension(opts.editor),\n\n    Dropcursor.configure({ width: 5, color: \"#ddeeff\" }),\n    // This needs to be at the bottom of this list, because Key events (such as enter, when selecting a /command),\n    // should be handled before Enter handlers in other components like splitListItem\n    ...(opts.trailingBlock === undefined || opts.trailingBlock\n      ? [TrailingNode]\n      : []),\n  ];\n\n  if (opts.collaboration) {\n    ret.push(\n      Collaboration.configure({\n        fragment: opts.collaboration.fragment,\n      })\n    );\n    if (opts.collaboration.provider?.awareness) {\n      const defaultRender = (user: { color: string; name: string }) => {\n        const cursor = document.createElement(\"span\");\n\n        cursor.classList.add(\"collaboration-cursor__caret\");\n        cursor.setAttribute(\"style\", `border-color: ${user.color}`);\n\n        const label = document.createElement(\"span\");\n\n        label.classList.add(\"collaboration-cursor__label\");\n        label.setAttribute(\"style\", `background-color: ${user.color}`);\n        label.insertBefore(document.createTextNode(user.name), null);\n\n        const nonbreakingSpace1 = document.createTextNode(\"\\u2060\");\n        const nonbreakingSpace2 = document.createTextNode(\"\\u2060\");\n        cursor.insertBefore(nonbreakingSpace1, null);\n        cursor.insertBefore(label, null);\n        cursor.insertBefore(nonbreakingSpace2, null);\n        return cursor;\n      };\n      ret.push(\n        CollaborationCursor.configure({\n          user: opts.collaboration.user,\n          render: opts.collaboration.renderCursor || defaultRender,\n          provider: opts.collaboration.provider,\n        })\n      );\n    }\n  } else {\n    // disable history extension when collaboration is enabled as Yjs takes care of undo / redo\n    ret.push(History);\n  }\n\n  const disableExtensions: string[] = opts.disableExtensions || [];\n  return ret.filter((ex) => !disableExtensions.includes(ex.name));\n};\n","import { Fragment, Schema, Slice } from \"@tiptap/pm/model\";\nimport { EditorView } from \"@tiptap/pm/view\";\n\n// helper function to remove a child from a fragment\nfunction removeChild(node: Fragment, n: number) {\n  const children: any[] = [];\n  node.forEach((child, _, i) => {\n    if (i !== n) {\n      children.push(child);\n    }\n  });\n  return Fragment.from(children);\n}\n\n/**\n * Wrap adjacent tableRow items in a table.\n *\n * This makes sure the content that we paste is always a table (and not a tableRow)\n * A table works better for the remaing paste handling logic, as it's actually a blockContent node\n */\nexport function wrapTableRows(f: Fragment, schema: Schema) {\n  const newItems: any[] = [];\n  for (let i = 0; i < f.childCount; i++) {\n    if (f.child(i).type.name === \"tableRow\") {\n      if (\n        newItems.length > 0 &&\n        newItems[newItems.length - 1].type.name === \"table\"\n      ) {\n        // append to existing table\n        const prevTable = newItems[newItems.length - 1];\n        const newTable = prevTable.copy(prevTable.content.addToEnd(f.child(i)));\n        newItems[newItems.length - 1] = newTable;\n      } else {\n        // create new table to wrap tableRow with\n        const newTable = schema.nodes.table.create(undefined, f.child(i));\n        newItems.push(newTable);\n      }\n    } else {\n      newItems.push(f.child(i));\n    }\n  }\n  f = Fragment.from(newItems);\n  return f;\n}\n\n/**\n * fix for https://github.com/ProseMirror/prosemirror/issues/1430#issuecomment-1822570821\n *\n * Without this fix, pasting two paragraphs would cause the second one to be indented in the other\n * this fix wraps every element in the slice in it's own blockContainer, to prevent Prosemirror from nesting the\n * elements on paste.\n *\n * The exception is when we encounter blockGroups with listitems, because those actually should be nested\n */\nexport function transformPasted(slice: Slice, view: EditorView) {\n  let f = Fragment.from(slice.content);\n  f = wrapTableRows(f, view.state.schema);\n\n  for (let i = 0; i < f.childCount; i++) {\n    if (f.child(i).type.spec.group === \"blockContent\") {\n      const content = [f.child(i)];\n\n      // when there is a blockGroup with lists, it should be nested in the new blockcontainer\n      // (if we remove this if-block, the nesting bug will be fixed, but lists won't be nested correctly)\n      if (\n        i + 1 < f.childCount &&\n        f.child(i + 1).type.spec.group === \"blockGroup\"\n      ) {\n        const nestedChild = f\n          .child(i + 1)\n          .child(0)\n          .child(0);\n\n        if (\n          nestedChild.type.name === \"bulletListItem\" ||\n          nestedChild.type.name === \"numberedListItem\" ||\n          nestedChild.type.name === \"checkListItem\"\n        ) {\n          content.push(f.child(i + 1));\n          f = removeChild(f, i + 1);\n        }\n      }\n      const container = view.state.schema.nodes.blockContainer.create(\n        undefined,\n        content\n      );\n      f = f.replaceChild(i, container);\n    }\n  }\n  return new Slice(f, slice.openStart, slice.openEnd);\n}\n","import {\n  defaultBlockSpecs,\n  defaultInlineContentSpecs,\n  defaultStyleSpecs,\n} from \"../blocks/defaultBlocks\";\nimport {\n  BlockSchema,\n  BlockSchemaFromSpecs,\n  BlockSpecs,\n  InlineContentSchema,\n  InlineContentSchemaFromSpecs,\n  InlineContentSpecs,\n  StyleSchema,\n  StyleSchemaFromSpecs,\n  StyleSpecs,\n  getBlockSchemaFromSpecs,\n  getInlineContentSchemaFromSpecs,\n  getStyleSchemaFromSpecs,\n} from \"../schema\";\nimport type {\n  BlockNoDefaults,\n  PartialBlockNoDefaults,\n} from \"../schema/blocks/types\";\nimport type { BlockNoteEditor } from \"./BlockNoteEditor\";\n\nfunction removeUndefined<T extends Record<string, any> | undefined>(obj: T): T {\n  if (!obj) {\n    return obj;\n  }\n  return Object.fromEntries(\n    Object.entries(obj).filter(([, value]) => value !== undefined)\n  ) as T;\n}\n\nexport class BlockNoteSchema<\n  BSchema extends BlockSchema,\n  ISchema extends InlineContentSchema,\n  SSchema extends StyleSchema\n> {\n  public readonly blockSpecs: BlockSpecs;\n  public readonly inlineContentSpecs: InlineContentSpecs;\n  public readonly styleSpecs: StyleSpecs;\n\n  public readonly blockSchema: BSchema;\n  public readonly inlineContentSchema: ISchema;\n  public readonly styleSchema: SSchema;\n\n  // Helper so that you can use typeof schema.BlockNoteEditor\n  public readonly BlockNoteEditor: BlockNoteEditor<BSchema, ISchema, SSchema> =\n    \"only for types\" as any;\n\n  public readonly Block: BlockNoDefaults<BSchema, ISchema, SSchema> =\n    \"only for types\" as any;\n\n  public readonly PartialBlock: PartialBlockNoDefaults<\n    BSchema,\n    ISchema,\n    SSchema\n  > = \"only for types\" as any;\n\n  public static create<\n    BSpecs extends BlockSpecs = typeof defaultBlockSpecs,\n    ISpecs extends InlineContentSpecs = typeof defaultInlineContentSpecs,\n    SSpecs extends StyleSpecs = typeof defaultStyleSpecs\n  >(options?: {\n    /**\n     * A list of custom block types that should be available in the editor.\n     */\n    blockSpecs?: BSpecs;\n    /**\n     * A list of custom InlineContent types that should be available in the editor.\n     */\n    inlineContentSpecs?: ISpecs;\n    /**\n     * A list of custom Styles that should be available in the editor.\n     */\n    styleSpecs?: SSpecs;\n  }) {\n    return new BlockNoteSchema<\n      BlockSchemaFromSpecs<BSpecs>,\n      InlineContentSchemaFromSpecs<ISpecs>,\n      StyleSchemaFromSpecs<SSpecs>\n    >(options);\n    // as BlockNoteSchema<\n    // BlockSchemaFromSpecs<BSpecs>,\n    // InlineContentSchemaFromSpecs<ISpecs>,\n    // StyleSchemaFromSpecs<SSpecs>\n    // >;\n  }\n\n  constructor(opts?: {\n    blockSpecs?: BlockSpecs;\n    inlineContentSpecs?: InlineContentSpecs;\n    styleSpecs?: StyleSpecs;\n  }) {\n    this.blockSpecs = removeUndefined(opts?.blockSpecs) || defaultBlockSpecs;\n    this.inlineContentSpecs =\n      removeUndefined(opts?.inlineContentSpecs) || defaultInlineContentSpecs;\n    this.styleSpecs = removeUndefined(opts?.styleSpecs) || defaultStyleSpecs;\n\n    this.blockSchema = getBlockSchemaFromSpecs(this.blockSpecs) as any;\n    this.inlineContentSchema = getInlineContentSchemaFromSpecs(\n      this.inlineContentSpecs\n    ) as any;\n    this.styleSchema = getStyleSchemaFromSpecs(this.styleSpecs) as any;\n  }\n}\n","import { EditorOptions, createDocument } from \"@tiptap/core\";\n// import \"./blocknote.css\";\nimport { Editor as TiptapEditor } from \"@tiptap/core\";\nimport { Node } from \"@tiptap/pm/model\";\nimport { EditorView } from \"@tiptap/pm/view\";\n\nimport { EditorState, Transaction } from \"@tiptap/pm/state\";\nimport { blockToNode } from \"../api/nodeConversions/nodeConversions\";\nimport { PartialBlock } from \"../blocks/defaultBlocks\";\nimport { StyleSchema } from \"../schema\";\n\nexport type BlockNoteTipTapEditorOptions = Partial<\n  Omit<EditorOptions, \"content\">\n> & {\n  content: PartialBlock<any, any, any>[];\n};\n\n/**\n * Custom Editor class that extends TiptapEditor and separates\n * the creation of the view from the constructor.\n */\n// @ts-ignore\nexport class BlockNoteTipTapEditor extends TiptapEditor {\n  private _state: EditorState;\n\n  public static create = (\n    options: BlockNoteTipTapEditorOptions,\n    styleSchema: StyleSchema\n  ) => {\n    // because we separate the constructor from the creation of the view,\n    // we need to patch setTimeout to prevent this code from having any effect:\n    // https://github.com/ueberdosis/tiptap/blob/45bac803283446795ad1b03f43d3746fa54a68ff/packages/core/src/Editor.ts#L117\n    const oldSetTimeout = globalThis?.window?.setTimeout;\n    if (typeof globalThis?.window?.setTimeout !== \"undefined\") {\n      globalThis.window.setTimeout = (() => {\n        return 0;\n      }) as any;\n    }\n    try {\n      return new BlockNoteTipTapEditor(options, styleSchema);\n    } finally {\n      if (oldSetTimeout) {\n        globalThis.window.setTimeout = oldSetTimeout;\n      }\n    }\n  };\n\n  protected constructor(\n    options: BlockNoteTipTapEditorOptions,\n    styleSchema: StyleSchema\n  ) {\n    // possible fix for next.js server side rendering\n    // const d = globalThis.document;\n    // const w = globalThis.window;\n    // if (!globalThis.document) {\n    //   globalThis.document = {\n    //     createElement: () => {},\n    //   };\n    // }\n\n    // options.injectCSS = false\n\n    super({ ...options, content: undefined });\n    // try {\n    //   globalThis.window = w;\n    //   } catch(e) {}\n    //   try {\n    //     globalThis.document = d;\n    //     } catch(e) {}\n\n    // This is a hack to make \"initial content detection\" by y-prosemirror (and also tiptap isEmpty)\n    // properly detect whether or not the document has changed.\n    // We change the doc.createAndFill function to make sure the initial block id is set, instead of null\n    const schema = this.schema;\n    let cache: any;\n    const oldCreateAndFill = schema.nodes.doc.createAndFill;\n    (schema.nodes.doc as any).createAndFill = (...args: any) => {\n      if (cache) {\n        return cache;\n      }\n      const ret = oldCreateAndFill.apply(schema.nodes.doc, args);\n\n      // create a copy that we can mutate (otherwise, assigning attrs is not safe and corrupts the pm state)\n      const jsonNode = JSON.parse(JSON.stringify(ret!.toJSON()));\n      jsonNode.content[0].content[0].attrs.id = \"initialBlockId\";\n\n      cache = Node.fromJSON(schema, jsonNode);\n      return cache;\n    };\n\n    let doc: Node;\n\n    try {\n      const pmNodes = options?.content.map((b) =>\n        blockToNode(b, this.schema, styleSchema).toJSON()\n      );\n      doc = createDocument(\n        {\n          type: \"doc\",\n          content: [\n            {\n              type: \"blockGroup\",\n              content: pmNodes,\n            },\n          ],\n        },\n        this.schema,\n        this.options.parseOptions\n      );\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(\n        \"Error creating document from blocks passed as `initialContent`. Caused by exception: \",\n        e\n      );\n      throw new Error(\n        \"Error creating document from blocks passed as `initialContent`:\\n\" +\n          +JSON.stringify(options.content)\n      );\n    }\n\n    // Create state immediately, so that it's available independently from the View,\n    // the way Prosemirror \"intends it to be\". This also makes sure that we can access\n    // the state before the view is created / mounted.\n    this._state = EditorState.create({\n      doc,\n      schema: this.schema,\n      // selection: selection || undefined,\n    });\n  }\n\n  get state() {\n    if (this.view) {\n      this._state = this.view.state;\n    }\n    return this._state;\n  }\n\n  dispatch(tr: Transaction) {\n    if (this.view) {\n      this.view.dispatch(tr);\n    } else {\n      // before view has been initialized\n      this._state = this.state.apply(tr);\n    }\n  }\n\n  /**\n   * Replace the default `createView` method with a custom one - which we call on mount\n   */\n  private createViewAlternative() {\n    // Without queueMicrotask, custom IC / styles will give a React FlushSync error\n    queueMicrotask(() => {\n      this.view = new EditorView(\n        { mount: this.options.element as any }, // use mount option so that we reuse the existing element instead of creating a new one\n        {\n          ...this.options.editorProps,\n          // @ts-ignore\n          dispatchTransaction: this.dispatchTransaction.bind(this),\n          state: this.state,\n        }\n      );\n\n      // `editor.view` is not yet available at this time.\n      // Therefore we will add all plugins and node views directly afterwards.\n      const newState = this.state.reconfigure({\n        plugins: this.extensionManager.plugins,\n      });\n\n      this.view.updateState(newState);\n\n      this.createNodeViews();\n\n      // emit the created event, call here manually because we blocked the default call in the constructor\n      // (https://github.com/ueberdosis/tiptap/blob/45bac803283446795ad1b03f43d3746fa54a68ff/packages/core/src/Editor.ts#L117)\n      this.commands.focus(this.options.autofocus);\n      this.emit(\"create\", { editor: this });\n      this.isInitialized = true;\n    });\n  }\n\n  /**\n   * Mounts / unmounts the editor to a dom element\n   *\n   * @param element DOM element to mount to, ur null / undefined to destroy\n   */\n  public mount = (element?: HTMLElement | null) => {\n    if (!element) {\n      this.destroy();\n    } else {\n      this.options.element = element;\n      // @ts-ignore\n      this.createViewAlternative();\n    }\n  };\n}\n\n(BlockNoteTipTapEditor.prototype as any).createView = function () {\n  // no-op\n  // Disable default call to `createView` in the Editor constructor.\n  // We should call `createView` manually only when a DOM element is available\n\n  // additional fix because onPaste and onDrop depend on installing plugins in constructor which we don't support\n  this.options.onPaste = this.options.onDrop = undefined;\n};\n","import { Plugin, PluginKey } from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\n\nconst PLUGIN_KEY = new PluginKey(`blocknote-placeholder`);\n\nexport const PlaceholderPlugin = (\n  editor: BlockNoteEditor<any, any, any>,\n  placeholders: Record<string | \"default\", string>\n) => {\n  return new Plugin({\n    key: PLUGIN_KEY,\n    view: () => {\n      const styleEl = document.createElement(\"style\");\n      const nonce = editor._tiptapEditor.options.injectNonce;\n      if (nonce) {\n        styleEl.setAttribute(\"nonce\", nonce);\n      }\n      if (editor._tiptapEditor.view.root instanceof ShadowRoot) {\n        editor._tiptapEditor.view.root.append(styleEl);\n      } else {\n        editor._tiptapEditor.view.root.head.appendChild(styleEl);\n      }\n\n      const styleSheet = styleEl.sheet!;\n\n      const getBaseSelector = (additionalSelectors = \"\") =>\n        `.bn-block-content${additionalSelectors} .bn-inline-content:has(> .ProseMirror-trailingBreak:only-child):before`;\n\n      const getSelector = (\n        blockType: string | \"default\",\n        mustBeFocused = true\n      ) => {\n        const mustBeFocusedSelector = mustBeFocused\n          ? `[data-is-empty-and-focused]`\n          : ``;\n\n        if (blockType === \"default\") {\n          return getBaseSelector(mustBeFocusedSelector);\n        }\n\n        const blockTypeSelector = `[data-content-type=\"${blockType}\"]`;\n        return getBaseSelector(mustBeFocusedSelector + blockTypeSelector);\n      };\n\n      for (const [blockType, placeholder] of Object.entries(placeholders)) {\n        const mustBeFocused = blockType === \"default\";\n\n        styleSheet.insertRule(\n          `${getSelector(blockType, mustBeFocused)}{ content: ${JSON.stringify(\n            placeholder\n          )}; }`\n        );\n\n        // For some reason, the placeholders which show when the block is focused\n        // take priority over ones which show depending on block type, so we need\n        // to make sure the block specific ones are also used when the block is\n        // focused.\n        if (!mustBeFocused) {\n          styleSheet.insertRule(\n            `${getSelector(blockType, true)}{ content: ${JSON.stringify(\n              placeholder\n            )}; }`\n          );\n        }\n      }\n\n      return {\n        destroy: () => {\n          if (editor._tiptapEditor.view.root instanceof ShadowRoot) {\n            editor._tiptapEditor.view.root.removeChild(styleEl);\n          } else {\n            editor._tiptapEditor.view.root.head.removeChild(styleEl);\n          }\n        },\n      };\n    },\n    props: {\n      // TODO: maybe also add placeholder for empty document (\"e.g.: start writing..\")\n      decorations: (state) => {\n        const { doc, selection } = state;\n\n        if (!editor.isEditable) {\n          return;\n        }\n\n        if (!selection.empty) {\n          return;\n        }\n\n        const $pos = selection.$anchor;\n        const node = $pos.parent;\n\n        if (node.content.size > 0) {\n          return null;\n        }\n\n        const before = $pos.before();\n\n        const dec = Decoration.node(before, before + node.nodeSize, {\n          \"data-is-empty-and-focused\": \"true\",\n        });\n\n        return DecorationSet.create(doc, [dec]);\n      },\n    },\n  });\n};\n","import { findChildren } from \"@tiptap/core\";\nimport { Plugin, PluginKey } from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\n\nconst PLUGIN_KEY = new PluginKey(`previous-blocks`);\n\nconst nodeAttributes: Record<string, string> = {\n  // Numbered List Items\n  index: \"index\",\n  // Headings\n  level: \"level\",\n  // All Blocks\n  type: \"type\",\n  depth: \"depth\",\n  \"depth-change\": \"depth-change\",\n};\n\n/**\n * This plugin tracks transformation of Block node attributes, so we can support CSS transitions.\n *\n * Problem it solves: ProseMirror recreates the DOM when transactions happen. So when a transaction changes a Node attribute,\n * it results in a completely new DOM element. This means CSS transitions don't work.\n *\n * Solution: When attributes change on a node, this plugin sets a data-* attribute with the \"previous\" value. This way we can still use CSS transitions. (See block.module.css)\n */\nexport const PreviousBlockTypePlugin = () => {\n  let timeout: any;\n  return new Plugin({\n    key: PLUGIN_KEY,\n    view(_editorView) {\n      return {\n        update: async (view, _prevState) => {\n          if (this.key?.getState(view.state).updatedBlocks.size > 0) {\n            // use setTimeout 0 to clear the decorations so that at least\n            // for one DOM-render the decorations have been applied\n            timeout = setTimeout(() => {\n              view.dispatch(\n                view.state.tr.setMeta(PLUGIN_KEY, { clearUpdate: true })\n              );\n            }, 0);\n          }\n        },\n        destroy: () => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        },\n      };\n    },\n    state: {\n      init() {\n        return {\n          // Block attributes, by block ID, from just before the previous transaction.\n          prevTransactionOldBlockAttrs: {} as any,\n          // Block attributes, by block ID, from just before the current transaction.\n          currentTransactionOldBlockAttrs: {} as any,\n          // Set of IDs of blocks whose attributes changed from the current transaction.\n          updatedBlocks: new Set<string>(),\n        };\n      },\n\n      apply(transaction, prev, oldState, newState) {\n        prev.currentTransactionOldBlockAttrs = {};\n        prev.updatedBlocks.clear();\n\n        if (!transaction.docChanged || oldState.doc.eq(newState.doc)) {\n          return prev;\n        }\n\n        // TODO: Instead of iterating through the entire document, only check nodes affected by the transactions. Will\n        //  also probably require checking nodes affected by the previous transaction too.\n        // We didn't get this to work yet:\n        // const transform = combineTransactionSteps(oldState.doc, [transaction]);\n        // // const { mapping } = transform;\n        // const changes = getChangedRanges(transform);\n        //\n        // changes.forEach(({ oldRange, newRange }) => {\n        // const oldNodes = findChildrenInRange(\n        //   oldState.doc,\n        //   oldRange,\n        //   (node) => node.attrs.id\n        // );\n        //\n        // const newNodes = findChildrenInRange(\n        //   newState.doc,\n        //   newRange,\n        //   (node) => node.attrs.id\n        // );\n\n        const currentTransactionOriginalOldBlockAttrs = {} as any;\n\n        const oldNodes = findChildren(oldState.doc, (node) => node.attrs.id);\n        const oldNodesById = new Map(\n          oldNodes.map((node) => [node.node.attrs.id, node])\n        );\n        const newNodes = findChildren(newState.doc, (node) => node.attrs.id);\n\n        // Traverses all block containers in the new editor state.\n        for (const node of newNodes) {\n          const oldNode = oldNodesById.get(node.node.attrs.id);\n\n          const oldContentNode = oldNode?.node.firstChild;\n          const newContentNode = node.node.firstChild;\n\n          if (oldNode && oldContentNode && newContentNode) {\n            const newAttrs = {\n              index: newContentNode.attrs.index,\n              level: newContentNode.attrs.level,\n              type: newContentNode.type.name,\n              depth: newState.doc.resolve(node.pos).depth,\n            };\n\n            let oldAttrs = {\n              index: oldContentNode.attrs.index,\n              level: oldContentNode.attrs.level,\n              type: oldContentNode.type.name,\n              depth: oldState.doc.resolve(oldNode.pos).depth,\n            };\n\n            currentTransactionOriginalOldBlockAttrs[node.node.attrs.id] =\n              oldAttrs;\n\n            // Whenever a transaction is appended by the OrderedListItemIndexPlugin, it's given the metadata:\n            // { \"orderedListIndexing\": true }\n            // These appended transactions happen immediately after any transaction which causes ordered list item\n            // indices to require updating, including those which trigger animations. Therefore, these animations are\n            // immediately overridden when the PreviousBlockTypePlugin processes the appended transaction, despite only\n            // the listItemIndex attribute changing. To solve this, oldAttrs must be edited for transactions with the\n            // \"orderedListIndexing\" metadata, so the correct animation can be re-triggered.\n            if (transaction.getMeta(\"numberedListIndexing\")) {\n              // If the block existed before the transaction, gets the attributes from before the previous transaction\n              // (i.e. the transaction that caused list item indices to need updating).\n              if (node.node.attrs.id in prev.prevTransactionOldBlockAttrs) {\n                oldAttrs =\n                  prev.prevTransactionOldBlockAttrs[node.node.attrs.id];\n              }\n\n              // Stops list item indices themselves being animated (looks smoother), unless the block's content type is\n              // changing from a numbered list item to something else.\n              if (newAttrs.type === \"numberedListItem\") {\n                oldAttrs.index = newAttrs.index;\n              }\n            }\n\n            prev.currentTransactionOldBlockAttrs[node.node.attrs.id] = oldAttrs;\n\n            // TODO: faster deep equal?\n            if (JSON.stringify(oldAttrs) !== JSON.stringify(newAttrs)) {\n              (oldAttrs as any)[\"depth-change\"] =\n                oldAttrs.depth - newAttrs.depth;\n\n              // for debugging:\n              // console.log(\n              //   \"id:\",\n              //   node.node.attrs.id,\n              //   \"previousBlockTypePlugin changes detected, oldAttrs\",\n              //   oldAttrs,\n              //   \"new\",\n              //   newAttrs\n              // );\n\n              prev.updatedBlocks.add(node.node.attrs.id);\n            }\n          }\n        }\n\n        prev.prevTransactionOldBlockAttrs =\n          currentTransactionOriginalOldBlockAttrs;\n\n        return prev;\n      },\n    },\n    props: {\n      decorations(state) {\n        const pluginState = (this as Plugin).getState(state);\n        if (pluginState.updatedBlocks.size === 0) {\n          return undefined;\n        }\n\n        const decorations: Decoration[] = [];\n\n        state.doc.descendants((node, pos) => {\n          if (!node.attrs.id) {\n            return;\n          }\n\n          if (!pluginState.updatedBlocks.has(node.attrs.id)) {\n            return;\n          }\n\n          const prevAttrs =\n            pluginState.currentTransactionOldBlockAttrs[node.attrs.id];\n          const decorationAttrs: any = {};\n\n          for (const [nodeAttr, val] of Object.entries(prevAttrs)) {\n            decorationAttrs[\"data-prev-\" + nodeAttributes[nodeAttr]] =\n              val || \"none\";\n          }\n\n          // for debugging:\n          // console.log(\n          //   \"previousBlockTypePlugin committing decorations\",\n          //   decorationAttrs\n          // );\n\n          const decoration = Decoration.node(pos, pos + node.nodeSize, {\n            ...decorationAttrs,\n          });\n\n          decorations.push(decoration);\n        });\n\n        return DecorationSet.create(state.doc, decorations);\n      },\n    },\n  });\n};\n","import { EditorOptions, Extension, getSchema } from \"@tiptap/core\";\nimport { Node, Schema } from \"prosemirror-model\";\n// import \"./blocknote.css\";\nimport * as Y from \"yjs\";\nimport {\n  insertBlocks,\n  insertContentAt,\n  removeBlocks,\n  replaceBlocks,\n  updateBlock,\n} from \"../api/blockManipulation/blockManipulation\";\nimport { createExternalHTMLExporter } from \"../api/exporters/html/externalHTMLExporter\";\nimport { blocksToMarkdown } from \"../api/exporters/markdown/markdownExporter\";\nimport { getBlockInfoFromPos } from \"../api/getBlockInfoFromPos\";\nimport {\n  inlineContentToNodes,\n  nodeToBlock,\n} from \"../api/nodeConversions/nodeConversions\";\nimport { getNodeById } from \"../api/nodeUtil\";\nimport { HTMLToBlocks } from \"../api/parsers/html/parseHTML\";\nimport { markdownToBlocks } from \"../api/parsers/markdown/parseMarkdown\";\nimport {\n  Block,\n  DefaultBlockSchema,\n  DefaultInlineContentSchema,\n  DefaultStyleSchema,\n  PartialBlock,\n} from \"../blocks/defaultBlocks\";\nimport { FilePanelProsemirrorPlugin } from \"../extensions/FilePanel/FilePanelPlugin\";\nimport { FormattingToolbarProsemirrorPlugin } from \"../extensions/FormattingToolbar/FormattingToolbarPlugin\";\nimport { LinkToolbarProsemirrorPlugin } from \"../extensions/LinkToolbar/LinkToolbarPlugin\";\nimport { SideMenuProsemirrorPlugin } from \"../extensions/SideMenu/SideMenuPlugin\";\nimport { SuggestionMenuProseMirrorPlugin } from \"../extensions/SuggestionMenu/SuggestionPlugin\";\nimport { TableHandlesProsemirrorPlugin } from \"../extensions/TableHandles/TableHandlesPlugin\";\nimport { UniqueID } from \"../extensions/UniqueID/UniqueID\";\nimport {\n  BlockIdentifier,\n  BlockNoteDOMAttributes,\n  BlockSchema,\n  BlockSpecs,\n  InlineContentSchema,\n  InlineContentSpecs,\n  PartialInlineContent,\n  StyleSchema,\n  StyleSpecs,\n  Styles,\n} from \"../schema\";\nimport { mergeCSSClasses } from \"../util/browser\";\nimport { NoInfer, UnreachableCaseError } from \"../util/typescript\";\n\nimport { getBlockNoteExtensions } from \"./BlockNoteExtensions\";\nimport { TextCursorPosition } from \"./cursorPositionTypes\";\n\nimport { Selection } from \"./selectionTypes\";\nimport { transformPasted } from \"./transformPasted\";\n\nimport { checkDefaultBlockTypeInSchema } from \"../blocks/defaultBlockTypeGuards\";\nimport { BlockNoteSchema } from \"./BlockNoteSchema\";\nimport {\n  BlockNoteTipTapEditor,\n  BlockNoteTipTapEditorOptions,\n} from \"./BlockNoteTipTapEditor\";\n\nimport { PlaceholderPlugin } from \"../extensions/Placeholder/PlaceholderPlugin\";\nimport { Dictionary } from \"../i18n/dictionary\";\nimport { en } from \"../i18n/locales\";\n\nimport { Transaction } from \"@tiptap/pm/state\";\nimport { createInternalHTMLSerializer } from \"../api/exporters/html/internalHTMLSerializer\";\nimport { PreviousBlockTypePlugin } from \"../extensions/PreviousBlockType/PreviousBlockTypePlugin\";\nimport \"../style.css\";\nimport { initializeESMDependencies } from \"../util/esmDependencies\";\n\nexport type BlockNoteEditorOptions<\n  BSchema extends BlockSchema,\n  ISchema extends InlineContentSchema,\n  SSchema extends StyleSchema\n> = {\n  /**\n   * Whether changes to blocks (like indentation, creating lists, changing headings) should be animated or not. Defaults to `true`.\n   *\n   * @default true\n   */\n  animations?: boolean;\n\n  disableExtensions: string[];\n  /**\n   * A dictionary object containing translations for the editor.\n   */\n  dictionary?: Dictionary;\n\n  /**\n   * @deprecated, provide placeholders via dictionary instead\n   */\n  placeholders: Record<string | \"default\", string>;\n\n  /**\n   * An object containing attributes that should be added to HTML elements of the editor.\n   *\n   * @example { editor: { class: \"my-editor-class\" } }\n   */\n  domAttributes: Partial<BlockNoteDOMAttributes>;\n\n  /**\n   * The content that should be in the editor when it's created, represented as an array of partial block objects.\n   */\n  initialContent: PartialBlock<\n    NoInfer<BSchema>,\n    NoInfer<ISchema>,\n    NoInfer<SSchema>\n  >[];\n  /**\n   * Use default BlockNote font and reset the styles of <p> <li> <h1> elements etc., that are used in BlockNote.\n   *\n   * @default true\n   */\n  defaultStyles: boolean;\n\n  schema: BlockNoteSchema<BSchema, ISchema, SSchema>;\n\n  /**\n   * The `uploadFile` method is what the editor uses when files need to be uploaded (for example when selecting an image to upload).\n   * This method should set when creating the editor as this is application-specific.\n   *\n   * `undefined` means the application doesn't support file uploads.\n   *\n   * @param file The file that should be uploaded.\n   * @returns The URL of the uploaded file OR an object containing props that should be set on the file block (such as an id)\n   */\n  uploadFile: (\n    file: File,\n    blockId?: string\n  ) => Promise<string | Record<string, any>>;\n\n  /**\n   * Resolve a URL of a file block to one that can be displayed or downloaded. This can be used for creating authenticated URL or\n   * implementing custom protocols / schemes\n   * @returns The URL that's\n   */\n  resolveFileUrl: (url: string) => Promise<string>;\n\n  /**\n   * When enabled, allows for collaboration between multiple users.\n   */\n  collaboration: {\n    /**\n     * The Yjs XML fragment that's used for collaboration.\n     */\n    fragment: Y.XmlFragment;\n    /**\n     * The user info for the current user that's shown to other collaborators.\n     */\n    user: {\n      name: string;\n      color: string;\n    };\n    /**\n     * A Yjs provider (used for awareness / cursor information)\n     */\n    provider: any;\n    /**\n     * Optional function to customize how cursors of users are rendered\n     */\n    renderCursor?: (user: any) => HTMLElement;\n  };\n\n  // tiptap options, undocumented\n  _tiptapOptions: Partial<EditorOptions>;\n\n  trailingBlock?: boolean;\n\n  /**\n   * Boolean indicating whether the editor is in headless mode.\n   * Headless mode means we can use features like importing / exporting blocks,\n   * but there's no underlying editor (UI) instantiated.\n   *\n   * You probably don't need to set this manually, but use the `server-util` package instead that uses this option internally\n   */\n  _headless: boolean;\n\n  /**\n   * A flag indicating whether to set an HTML ID for every block\n   *\n   * When set to `true`, on each block an id attribute will be set with the block id\n   * Otherwise, the HTML ID attribute will not be set.\n   *\n   * (note that the id is always set on the `data-id` attribute)\n   */\n  setIdAttribute?: boolean;\n};\n\nconst blockNoteTipTapOptions = {\n  enableInputRules: true,\n  enablePasteRules: true,\n  enableCoreExtensions: false,\n};\n\nexport class BlockNoteEditor<\n  BSchema extends BlockSchema = DefaultBlockSchema,\n  ISchema extends InlineContentSchema = DefaultInlineContentSchema,\n  SSchema extends StyleSchema = DefaultStyleSchema\n> {\n  private readonly _pmSchema: Schema;\n\n  /**\n   * Boolean indicating whether the editor is in headless mode.\n   * Headless mode means we can use features like importing / exporting blocks,\n   * but there's no underlying editor (UI) instantiated.\n   *\n   * You probably don't need to set this manually, but use the `server-util` package instead that uses this option internally\n   */\n  public readonly headless: boolean = false;\n\n  public readonly _tiptapEditor:\n    | BlockNoteTipTapEditor & {\n        contentComponent: any;\n      } = undefined as any; // TODO: Type should actually reflect that it can be `undefined` in headless mode\n\n  /**\n   * Used by React to store a reference to an `ElementRenderer` helper utility to make sure we can render React elements\n   * in the correct context (used by `ReactRenderUtil`)\n   */\n  public elementRenderer: ((node: any, container: HTMLElement) => void) | null =\n    null;\n\n  /**\n   * Cache of all blocks. This makes sure we don't have to \"recompute\" blocks if underlying Prosemirror Nodes haven't changed.\n   * This is especially useful when we want to keep track of the same block across multiple operations,\n   * with this cache, blocks stay the same object reference (referential equality with ===).\n   */\n  public blockCache = new WeakMap<Node, Block<any, any, any>>();\n\n  /**\n   * The dictionary contains translations for the editor.\n   */\n  public readonly dictionary: Dictionary;\n\n  /**\n   * The schema of the editor. The schema defines which Blocks, InlineContent, and Styles are available in the editor.\n   */\n  public readonly schema: BlockNoteSchema<BSchema, ISchema, SSchema>;\n\n  public readonly blockImplementations: BlockSpecs;\n  public readonly inlineContentImplementations: InlineContentSpecs;\n  public readonly styleImplementations: StyleSpecs;\n\n  public readonly formattingToolbar: FormattingToolbarProsemirrorPlugin;\n  public readonly linkToolbar: LinkToolbarProsemirrorPlugin<\n    BSchema,\n    ISchema,\n    SSchema\n  >;\n  public readonly sideMenu: SideMenuProsemirrorPlugin<\n    BSchema,\n    ISchema,\n    SSchema\n  >;\n  public readonly suggestionMenus: SuggestionMenuProseMirrorPlugin<\n    BSchema,\n    ISchema,\n    SSchema\n  >;\n  public readonly filePanel?: FilePanelProsemirrorPlugin<ISchema, SSchema>;\n  public readonly tableHandles?: TableHandlesProsemirrorPlugin<\n    ISchema,\n    SSchema\n  >;\n\n  /**\n   * The `uploadFile` method is what the editor uses when files need to be uploaded (for example when selecting an image to upload).\n   * This method should set when creating the editor as this is application-specific.\n   *\n   * `undefined` means the application doesn't support file uploads.\n   *\n   * @param file The file that should be uploaded.\n   * @returns The URL of the uploaded file OR an object containing props that should be set on the file block (such as an id)\n   */\n  public readonly uploadFile:\n    | ((file: File, blockId?: string) => Promise<string | Record<string, any>>)\n    | undefined;\n\n  private onUploadStartCallbacks: ((blockId?: string) => void)[] = [];\n  private onUploadEndCallbacks: ((blockId?: string) => void)[] = [];\n\n  public readonly resolveFileUrl: (url: string) => Promise<string>;\n\n  public get pmSchema() {\n    return this._pmSchema;\n  }\n\n  public static create<\n    BSchema extends BlockSchema = DefaultBlockSchema,\n    ISchema extends InlineContentSchema = DefaultInlineContentSchema,\n    SSchema extends StyleSchema = DefaultStyleSchema\n  >(options: Partial<BlockNoteEditorOptions<BSchema, ISchema, SSchema>> = {}) {\n    return new BlockNoteEditor<BSchema, ISchema, SSchema>(options);\n  }\n\n  protected constructor(\n    protected readonly options: Partial<BlockNoteEditorOptions<any, any, any>>\n  ) {\n    const anyOpts = options as any;\n    if (anyOpts.onEditorContentChange) {\n      throw new Error(\n        \"onEditorContentChange initialization option is deprecated, use <BlockNoteView onChange={...} />, the useEditorChange(...) hook, or editor.onChange(...)\"\n      );\n    }\n\n    if (anyOpts.onTextCursorPositionChange) {\n      throw new Error(\n        \"onTextCursorPositionChange initialization option is deprecated, use <BlockNoteView onSelectionChange={...} />, the useEditorSelectionChange(...) hook, or editor.onSelectionChange(...)\"\n      );\n    }\n\n    if (anyOpts.onEditorReady) {\n      throw new Error(\n        \"onEditorReady is deprecated. Editor is immediately ready for use after creation.\"\n      );\n    }\n\n    if (anyOpts.editable) {\n      throw new Error(\n        \"editable initialization option is deprecated, use <BlockNoteView editable={true/false} />, or alternatively editor.isEditable = true/false\"\n      );\n    }\n\n    this.dictionary = options.dictionary || en;\n\n    // apply defaults\n    const newOptions = {\n      defaultStyles: true,\n      schema: options.schema || BlockNoteSchema.create(),\n      _headless: false,\n      ...options,\n      placeholders: {\n        ...this.dictionary.placeholders,\n        ...options.placeholders,\n      },\n    };\n\n    // @ts-ignore\n    this.schema = newOptions.schema;\n    this.blockImplementations = newOptions.schema.blockSpecs;\n    this.inlineContentImplementations = newOptions.schema.inlineContentSpecs;\n    this.styleImplementations = newOptions.schema.styleSpecs;\n\n    this.formattingToolbar = new FormattingToolbarProsemirrorPlugin(this);\n    this.linkToolbar = new LinkToolbarProsemirrorPlugin(this);\n    this.sideMenu = new SideMenuProsemirrorPlugin(this);\n    this.suggestionMenus = new SuggestionMenuProseMirrorPlugin(this);\n    this.filePanel = new FilePanelProsemirrorPlugin(this as any);\n\n    if (checkDefaultBlockTypeInSchema(\"table\", this)) {\n      this.tableHandles = new TableHandlesProsemirrorPlugin(this as any);\n    }\n\n    const extensions = getBlockNoteExtensions({\n      editor: this,\n      domAttributes: newOptions.domAttributes || {},\n      blockSpecs: this.schema.blockSpecs,\n      styleSpecs: this.schema.styleSpecs,\n      inlineContentSpecs: this.schema.inlineContentSpecs,\n      collaboration: newOptions.collaboration,\n      trailingBlock: newOptions.trailingBlock,\n      disableExtensions: newOptions.disableExtensions,\n      setIdAttribute: newOptions.setIdAttribute,\n    });\n\n    const blockNoteUIExtension = Extension.create({\n      name: \"BlockNoteUIExtension\",\n\n      addProseMirrorPlugins: () => {\n        return [\n          this.formattingToolbar.plugin,\n          this.linkToolbar.plugin,\n          this.sideMenu.plugin,\n          this.suggestionMenus.plugin,\n          ...(this.filePanel ? [this.filePanel.plugin] : []),\n          ...(this.tableHandles ? [this.tableHandles.plugin] : []),\n          PlaceholderPlugin(this, newOptions.placeholders),\n          ...(this.options.animations ?? true\n            ? [PreviousBlockTypePlugin()]\n            : []),\n        ];\n      },\n    });\n    extensions.push(blockNoteUIExtension);\n\n    if (newOptions.uploadFile) {\n      const uploadFile = newOptions.uploadFile;\n      this.uploadFile = async (file, block) => {\n        this.onUploadStartCallbacks.forEach((callback) =>\n          callback.apply(this, [block])\n        );\n        try {\n          return await uploadFile(file, block);\n        } finally {\n          this.onUploadEndCallbacks.forEach((callback) =>\n            callback.apply(this, [block])\n          );\n        }\n      };\n    }\n\n    this.resolveFileUrl = newOptions.resolveFileUrl || (async (url) => url);\n    this.headless = newOptions._headless;\n\n    if (newOptions.collaboration && newOptions.initialContent) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        \"When using Collaboration, initialContent might cause conflicts, because changes should come from the collaboration provider\"\n      );\n    }\n\n    const initialContent =\n      newOptions.initialContent ||\n      (options.collaboration\n        ? [\n            {\n              type: \"paragraph\",\n              id: \"initialBlockId\",\n            },\n          ]\n        : [\n            {\n              type: \"paragraph\",\n              id: UniqueID.options.generateID(),\n            },\n          ]);\n\n    if (!Array.isArray(initialContent) || initialContent.length === 0) {\n      throw new Error(\n        \"initialContent must be a non-empty array of blocks, received: \" +\n          initialContent\n      );\n    }\n\n    const tiptapOptions: BlockNoteTipTapEditorOptions = {\n      ...blockNoteTipTapOptions,\n      ...newOptions._tiptapOptions,\n      content: initialContent,\n      extensions: [\n        ...(newOptions._tiptapOptions?.extensions || []),\n        ...extensions,\n      ],\n      editorProps: {\n        ...newOptions._tiptapOptions?.editorProps,\n        attributes: {\n          // As of TipTap v2.5.0 the tabIndex is removed when the editor is not\n          // editable, so you can't focus it. We want to revert this as we have\n          // UI behaviour that relies on it.\n          tabIndex: \"0\",\n          ...newOptions._tiptapOptions?.editorProps?.attributes,\n          ...newOptions.domAttributes?.editor,\n          class: mergeCSSClasses(\n            \"bn-editor\",\n            newOptions.defaultStyles ? \"bn-default-styles\" : \"\",\n            newOptions.domAttributes?.editor?.class || \"\"\n          ),\n        },\n        transformPasted,\n      },\n    };\n\n    if (!this.headless) {\n      this._tiptapEditor = BlockNoteTipTapEditor.create(\n        tiptapOptions,\n        this.schema.styleSchema\n      ) as BlockNoteTipTapEditor & {\n        contentComponent: any;\n      };\n      this._pmSchema = this._tiptapEditor.schema;\n    } else {\n      // In headless mode, we don't instantiate an underlying TipTap editor,\n      // but we still need the schema\n      this._pmSchema = getSchema(tiptapOptions.extensions!);\n    }\n  }\n\n  dispatch(tr: Transaction) {\n    this._tiptapEditor.dispatch(tr);\n  }\n\n  /**\n   * Mount the editor to a parent DOM element. Call mount(undefined) to clean up\n   *\n   * @warning Not needed to call manually when using React, use BlockNoteView to take care of mounting\n   */\n  public mount = (parentElement?: HTMLElement | null) => {\n    this._tiptapEditor.mount(parentElement);\n  };\n\n  public get prosemirrorView() {\n    return this._tiptapEditor.view;\n  }\n\n  public get domElement() {\n    return this._tiptapEditor.view.dom as HTMLDivElement;\n  }\n\n  public isFocused() {\n    return this._tiptapEditor.view.hasFocus();\n  }\n\n  public focus() {\n    this._tiptapEditor.view.focus();\n  }\n\n  public onUploadStart(callback: (blockId?: string) => void) {\n    this.onUploadStartCallbacks.push(callback);\n\n    return () => {\n      const index = this.onUploadStartCallbacks.indexOf(callback);\n      if (index > -1) {\n        this.onUploadStartCallbacks.splice(index, 1);\n      }\n    };\n  }\n\n  public onUploadEnd(callback: (blockId?: string) => void) {\n    this.onUploadEndCallbacks.push(callback);\n\n    return () => {\n      const index = this.onUploadEndCallbacks.indexOf(callback);\n      if (index > -1) {\n        this.onUploadEndCallbacks.splice(index, 1);\n      }\n    };\n  }\n\n  /**\n   * @deprecated, use `editor.document` instead\n   */\n  public get topLevelBlocks(): Block<BSchema, ISchema, SSchema>[] {\n    return this.document;\n  }\n\n  /**\n   * Gets a snapshot of all top-level (non-nested) blocks in the editor.\n   * @returns A snapshot of all top-level (non-nested) blocks in the editor.\n   */\n  public get document(): Block<BSchema, ISchema, SSchema>[] {\n    const blocks: Block<BSchema, ISchema, SSchema>[] = [];\n\n    this._tiptapEditor.state.doc.firstChild!.descendants((node) => {\n      blocks.push(\n        nodeToBlock(\n          node,\n          this.schema.blockSchema,\n          this.schema.inlineContentSchema,\n          this.schema.styleSchema,\n          this.blockCache\n        )\n      );\n\n      return false;\n    });\n\n    return blocks;\n  }\n\n  /**\n   * Gets a snapshot of an existing block from the editor.\n   * @param blockIdentifier The identifier of an existing block that should be retrieved.\n   * @returns The block that matches the identifier, or `undefined` if no matching block was found.\n   */\n  public getBlock(\n    blockIdentifier: BlockIdentifier\n  ): Block<BSchema, ISchema, SSchema> | undefined {\n    const id =\n      typeof blockIdentifier === \"string\"\n        ? blockIdentifier\n        : blockIdentifier.id;\n    let newBlock: Block<BSchema, ISchema, SSchema> | undefined = undefined;\n\n    this._tiptapEditor.state.doc.firstChild!.descendants((node) => {\n      if (typeof newBlock !== \"undefined\") {\n        return false;\n      }\n\n      if (node.type.name !== \"blockContainer\" || node.attrs.id !== id) {\n        return true;\n      }\n\n      newBlock = nodeToBlock(\n        node,\n        this.schema.blockSchema,\n        this.schema.inlineContentSchema,\n        this.schema.styleSchema,\n        this.blockCache\n      );\n\n      return false;\n    });\n\n    return newBlock;\n  }\n\n  /**\n   * Traverses all blocks in the editor depth-first, and executes a callback for each.\n   * @param callback The callback to execute for each block. Returning `false` stops the traversal.\n   * @param reverse Whether the blocks should be traversed in reverse order.\n   */\n  public forEachBlock(\n    callback: (block: Block<BSchema, ISchema, SSchema>) => boolean,\n    reverse = false\n  ): void {\n    const blocks = this.document.slice();\n\n    if (reverse) {\n      blocks.reverse();\n    }\n\n    function traverseBlockArray(\n      blockArray: Block<BSchema, ISchema, SSchema>[]\n    ): boolean {\n      for (const block of blockArray) {\n        if (callback(block) === false) {\n          return false;\n        }\n\n        const children = reverse\n          ? block.children.slice().reverse()\n          : block.children;\n\n        if (!traverseBlockArray(children)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    traverseBlockArray(blocks);\n  }\n\n  /**\n   * Executes a callback whenever the editor's contents change.\n   * @param callback The callback to execute.\n   */\n  public onEditorContentChange(callback: () => void) {\n    this._tiptapEditor.on(\"update\", callback);\n  }\n\n  /**\n   * Executes a callback whenever the editor's selection changes.\n   * @param callback The callback to execute.\n   */\n  public onEditorSelectionChange(callback: () => void) {\n    this._tiptapEditor.on(\"selectionUpdate\", callback);\n  }\n\n  /**\n   * Gets a snapshot of the current text cursor position.\n   * @returns A snapshot of the current text cursor position.\n   */\n  public getTextCursorPosition(): TextCursorPosition<\n    BSchema,\n    ISchema,\n    SSchema\n  > {\n    const { node, depth, startPos, endPos } = getBlockInfoFromPos(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    )!;\n\n    // Index of the current blockContainer node relative to its parent blockGroup.\n    const nodeIndex = this._tiptapEditor.state.doc\n      .resolve(endPos)\n      .index(depth - 1);\n    // Number of the parent blockGroup's child blockContainer nodes.\n    const numNodes = this._tiptapEditor.state.doc\n      .resolve(endPos + 1)\n      .node().childCount;\n\n    // Gets previous blockContainer node at the same nesting level, if the current node isn't the first child.\n    let prevNode: Node | undefined = undefined;\n    if (nodeIndex > 0) {\n      prevNode = this._tiptapEditor.state.doc.resolve(startPos - 2).node();\n    }\n\n    // Gets next blockContainer node at the same nesting level, if the current node isn't the last child.\n    let nextNode: Node | undefined = undefined;\n    if (nodeIndex < numNodes - 1) {\n      nextNode = this._tiptapEditor.state.doc.resolve(endPos + 2).node();\n    }\n\n    return {\n      block: nodeToBlock(\n        node,\n        this.schema.blockSchema,\n        this.schema.inlineContentSchema,\n        this.schema.styleSchema,\n        this.blockCache\n      ),\n      prevBlock:\n        prevNode === undefined\n          ? undefined\n          : nodeToBlock(\n              prevNode,\n              this.schema.blockSchema,\n              this.schema.inlineContentSchema,\n              this.schema.styleSchema,\n              this.blockCache\n            ),\n      nextBlock:\n        nextNode === undefined\n          ? undefined\n          : nodeToBlock(\n              nextNode,\n              this.schema.blockSchema,\n              this.schema.inlineContentSchema,\n              this.schema.styleSchema,\n              this.blockCache\n            ),\n    };\n  }\n\n  /**\n   * Sets the text cursor position to the start or end of an existing block. Throws an error if the target block could\n   * not be found.\n   * @param targetBlock The identifier of an existing block that the text cursor should be moved to.\n   * @param placement Whether the text cursor should be placed at the start or end of the block.\n   */\n  public setTextCursorPosition(\n    targetBlock: BlockIdentifier,\n    placement: \"start\" | \"end\" = \"start\"\n  ) {\n    const id = typeof targetBlock === \"string\" ? targetBlock : targetBlock.id;\n\n    const { posBeforeNode } = getNodeById(id, this._tiptapEditor.state.doc);\n    const { startPos, contentNode } = getBlockInfoFromPos(\n      this._tiptapEditor.state.doc,\n      posBeforeNode + 2\n    )!;\n\n    const contentType: \"none\" | \"inline\" | \"table\" =\n      this.schema.blockSchema[contentNode.type.name]!.content;\n\n    if (contentType === \"none\") {\n      this._tiptapEditor.commands.setNodeSelection(startPos);\n      return;\n    }\n\n    if (contentType === \"inline\") {\n      if (placement === \"start\") {\n        this._tiptapEditor.commands.setTextSelection(startPos + 1);\n      } else {\n        this._tiptapEditor.commands.setTextSelection(\n          startPos + contentNode.nodeSize - 1\n        );\n      }\n    } else if (contentType === \"table\") {\n      if (placement === \"start\") {\n        // Need to offset the position as we have to get through the `tableRow`\n        // and `tableCell` nodes to get to the `tableParagraph` node we want to\n        // set the selection in.\n        this._tiptapEditor.commands.setTextSelection(startPos + 4);\n      } else {\n        this._tiptapEditor.commands.setTextSelection(\n          startPos + contentNode.nodeSize - 4\n        );\n      }\n    } else {\n      throw new UnreachableCaseError(contentType);\n    }\n  }\n\n  /**\n   * Gets a snapshot of the current selection.\n   */\n  public getSelection(): Selection<BSchema, ISchema, SSchema> | undefined {\n    // Either the TipTap selection is empty, or it's a node selection. In either\n    // case, it only spans one block, so we return undefined.\n    if (\n      this._tiptapEditor.state.selection.from ===\n        this._tiptapEditor.state.selection.to ||\n      \"node\" in this._tiptapEditor.state.selection\n    ) {\n      return undefined;\n    }\n\n    const blocks: Block<BSchema, ISchema, SSchema>[] = [];\n\n    // TODO: This adds all child blocks to the same array. Needs to find min\n    //  depth and only add blocks at that depth.\n    this._tiptapEditor.state.doc.descendants((node, pos) => {\n      if (node.type.spec.group !== \"blockContent\") {\n        return true;\n      }\n\n      // Fixed the block pos and size\n      // all block is wrapped with a blockContent wrapper\n      // and blockContent wrapper pos = inner block pos - 1\n      // blockContent wrapper end = inner block pos + nodeSize + 1\n      // need to add 1 to start and -1 to end\n      const end = pos + node.nodeSize - 1;\n      const start = pos + 1;\n      if (\n        end <= this._tiptapEditor.state.selection.from ||\n        start >= this._tiptapEditor.state.selection.to\n      ) {\n        return true;\n      }\n\n      blocks.push(\n        nodeToBlock(\n          this._tiptapEditor.state.doc.resolve(pos).node(),\n          this.schema.blockSchema,\n          this.schema.inlineContentSchema,\n          this.schema.styleSchema,\n          this.blockCache\n        )\n      );\n\n      return false;\n    });\n\n    return { blocks: blocks };\n  }\n\n  /**\n   * Checks if the editor is currently editable, or if it's locked.\n   * @returns True if the editor is editable, false otherwise.\n   */\n  public get isEditable(): boolean {\n    if (!this._tiptapEditor) {\n      if (!this.headless) {\n        throw new Error(\"no editor, but also not headless?\");\n      }\n      return false;\n    }\n    return this._tiptapEditor.isEditable === undefined\n      ? true\n      : this._tiptapEditor.isEditable;\n  }\n\n  /**\n   * Makes the editor editable or locks it, depending on the argument passed.\n   * @param editable True to make the editor editable, or false to lock it.\n   */\n  public set isEditable(editable: boolean) {\n    if (!this._tiptapEditor) {\n      if (!this.headless) {\n        throw new Error(\"no editor, but also not headless?\");\n      }\n      // not relevant on headless\n      return;\n    }\n    if (this._tiptapEditor.options.editable !== editable) {\n      this._tiptapEditor.setEditable(editable);\n    }\n  }\n\n  /**\n   * Inserts new blocks into the editor. If a block's `id` is undefined, BlockNote generates one automatically. Throws an\n   * error if the reference block could not be found.\n   * @param blocksToInsert An array of partial blocks that should be inserted.\n   * @param referenceBlock An identifier for an existing block, at which the new blocks should be inserted.\n   * @param placement Whether the blocks should be inserted just before, just after, or nested inside the\n   * `referenceBlock`. Inserts the blocks at the start of the existing block's children if \"nested\" is used.\n   */\n  public insertBlocks(\n    blocksToInsert: PartialBlock<BSchema, ISchema, SSchema>[],\n    referenceBlock: BlockIdentifier,\n    placement: \"before\" | \"after\" | \"nested\" = \"before\"\n  ) {\n    return insertBlocks(blocksToInsert, referenceBlock, placement, this);\n  }\n\n  /**\n   * Updates an existing block in the editor. Since updatedBlock is a PartialBlock object, some fields might not be\n   * defined. These undefined fields are kept as-is from the existing block. Throws an error if the block to update could\n   * not be found.\n   * @param blockToUpdate The block that should be updated.\n   * @param update A partial block which defines how the existing block should be changed.\n   */\n  public updateBlock(\n    blockToUpdate: BlockIdentifier,\n    update: PartialBlock<BSchema, ISchema, SSchema>\n  ) {\n    return updateBlock(blockToUpdate, update, this);\n  }\n\n  /**\n   * Removes existing blocks from the editor. Throws an error if any of the blocks could not be found.\n   * @param blocksToRemove An array of identifiers for existing blocks that should be removed.\n   */\n  public removeBlocks(blocksToRemove: BlockIdentifier[]) {\n    return removeBlocks(blocksToRemove, this);\n  }\n\n  /**\n   * Replaces existing blocks in the editor with new blocks. If the blocks that should be removed are not adjacent or\n   * are at different nesting levels, `blocksToInsert` will be inserted at the position of the first block in\n   * `blocksToRemove`. Throws an error if any of the blocks to remove could not be found.\n   * @param blocksToRemove An array of blocks that should be replaced.\n   * @param blocksToInsert An array of partial blocks to replace the old ones with.\n   */\n  public replaceBlocks(\n    blocksToRemove: BlockIdentifier[],\n    blocksToInsert: PartialBlock<BSchema, ISchema, SSchema>[]\n  ) {\n    return replaceBlocks(blocksToRemove, blocksToInsert, this);\n  }\n\n  /**\n   * Insert a piece of content at the current cursor position.\n   *\n   * @param content can be a string, or array of partial inline content elements\n   */\n  public insertInlineContent(content: PartialInlineContent<ISchema, SSchema>) {\n    const nodes = inlineContentToNodes(\n      content,\n      this.pmSchema,\n      this.schema.styleSchema\n    );\n\n    insertContentAt(\n      {\n        from: this._tiptapEditor.state.selection.from,\n        to: this._tiptapEditor.state.selection.to,\n      },\n      nodes,\n      this\n    );\n  }\n\n  /**\n   * Gets the active text styles at the text cursor position or at the end of the current selection if it's active.\n   */\n  public getActiveStyles() {\n    const styles: Styles<SSchema> = {};\n    const marks = this._tiptapEditor.state.selection.$to.marks();\n\n    for (const mark of marks) {\n      const config = this.schema.styleSchema[mark.type.name];\n      if (!config) {\n        if (mark.type.name !== \"link\") {\n          // eslint-disable-next-line no-console\n          console.warn(\"mark not found in styleschema\", mark.type.name);\n        }\n\n        continue;\n      }\n      if (config.propSchema === \"boolean\") {\n        (styles as any)[config.type] = true;\n      } else {\n        (styles as any)[config.type] = mark.attrs.stringValue;\n      }\n    }\n\n    return styles;\n  }\n\n  /**\n   * Adds styles to the currently selected content.\n   * @param styles The styles to add.\n   */\n  public addStyles(styles: Styles<SSchema>) {\n    for (const [style, value] of Object.entries(styles)) {\n      const config = this.schema.styleSchema[style];\n      if (!config) {\n        throw new Error(`style ${style} not found in styleSchema`);\n      }\n      if (config.propSchema === \"boolean\") {\n        this._tiptapEditor.commands.setMark(style);\n      } else if (config.propSchema === \"string\") {\n        this._tiptapEditor.commands.setMark(style, { stringValue: value });\n      } else {\n        throw new UnreachableCaseError(config.propSchema);\n      }\n    }\n  }\n\n  /**\n   * Removes styles from the currently selected content.\n   * @param styles The styles to remove.\n   */\n  public removeStyles(styles: Styles<SSchema>) {\n    for (const style of Object.keys(styles)) {\n      this._tiptapEditor.commands.unsetMark(style);\n    }\n  }\n\n  /**\n   * Toggles styles on the currently selected content.\n   * @param styles The styles to toggle.\n   */\n  public toggleStyles(styles: Styles<SSchema>) {\n    for (const [style, value] of Object.entries(styles)) {\n      const config = this.schema.styleSchema[style];\n      if (!config) {\n        throw new Error(`style ${style} not found in styleSchema`);\n      }\n      if (config.propSchema === \"boolean\") {\n        this._tiptapEditor.commands.toggleMark(style);\n      } else if (config.propSchema === \"string\") {\n        this._tiptapEditor.commands.toggleMark(style, { stringValue: value });\n      } else {\n        throw new UnreachableCaseError(config.propSchema);\n      }\n    }\n  }\n\n  /**\n   * Gets the currently selected text.\n   */\n  public getSelectedText() {\n    return this._tiptapEditor.state.doc.textBetween(\n      this._tiptapEditor.state.selection.from,\n      this._tiptapEditor.state.selection.to\n    );\n  }\n\n  /**\n   * Gets the URL of the last link in the current selection, or `undefined` if there are no links in the selection.\n   */\n  public getSelectedLinkUrl() {\n    return this._tiptapEditor.getAttributes(\"link\").href as string | undefined;\n  }\n\n  /**\n   * Creates a new link to replace the selected content.\n   * @param url The link URL.\n   * @param text The text to display the link with.\n   */\n  public createLink(url: string, text?: string) {\n    if (url === \"\") {\n      return;\n    }\n\n    const { from, to } = this._tiptapEditor.state.selection;\n\n    if (!text) {\n      text = this._tiptapEditor.state.doc.textBetween(from, to);\n    }\n\n    const mark = this.pmSchema.mark(\"link\", { href: url });\n\n    this.dispatch(\n      this._tiptapEditor.state.tr\n        .insertText(text, from, to)\n        .addMark(from, from + text.length, mark)\n    );\n  }\n\n  /**\n   * Checks if the block containing the text cursor can be nested.\n   */\n  public canNestBlock() {\n    const { startPos, depth } = getBlockInfoFromPos(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    )!;\n\n    return this._tiptapEditor.state.doc.resolve(startPos).index(depth - 1) > 0;\n  }\n\n  /**\n   * Nests the block containing the text cursor into the block above it.\n   */\n  public nestBlock() {\n    this._tiptapEditor.commands.sinkListItem(\"blockContainer\");\n  }\n\n  /**\n   * Checks if the block containing the text cursor is nested.\n   */\n  public canUnnestBlock() {\n    const { depth } = getBlockInfoFromPos(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    )!;\n\n    return depth > 2;\n  }\n\n  /**\n   * Lifts the block containing the text cursor out of its parent.\n   */\n  public unnestBlock() {\n    this._tiptapEditor.commands.liftListItem(\"blockContainer\");\n  }\n\n  /**\n   * Exports blocks into a simplified HTML string. To better conform to HTML standards, children of blocks which aren't list\n   * items are un-nested in the output HTML.\n   *\n   * @param blocks An array of blocks that should be serialized into HTML.\n   * @returns The blocks, serialized as an HTML string.\n   */\n  public async blocksToHTMLLossy(\n    blocks: PartialBlock<BSchema, ISchema, SSchema>[] = this.document\n  ): Promise<string> {\n    await initializeESMDependencies();\n    const exporter = createExternalHTMLExporter(this.pmSchema, this);\n    return exporter.exportBlocks(blocks, {});\n  }\n\n  /**\n   * Serializes blocks into an HTML string in the format that would normally be rendered by the editor.\n   *\n   * Use this method if you want to server-side render HTML (for example, a blog post that has been edited in BlockNote)\n   * and serve it to users without loading the editor on the client (i.e.: displaying the blog post)\n   *\n   * @param blocks An array of blocks that should be serialized into HTML.\n   * @returns The blocks, serialized as an HTML string.\n   */\n  public async blocksToFullHTML(\n    blocks: PartialBlock<BSchema, ISchema, SSchema>[]\n  ): Promise<string> {\n    const exporter = createInternalHTMLSerializer(this.pmSchema, this);\n    return exporter.serializeBlocks(blocks, {});\n  }\n  /**\n   * Parses blocks from an HTML string. Tries to create `Block` objects out of any HTML block-level elements, and\n   * `InlineNode` objects from any HTML inline elements, though not all element types are recognized. If BlockNote\n   * doesn't recognize an HTML element's tag, it will parse it as a paragraph or plain text.\n   * @param html The HTML string to parse blocks from.\n   * @returns The blocks parsed from the HTML string.\n   */\n  public async tryParseHTMLToBlocks(\n    html: string\n  ): Promise<Block<BSchema, ISchema, SSchema>[]> {\n    return HTMLToBlocks(\n      html,\n      this.schema.blockSchema,\n      this.schema.inlineContentSchema,\n      this.schema.styleSchema,\n      this.pmSchema\n    );\n  }\n\n  /**\n   * Serializes blocks into a Markdown string. The output is simplified as Markdown does not support all features of\n   * BlockNote - children of blocks which aren't list items are un-nested and certain styles are removed.\n   * @param blocks An array of blocks that should be serialized into Markdown.\n   * @returns The blocks, serialized as a Markdown string.\n   */\n  public async blocksToMarkdownLossy(\n    blocks: PartialBlock<BSchema, ISchema, SSchema>[] = this.document\n  ): Promise<string> {\n    return blocksToMarkdown(blocks, this.pmSchema, this, {});\n  }\n\n  /**\n   * Creates a list of blocks from a Markdown string. Tries to create `Block` and `InlineNode` objects based on\n   * Markdown syntax, though not all symbols are recognized. If BlockNote doesn't recognize a symbol, it will parse it\n   * as text.\n   * @param markdown The Markdown string to parse blocks from.\n   * @returns The blocks parsed from the Markdown string.\n   */\n  public async tryParseMarkdownToBlocks(\n    markdown: string\n  ): Promise<Block<BSchema, ISchema, SSchema>[]> {\n    return markdownToBlocks(\n      markdown,\n      this.schema.blockSchema,\n      this.schema.inlineContentSchema,\n      this.schema.styleSchema,\n      this.pmSchema\n    );\n  }\n\n  /**\n   * Updates the user info for the current user that's shown to other collaborators.\n   */\n  public updateCollaborationUserInfo(user: { name: string; color: string }) {\n    if (!this.options.collaboration) {\n      throw new Error(\n        \"Cannot update collaboration user info when collaboration is disabled.\"\n      );\n    }\n    this._tiptapEditor.commands.updateUser(user);\n  }\n\n  /**\n   * A callback function that runs whenever the editor's contents change.\n   *\n   * @param callback The callback to execute.\n   * @returns A function to remove the callback.\n   */\n  public onChange(\n    callback: (editor: BlockNoteEditor<BSchema, ISchema, SSchema>) => void\n  ) {\n    if (this.headless) {\n      // Note: would be nice if this is possible in headless mode as well\n      return;\n    }\n\n    const cb = () => {\n      callback(this);\n    };\n\n    this._tiptapEditor.on(\"update\", cb);\n\n    return () => {\n      this._tiptapEditor.off(\"update\", cb);\n    };\n  }\n\n  /**\n   * A callback function that runs whenever the text cursor position or selection changes.\n   *\n   * @param callback The callback to execute.\n   * @returns A function to remove the callback.\n   */\n  public onSelectionChange(\n    callback: (editor: BlockNoteEditor<BSchema, ISchema, SSchema>) => void\n  ) {\n    if (this.headless) {\n      return;\n    }\n\n    const cb = () => {\n      callback(this);\n    };\n\n    this._tiptapEditor.on(\"selectionUpdate\", cb);\n\n    return () => {\n      this._tiptapEditor.off(\"selectionUpdate\", cb);\n    };\n  }\n\n  public openSuggestionMenu(\n    triggerCharacter: string,\n    pluginState?: {\n      deleteTriggerCharacter?: boolean;\n      ignoreQueryLength?: boolean;\n    }\n  ) {\n    const tr = this.prosemirrorView.state.tr;\n    const transaction =\n      pluginState && pluginState.deleteTriggerCharacter\n        ? tr.insertText(triggerCharacter)\n        : tr;\n\n    this.prosemirrorView.focus();\n    this.prosemirrorView.dispatch(\n      transaction.scrollIntoView().setMeta(this.suggestionMenus.plugin, {\n        triggerCharacter: triggerCharacter,\n        deleteTriggerCharacter: pluginState?.deleteTriggerCharacter || false,\n        ignoreQueryLength: pluginState?.ignoreQueryLength || false,\n      })\n    );\n  }\n}\n","import type { Emoji, EmojiMartData } from \"@emoji-mart/data\";\n\nimport { checkDefaultInlineContentTypeInSchema } from \"../../blocks/defaultBlockTypeGuards\";\nimport { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../schema\";\nimport { DefaultGridSuggestionItem } from \"./DefaultGridSuggestionItem\";\n\nlet data:\n  | Promise<{\n      default: EmojiMartData;\n    }>\n  | undefined;\n\nlet emojiMart: typeof import(\"emoji-mart\") | undefined;\n\nexport async function getDefaultEmojiPickerItems<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  editor: BlockNoteEditor<BSchema, I, S>,\n  query: string\n): Promise<DefaultGridSuggestionItem[]> {\n  if (!checkDefaultInlineContentTypeInSchema(\"text\", editor)) {\n    return [];\n  }\n\n  if (!data) {\n    // use a dynamic import to encourage bundle-splitting\n    // and a smaller initial client bundle size\n    data = import(\"@emoji-mart/data\", { assert: { type: \"json\" } }) as any;\n\n    // load dynamically because emoji-mart doesn't specify type: module and breaks in nodejs\n    emojiMart = await import(\"emoji-mart\");\n    const emojiMartData = (await data)!.default;\n    await emojiMart.init({ data: emojiMartData });\n  }\n\n  const emojiMartData = (await data)!.default;\n\n  const emojisToShow =\n    query.trim() === \"\"\n      ? Object.values(emojiMartData.emojis)\n      : ((await emojiMart!.SearchIndex.search(query)) as Emoji[]);\n\n  return emojisToShow.map((emoji) => ({\n    id: emoji.skins[0].native,\n    onItemClick: () => editor.insertInlineContent(emoji.skins[0].native + \" \"),\n  }));\n}\n","import { Block, PartialBlock } from \"../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\n\nimport { checkDefaultBlockTypeInSchema } from \"../../blocks/defaultBlockTypeGuards\";\nimport {\n  BlockSchema,\n  InlineContentSchema,\n  StyleSchema,\n  isStyledTextInlineContent,\n} from \"../../schema\";\nimport { formatKeyboardShortcut } from \"../../util/browser\";\nimport { DefaultSuggestionItem } from \"./DefaultSuggestionItem\";\n\n// Sets the editor's text cursor position to the next content editable block,\n// so either a block with inline content or a table. The last block is always a\n// paragraph, so this function won't try to set the cursor position past the\n// last block.\nfunction setSelectionToNextContentEditableBlock<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(editor: BlockNoteEditor<BSchema, I, S>) {\n  let block = editor.getTextCursorPosition().block;\n  let contentType = editor.schema.blockSchema[block.type].content;\n\n  while (contentType === \"none\") {\n    block = editor.getTextCursorPosition().nextBlock!;\n    contentType = editor.schema.blockSchema[block.type].content as\n      | \"inline\"\n      | \"table\"\n      | \"none\";\n    editor.setTextCursorPosition(block, \"end\");\n  }\n}\n\n// Checks if the current block is empty or only contains a slash, and if so,\n// updates the current block instead of inserting a new one below. If the new\n// block doesn't contain editable content, the cursor is moved to the next block\n// that does.\nexport function insertOrUpdateBlock<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  editor: BlockNoteEditor<BSchema, I, S>,\n  block: PartialBlock<BSchema, I, S>\n): Block<BSchema, I, S> {\n  const currentBlock = editor.getTextCursorPosition().block;\n\n  if (currentBlock.content === undefined) {\n    throw new Error(\"Slash Menu open in a block that doesn't contain content.\");\n  }\n\n  if (\n    Array.isArray(currentBlock.content) &&\n    ((currentBlock.content.length === 1 &&\n      isStyledTextInlineContent(currentBlock.content[0]) &&\n      currentBlock.content[0].type === \"text\" &&\n      currentBlock.content[0].text === \"/\") ||\n      currentBlock.content.length === 0)\n  ) {\n    editor.updateBlock(currentBlock, block);\n  } else {\n    editor.insertBlocks([block], currentBlock, \"after\");\n    editor.setTextCursorPosition(\n      editor.getTextCursorPosition().nextBlock!,\n      \"end\"\n    );\n  }\n\n  const insertedBlock = editor.getTextCursorPosition().block;\n  setSelectionToNextContentEditableBlock(editor);\n\n  return insertedBlock;\n}\n\nexport function getDefaultSlashMenuItems<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(editor: BlockNoteEditor<BSchema, I, S>) {\n  const items: DefaultSuggestionItem[] = [];\n\n  if (checkDefaultBlockTypeInSchema(\"heading\", editor)) {\n    items.push(\n      {\n        onItemClick: () => {\n          insertOrUpdateBlock(editor, {\n            type: \"heading\",\n            props: { level: 1 },\n          });\n        },\n        badge: formatKeyboardShortcut(\"Mod-Alt-1\"),\n        key: \"heading\",\n        ...editor.dictionary.slash_menu.heading,\n      },\n      {\n        onItemClick: () => {\n          insertOrUpdateBlock(editor, {\n            type: \"heading\",\n            props: { level: 2 },\n          });\n        },\n        badge: formatKeyboardShortcut(\"Mod-Alt-2\"),\n        key: \"heading_2\",\n        ...editor.dictionary.slash_menu.heading_2,\n      },\n      {\n        onItemClick: () => {\n          insertOrUpdateBlock(editor, {\n            type: \"heading\",\n            props: { level: 3 },\n          });\n        },\n        badge: formatKeyboardShortcut(\"Mod-Alt-3\"),\n        key: \"heading_3\",\n        ...editor.dictionary.slash_menu.heading_3,\n      }\n    );\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"numberedListItem\", editor)) {\n    items.push({\n      onItemClick: () => {\n        insertOrUpdateBlock(editor, {\n          type: \"numberedListItem\",\n        });\n      },\n      badge: formatKeyboardShortcut(\"Mod-Shift-7\"),\n      key: \"numbered_list\",\n      ...editor.dictionary.slash_menu.numbered_list,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"bulletListItem\", editor)) {\n    items.push({\n      onItemClick: () => {\n        insertOrUpdateBlock(editor, {\n          type: \"bulletListItem\",\n        });\n      },\n      badge: formatKeyboardShortcut(\"Mod-Shift-8\"),\n      key: \"bullet_list\",\n      ...editor.dictionary.slash_menu.bullet_list,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"checkListItem\", editor)) {\n    items.push({\n      onItemClick: () => {\n        insertOrUpdateBlock(editor, {\n          type: \"checkListItem\",\n        });\n      },\n      badge: formatKeyboardShortcut(\"Mod-Shift-9\"),\n      key: \"check_list\",\n      ...editor.dictionary.slash_menu.check_list,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"paragraph\", editor)) {\n    items.push({\n      onItemClick: () => {\n        insertOrUpdateBlock(editor, {\n          type: \"paragraph\",\n        });\n      },\n      badge: formatKeyboardShortcut(\"Mod-Alt-0\"),\n      key: \"paragraph\",\n      ...editor.dictionary.slash_menu.paragraph,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"table\", editor)) {\n    items.push({\n      onItemClick: () => {\n        insertOrUpdateBlock(editor, {\n          type: \"table\",\n          content: {\n            type: \"tableContent\",\n            rows: [\n              {\n                cells: [\"\", \"\", \"\"],\n              },\n              {\n                cells: [\"\", \"\", \"\"],\n              },\n            ],\n          },\n        });\n      },\n      badge: undefined,\n      key: \"table\",\n      ...editor.dictionary.slash_menu.table,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"image\", editor)) {\n    items.push({\n      onItemClick: () => {\n        const insertedBlock = insertOrUpdateBlock(editor, {\n          type: \"image\",\n        });\n\n        // Immediately open the file toolbar\n        editor.dispatch(\n          editor._tiptapEditor.state.tr.setMeta(editor.filePanel!.plugin, {\n            block: insertedBlock,\n          })\n        );\n      },\n      key: \"image\",\n      ...editor.dictionary.slash_menu.image,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"video\", editor)) {\n    items.push({\n      onItemClick: () => {\n        const insertedBlock = insertOrUpdateBlock(editor, {\n          type: \"video\",\n        });\n\n        // Immediately open the file toolbar\n        editor.dispatch(\n          editor._tiptapEditor.state.tr.setMeta(editor.filePanel!.plugin, {\n            block: insertedBlock,\n          })\n        );\n      },\n      key: \"video\",\n      ...editor.dictionary.slash_menu.video,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"audio\", editor)) {\n    items.push({\n      onItemClick: () => {\n        const insertedBlock = insertOrUpdateBlock(editor, {\n          type: \"audio\",\n        });\n\n        // Immediately open the file toolbar\n        editor.dispatch(\n          editor._tiptapEditor.state.tr.setMeta(editor.filePanel!.plugin, {\n            block: insertedBlock,\n          })\n        );\n      },\n      key: \"audio\",\n      ...editor.dictionary.slash_menu.audio,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"file\", editor)) {\n    items.push({\n      onItemClick: () => {\n        const insertedBlock = insertOrUpdateBlock(editor, {\n          type: \"file\",\n        });\n\n        // Immediately open the file toolbar\n        editor.dispatch(\n          editor._tiptapEditor.state.tr.setMeta(editor.filePanel!.plugin, {\n            block: insertedBlock,\n          })\n        );\n      },\n      key: \"image\",\n      ...editor.dictionary.slash_menu.file,\n    });\n  }\n\n  items.push({\n    onItemClick: () => {\n      editor.openSuggestionMenu(\":\", {\n        deleteTriggerCharacter: true,\n        ignoreQueryLength: true,\n      });\n    },\n    key: \"emoji\",\n    ...editor.dictionary.slash_menu.emoji,\n  });\n\n  return items;\n}\n\nexport function filterSuggestionItems<\n  T extends { title: string; aliases?: readonly string[] }\n>(items: T[], query: string) {\n  return items.filter(\n    ({ title, aliases }) =>\n      title.toLowerCase().includes(query.toLowerCase()) ||\n      (aliases &&\n        aliases.filter((alias) =>\n          alias.toLowerCase().includes(query.toLowerCase())\n        ).length !== 0)\n  );\n}\n","import { Block, PartialBlock } from \"../../blocks/defaultBlocks\";\nimport UniqueID from \"../../extensions/UniqueID/UniqueID\";\nimport { BlockSchema, TableContent } from \"../../schema/blocks/types\";\nimport {\n  InlineContent,\n  InlineContentSchema,\n  PartialInlineContent,\n  StyledText,\n  isPartialLinkInlineContent,\n  isStyledTextInlineContent,\n} from \"../../schema/inlineContent/types\";\nimport { StyleSchema } from \"../../schema/styles/types\";\n\nfunction textShorthandToStyledText(\n  content: string | StyledText<any>[] = \"\"\n): StyledText<any>[] {\n  if (typeof content === \"string\") {\n    return [\n      {\n        type: \"text\",\n        text: content,\n        styles: {},\n      },\n    ];\n  }\n  return content;\n}\n\nfunction partialContentToInlineContent(\n  content: PartialInlineContent<any, any> | TableContent<any> | undefined\n): InlineContent<any, any>[] | TableContent<any> | undefined {\n  if (typeof content === \"string\") {\n    return textShorthandToStyledText(content);\n  }\n\n  if (Array.isArray(content)) {\n    return content.flatMap((partialContent) => {\n      if (typeof partialContent === \"string\") {\n        return textShorthandToStyledText(partialContent);\n      } else if (isPartialLinkInlineContent(partialContent)) {\n        return {\n          ...partialContent,\n          content: textShorthandToStyledText(partialContent.content),\n        };\n      } else if (isStyledTextInlineContent(partialContent)) {\n        return partialContent;\n      } else {\n        // custom inline content\n\n        return {\n          props: {},\n          ...partialContent,\n          content: partialContentToInlineContent(partialContent.content),\n        } as any;\n      }\n    });\n  }\n\n  return content;\n}\n\nexport function partialBlocksToBlocksForTesting<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  schema: BSchema,\n  partialBlocks: Array<PartialBlock<BSchema, I, S>>\n): Array<Block<BSchema, I, S>> {\n  return partialBlocks.map((partialBlock) =>\n    partialBlockToBlockForTesting(schema, partialBlock)\n  );\n}\n\nexport function partialBlockToBlockForTesting<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  schema: BSchema,\n  partialBlock: PartialBlock<BSchema, I, S>\n): Block<BSchema, I, S> {\n  const withDefaults: Block<BSchema, I, S> = {\n    id: \"\",\n    type: partialBlock.type!,\n    props: {} as any,\n    content:\n      schema[partialBlock.type!].content === \"inline\" ? [] : (undefined as any),\n    children: [] as any,\n    ...partialBlock,\n  };\n\n  Object.entries(schema[partialBlock.type!].propSchema).forEach(\n    ([propKey, propValue]) => {\n      if (withDefaults.props[propKey] === undefined) {\n        (withDefaults.props as any)[propKey] = propValue.default;\n      }\n    }\n  );\n\n  return {\n    ...withDefaults,\n    content: partialContentToInlineContent(withDefaults.content),\n    children: withDefaults.children.map((c) => {\n      return partialBlockToBlockForTesting(schema, c);\n    }),\n  } as any;\n}\n\nexport function addIdsToBlock(block: PartialBlock<any, any, any>) {\n  if (!block.id) {\n    block.id = UniqueID.options.generateID();\n  }\n  if (block.children) {\n    addIdsToBlocks(block.children);\n  }\n}\n\nexport function addIdsToBlocks(blocks: PartialBlock<any, any, any>[]) {\n  for (const block of blocks) {\n    addIdsToBlock(block);\n  }\n}\n"],"names":["ar","de","en","es","fr","is","ja","ko","nl","pl","pt","ru","vi","zh","esmDependencies","initializeESMDependencies","vals","removeDuplicates","array","by","seen","item","key","findDuplicates","items","filtered","el","index","UniqueID","Extension","testOptions","v4","element","attributes","defaultIdAttributes","dragSourceElement","transformPasted","Plugin","PluginKey","transactions","oldState","newState","docChanges","transaction","filterTransactions","tr","_a","_b","types","attributeName","generateID","transform","combineTransactionSteps","mapping","getChangedRanges","newRange","newNodes","findChildrenInRange","node","newIds","id","duplicatedNewIds","pos","initialDoc","jsonNode","deleted","view","handleDragstart","event","slice","removeId","fragment","list","nodeWithoutId","Fragment","Slice","getBlockInfo","blockContainer","contentNode","contentType","numChildBlocks","getBlockInfoFromPos","doc","outerBlockGroupEndPos","$pos","maxDepth","depth","startPos","endPos","isLinkInlineContent","content","isPartialLinkInlineContent","isStyledTextInlineContent","UnreachableCaseError","val","assertEmpty","obj","throwError","dataTest","rest","styledTextToNodes","styledText","schema","styleSchema","marks","style","value","config","text","linkToNodes","link","linkMark","styledTextArrayToNodes","nodes","inlineContentToNodes","blockContent","blockOrInlineContentToContentNode","tableContentToNodes","tableContent","rowNodes","row","columnNodes","cell","pNode","textNodes","cellNode","rowNode","block","type","blockToNode","children","child","groupNode","contentNodeToTableContent","inlineContentSchema","ret","contentNodeToInlineContent","currentContent","nodeToCustomInlineContent","styles","mark","props","icConfig","attr","propSchema","nodeToBlock","blockSchema","blockCache","cachedBlock","blockInfo","blockSpec","blockConfig","i","options","serializeNodeInner","serializer","editor","toExternalHTML","dom","contentDOM","DOMSerializer","blockContentNode","blockGroupNode","impl","serializeProseMirrorFragment","internalHTML","parent","addAttributesAndRemoveClasses","className","simplifyBlocks","deps","listItemBlockTypes","simplifyBlocksHelper","tree","blockGroup","numChildElements","activeList","properties","classNames","blockContainerDataAttributes","blockContentDataAttributes","blockPropsDataAttributes","isListItemBlock","listItemBlockType","numElementsRemoved","listItemElement","numElementsAdded","createExternalHTMLExporter","externalHTML","blocks","createInternalHTMLSerializer","getCurrentBlockContentType","isAppleOS","formatKeyboardShortcut","shortcut","ctrlText","mergeCSSClasses","classes","c","isSafari","createDefaultBlockDOMOutputSpec","blockName","htmlTag","blockContentHTMLAttributes","inlineContentHTMLAttributes","attribute","inlineContent","defaultBlockToHTML","toDOM","renderSpec","defaultProps","inheritedProps","camelToDataKebab","str","filenameFromURL","url","parts","propsToAttributes","tiptapAttributes","name","_spec","spec","asNumber","getBlockFromPos","getPos","tipTapEditor","blockIdentifier","wrapInBlockStructure","blockType","blockProps","isFileBlock","domAttributes","prop","createStronglyTypedTiptapNode","Node","createInternalBlockSpec","implementation","createBlockSpecFromStronglyTypedTiptapNode","requiredExtensions","getBlockSchemaFromSpecs","specs","applyNonSelectableBlockFix","nodeView","getParseRules","customParseFunction","rules","createBlockSpec","blockImplementation","HTMLAttributes","div","blockContentDOMAttributes","output","addInlineContentAttributes","inlineContentType","inlineContentProps","addInlineContentKeyboardShortcuts","resolvedPos","createInternalInlineContentSpec","createInlineContentSpecFromTipTapNode","getInlineContentSchemaFromSpecs","getInlineContentParseRules","htmlElement","createInlineContentSpec","inlineContentConfig","inlineContentImplementation","update","stylePropsToAttributes","addStyleAttributes","styleType","styleValue","createInternalStyleSpec","createStyleSpecFromTipTapMark","getStyleSchemaFromSpecs","getStyleParseRules","createStyleSpec","styleConfig","styleImplementation","Mark","renderResult","createFileBlockWrapper","buttonText","buttonIcon","wrapper","addFileButton","createAddFileButton","loading","destroyUploadStartHandler","blockId","destroyUploadEndHandler","file","createDefaultFilePreview","createFileAndCaptionWrapper","icon","fileName","fileAndCaptionWrapper","caption","addFileButtonIcon","addFileButtonText","addFileButtonMouseDownHandler","addFileButtonClickHandler","parseEmbedElement","embedElement","parseFigureElement","figureElement","targetTag","targetElement","captionElement","createLinkWithCaption","fileCaption","createFigureWithCaption","figure","createResizeHandlesWrapper","getWidth","setWidth","leftResizeHandle","rightResizeHandle","resizeParams","windowMouseMoveHandler","newWidth","minWidth","windowMouseUpHandler","elementMouseEnterHandler","elementMouseLeaveHandler","leftResizeHandleMouseDownHandler","rightResizeHandleMouseDownHandler","parseAudioElement","audioElement","audioPropSchema","audioBlockConfig","audioRender","audio","downloadUrl","audioParse","parsedFigure","audioToExternalHTML","AudioBlock","filePropSchema","fileBlockConfig","fileRender","fileParse","fileToExternalHTML","fileSrcLink","FileBlock","uploadToTmpFilesDotOrg_DEV_ONLY","body","parseImageElement","imageElement","previewWidth","imagePropSchema","imageBlockConfig","imageRender","image","width","imageParse","imageToExternalHTML","ImageBlock","parseVideoElement","videoElement","videoPropSchema","videoBlockConfig","videoRender","video","videoParse","videoToExternalHTML","VideoBlock","BackgroundColorMark","BackgroundColor","TextColorMark","TextColor","headingPropSchema","HeadingBlockContent","parsed","level","InputRule","state","chain","range","Heading","handleEnter","selectionEmpty","commands","bulletListItemPropSchema","BulletListItemBlockContent","BulletListItem","PLUGIN_KEY","NumberedListIndexingPlugin","_transactions","_oldState","modified","newIndex","isFirstBlockInDoc","prevBlockInfo","prevBlockContentNode","prevBlockIndex","numberedListItemPropSchema","NumberedListItemBlockContent","NumberedListItem","checkListItemPropSchema","checkListItemBlockContent","checkbox","checkboxWrapper","changeHandler","label","CheckListItem","paragraphPropSchema","ParagraphBlockContent","Paragraph","TableExtension","columnResizing","tableEditing","selection","selectionIsEmpty","selectionIsAtStartOfNode","selectionIsInTableParagraphNode","extension","context","callOrReturn","getExtensionField","tablePropSchema","TableBlockContent","TableParagraph","mergeAttributes","Table","TableHeader","TableCell","TableRow","defaultBlockSpecs","defaultBlockSchema","defaultStyleSpecs","Bold","Italic","Underline","Strike","Code","defaultStyleSchema","defaultInlineContentSpecs","defaultInlineContentSchema","checkDefaultBlockTypeInSchema","checkDefaultInlineContentTypeInSchema","checkBlockIsDefaultType","checkBlockIsFileBlock","checkBlockIsFileBlockWithPreview","checkBlockIsFileBlockWithPlaceholder","checkBlockTypeHasDefaultProp","checkBlockHasDefaultProp","getNodeById","targetNode","posBeforeNode","insertBlocks","blocksToInsert","referenceBlock","placement","nodesToInsert","insertedBlocks","updateBlock","blockToUpdate","ttEditor","blockContainerNode","removeBlocksWithCallback","blocksToRemove","callback","idsOfBlocksToRemove","removedBlocks","removedSize","oldDocSize","newDocSize","notFoundIds","removeBlocks","replaceBlocks","idOfFirstBlock","insertContentAt","position","from","to","isOnlyTextContent","isOnlyBlockContent","selectionToInsertionEnd","removeUnderlines","removeUnderlinesHelper","addSpacesToCheckboxes","helper","nextChild","cleanHTMLToMarkdown","cleanHTMLString","blocksToMarkdown","getChildIndex","isWhitespaceNode","liftNestedListsToParent","parentListItem","siblingsAfter","sibling","siblingContainer","createGroups","listItem","_detachedDoc","detachedDoc","nestedListsToBlockNoteStructure","elementOrHTML","HTMLToBlocks","html","icSchema","pmSchema","htmlNode","parentNode","DOMParser","code","result","markdownToBlocks","markdown","htmlString","EventEmitter","__publicField","fn","args","callbacks","FilePanelView","pluginKey","pmView","emitUpdate","blockElement","prevState","pluginState","filePanelPluginKey","FilePanelProsemirrorPlugin","editorView","_view","FormattingToolbarView","empty","isEmptyTextBlock","isTextSelection","editorWrapper","composing","isSame","ranges","shouldShow","isNodeSelection","posToDOMRect","formattingToolbarPluginKey","FormattingToolbarProsemirrorPlugin","LinkToolbarView","hoveredLinkElement","posInHoveredLinkMark","resolvedPosInHoveredLinkMark","marksAtPos","getMarkRange","prevLinkMark","linkToolbarPluginKey","LinkToolbarProsemirrorPlugin","MultipleNodeSelection","Selection","$anchor","$head","_pos","fromResult","toResult","dragImageElement","getDraggableBlockFromElement","blockPositionFromElement","docView","desc","blockPositionsFromSelection","beforeFirstBlockPos","afterLastBlockPos","selectionStartInBlockContent","selectionEndInBlockContent","minDepth","startFirstBlockPos","endLastBlockPos","setDragImage","parentClone","getElementIndex","parentElement","firstSelectedBlockIndex","lastSelectedBlockIndex","unsetDragImage","inheritedClasses","rootEl","dragStart","editorBoundingBox","coords","elements","blockEl","draggedBlockInSelection","multipleBlocksSelected","NodeSelection","selectedSlice","clipboardHML","plainText","SideMenuView","_c","_d","blockContentBoundingBox","evt","_event","editorOuterBoundingBox","cursorWithinEditor","prevBlockId","newBlockInsertionPos","newBlockContentPos","sideMenuPluginKey","SideMenuProsemirrorPlugin","findBlock","findParentNode","SuggestionMenuView","decorationNode","suggestionMenuPluginKey","menuName","prev","next","started","stopped","SuggestionMenuProseMirrorPlugin","triggerCharacter","triggerCharacters","suggestionPluginTransactionMeta","_from","_to","suggestionPluginState","blockNode","DecorationSet","Decoration","createSuggestionMenu","setHiddenDragImage","unsetHiddenDragImage","domCellAround","target","hideElementsWithClassNames","elementsToHide","TableHandlesView","colIndex","rowIndex","cellRect","tableRect","tableBlock","boundedMouseCoords","tableCellElements","tableCellElement","emitStateUpdate","oldIndex","dispatchDecorationsTransaction","mousePos","tableHandlesPluginKey","rows","rowToMove","cellsToMove","tableElement","cellElement","TableHandlesProsemirrorPlugin","decorations","tableResolvedPos","tableNode","rowResolvedPos","cellResolvedPos","decorationPos","widget","selectedFragmentToHTML","clipboardHTML","selectedFragment","isWithinBlockContent","isWithinTable","CellSelection","fragmentWithoutParents","copyToClipboard","createCopyToClipboardExtension","acceptedMIMETypes","checkFileExtensionsMatch","fileExtension1","fileExtension2","checkMIMETypesMatch","mimeType1","mimeType2","types1","types2","handleFileInsertion","dataTransfer","format","mimeType","fileBlockConfigs","fileBlockType","isFileExtension","fileBlock","insertedBlockId","updateData","updatedFileBlock","createDropFileExtension","createPasteFromClipboardExtension","data","BackgroundColorExtension","TextAlignmentExtension","TextColorExtension","TrailingNode","plugin","_","__","shouldInsertNodeAtEnd","endPosition","_state","lastNode","lastContentNode","NonEditableBlockPlugin","TextSelection","BlockAttributes","BlockContainer","attrs","nodeAttr","HTMLAttr","blockOuter","blockHTMLAttributes","dispatch","newBlock","posInBlock","childNodes","oldType","newType","oldContentType","newContentType","posBetweenBlocks","nextNodeIsBlock","prevNodeIsBlock","nextBlockInfo","childBlocksStart","childBlocksEnd","childBlocksRange","prevBlockEndPos","keepType","keepProps","originalBlockContent","newBlockContent","selectionAtBlockStart","isParagraph","blockAtDocStart","blockAtDocEnd","selectionAtBlockEnd","hasChildBlocks","oldDepth","newPos","newDepth","blockEmpty","blockIndented","BlockGroup","blockGroupHTMLAttributes","Doc","getBlockNoteExtensions","opts","extensions","Gapcursor","HardBreak","Text","Link","styleSpec","a","inlineContentSpec","ext","Dropcursor","Collaboration","defaultRender","user","cursor","nonbreakingSpace1","nonbreakingSpace2","CollaborationCursor","History","disableExtensions","ex","removeChild","n","wrapTableRows","f","newItems","prevTable","newTable","nestedChild","container","removeUndefined","BlockNoteSchema","_BlockNoteTipTapEditor","TiptapEditor","cache","oldCreateAndFill","pmNodes","b","createDocument","e","EditorState","EditorView","oldSetTimeout","BlockNoteTipTapEditor","PlaceholderPlugin","placeholders","styleEl","nonce","styleSheet","getBaseSelector","additionalSelectors","getSelector","mustBeFocused","mustBeFocusedSelector","blockTypeSelector","placeholder","before","dec","nodeAttributes","PreviousBlockTypePlugin","timeout","_editorView","_prevState","currentTransactionOriginalOldBlockAttrs","oldNodes","findChildren","oldNodesById","oldNode","oldContentNode","newContentNode","newAttrs","oldAttrs","prevAttrs","decorationAttrs","decoration","blockNoteTipTapOptions","BlockNoteEditor","anyOpts","newOptions","blockNoteUIExtension","uploadFile","initialContent","tiptapOptions","_e","_g","_f","getSchema","reverse","traverseBlockArray","blockArray","nodeIndex","numNodes","prevNode","nextNode","targetBlock","end","start","editable","cb","emojiMart","getDefaultEmojiPickerItems","query","emojiMartData","emoji","setSelectionToNextContentEditableBlock","insertOrUpdateBlock","currentBlock","insertedBlock","getDefaultSlashMenuItems","filterSuggestionItems","title","aliases","alias","textShorthandToStyledText","partialContentToInlineContent","partialContent","partialBlocksToBlocksForTesting","partialBlocks","partialBlock","partialBlockToBlockForTesting","withDefaults","propKey","propValue","addIdsToBlock","addIdsToBlocks"],"mappings":"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"}